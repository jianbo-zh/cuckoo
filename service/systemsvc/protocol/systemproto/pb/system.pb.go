// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: pb/system.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystemMsg_Type int32

const (
	SystemMsg_ContactApply       SystemMsg_Type = 0
	SystemMsg_ContactApplyAck    SystemMsg_Type = 1
	SystemMsg_InviteJoinGroup    SystemMsg_Type = 2
	SystemMsg_InviteJoinGroupAck SystemMsg_Type = 3
)

// Enum value maps for SystemMsg_Type.
var (
	SystemMsg_Type_name = map[int32]string{
		0: "ContactApply",
		1: "ContactApplyAck",
		2: "InviteJoinGroup",
		3: "InviteJoinGroupAck",
	}
	SystemMsg_Type_value = map[string]int32{
		"ContactApply":       0,
		"ContactApplyAck":    1,
		"InviteJoinGroup":    2,
		"InviteJoinGroupAck": 3,
	}
)

func (x SystemMsg_Type) Enum() *SystemMsg_Type {
	p := new(SystemMsg_Type)
	*p = x
	return p
}

func (x SystemMsg_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemMsg_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_system_proto_enumTypes[0].Descriptor()
}

func (SystemMsg_Type) Type() protoreflect.EnumType {
	return &file_pb_system_proto_enumTypes[0]
}

func (x SystemMsg_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemMsg_Type.Descriptor instead.
func (SystemMsg_Type) EnumDescriptor() ([]byte, []int) {
	return file_pb_system_proto_rawDescGZIP(), []int{1, 0}
}

type SystemMsg_State int32

const (
	SystemMsg_IsSended SystemMsg_State = 0
	SystemMsg_IsAgree  SystemMsg_State = 1
	SystemMsg_IsReject SystemMsg_State = 2
)

// Enum value maps for SystemMsg_State.
var (
	SystemMsg_State_name = map[int32]string{
		0: "IsSended",
		1: "IsAgree",
		2: "IsReject",
	}
	SystemMsg_State_value = map[string]int32{
		"IsSended": 0,
		"IsAgree":  1,
		"IsReject": 2,
	}
)

func (x SystemMsg_State) Enum() *SystemMsg_State {
	p := new(SystemMsg_State)
	*p = x
	return p
}

func (x SystemMsg_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemMsg_State) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_system_proto_enumTypes[1].Descriptor()
}

func (SystemMsg_State) Type() protoreflect.EnumType {
	return &file_pb_system_proto_enumTypes[1]
}

func (x SystemMsg_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemMsg_State.Descriptor instead.
func (SystemMsg_State) EnumDescriptor() ([]byte, []int) {
	return file_pb_system_proto_rawDescGZIP(), []int{1, 1}
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId []byte `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_pb_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_pb_system_proto_rawDescGZIP(), []int{0}
}

func (x *Peer) GetPeerId() []byte {
	if x != nil {
		return x.PeerId
	}
	return nil
}

func (x *Peer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Peer) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type SystemMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AckId         string          `protobuf:"bytes,2,opt,name=ack_id,json=ackId,proto3" json:"ack_id,omitempty"`
	Type          SystemMsg_Type  `protobuf:"varint,3,opt,name=type,proto3,enum=system.pb.SystemMsg_Type" json:"type,omitempty"`
	GroupId       string          `protobuf:"bytes,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName     string          `protobuf:"bytes,5,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupAvatar   string          `protobuf:"bytes,6,opt,name=group_avatar,json=groupAvatar,proto3" json:"group_avatar,omitempty"`
	GroupLamptime uint64          `protobuf:"varint,7,opt,name=group_lamptime,json=groupLamptime,proto3" json:"group_lamptime,omitempty"`
	FromPeer      *Peer           `protobuf:"bytes,8,opt,name=from_peer,json=fromPeer,proto3" json:"from_peer,omitempty"`
	ToPeer        *Peer           `protobuf:"bytes,9,opt,name=to_peer,json=toPeer,proto3" json:"to_peer,omitempty"`
	Content       string          `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	State         SystemMsg_State `protobuf:"varint,11,opt,name=state,proto3,enum=system.pb.SystemMsg_State" json:"state,omitempty"`
	Ctime         int64           `protobuf:"varint,12,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Utime         int64           `protobuf:"varint,13,opt,name=utime,proto3" json:"utime,omitempty"`
}

func (x *SystemMsg) Reset() {
	*x = SystemMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMsg) ProtoMessage() {}

func (x *SystemMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pb_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMsg.ProtoReflect.Descriptor instead.
func (*SystemMsg) Descriptor() ([]byte, []int) {
	return file_pb_system_proto_rawDescGZIP(), []int{1}
}

func (x *SystemMsg) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SystemMsg) GetAckId() string {
	if x != nil {
		return x.AckId
	}
	return ""
}

func (x *SystemMsg) GetType() SystemMsg_Type {
	if x != nil {
		return x.Type
	}
	return SystemMsg_ContactApply
}

func (x *SystemMsg) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SystemMsg) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *SystemMsg) GetGroupAvatar() string {
	if x != nil {
		return x.GroupAvatar
	}
	return ""
}

func (x *SystemMsg) GetGroupLamptime() uint64 {
	if x != nil {
		return x.GroupLamptime
	}
	return 0
}

func (x *SystemMsg) GetFromPeer() *Peer {
	if x != nil {
		return x.FromPeer
	}
	return nil
}

func (x *SystemMsg) GetToPeer() *Peer {
	if x != nil {
		return x.ToPeer
	}
	return nil
}

func (x *SystemMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SystemMsg) GetState() SystemMsg_State {
	if x != nil {
		return x.State
	}
	return SystemMsg_IsSended
}

func (x *SystemMsg) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *SystemMsg) GetUtime() int64 {
	if x != nil {
		return x.Utime
	}
	return 0
}

var File_pb_system_proto protoreflect.FileDescriptor

var file_pb_system_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x62, 0x22, 0x4b, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xc3, 0x04, 0x0a, 0x09, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d,
	0x73, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x61, 0x6d, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x61, 0x6d, 0x70, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x06, 0x74, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x5a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x63, 0x6b, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x6b, 0x10, 0x03, 0x22, 0x30, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x73, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x67, 0x72, 0x65, 0x65, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x73, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x02, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_system_proto_rawDescOnce sync.Once
	file_pb_system_proto_rawDescData = file_pb_system_proto_rawDesc
)

func file_pb_system_proto_rawDescGZIP() []byte {
	file_pb_system_proto_rawDescOnce.Do(func() {
		file_pb_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_system_proto_rawDescData)
	})
	return file_pb_system_proto_rawDescData
}

var file_pb_system_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pb_system_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pb_system_proto_goTypes = []interface{}{
	(SystemMsg_Type)(0),  // 0: system.pb.SystemMsg.Type
	(SystemMsg_State)(0), // 1: system.pb.SystemMsg.State
	(*Peer)(nil),         // 2: system.pb.Peer
	(*SystemMsg)(nil),    // 3: system.pb.SystemMsg
}
var file_pb_system_proto_depIdxs = []int32{
	0, // 0: system.pb.SystemMsg.type:type_name -> system.pb.SystemMsg.Type
	2, // 1: system.pb.SystemMsg.from_peer:type_name -> system.pb.Peer
	2, // 2: system.pb.SystemMsg.to_peer:type_name -> system.pb.Peer
	1, // 3: system.pb.SystemMsg.state:type_name -> system.pb.SystemMsg.State
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pb_system_proto_init() }
func file_pb_system_proto_init() {
	if File_pb_system_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_system_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_system_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_system_proto_goTypes,
		DependencyIndexes: file_pb_system_proto_depIdxs,
		EnumInfos:         file_pb_system_proto_enumTypes,
		MessageInfos:      file_pb_system_proto_msgTypes,
	}.Build()
	File_pb_system_proto = out.File
	file_pb_system_proto_rawDesc = nil
	file_pb_system_proto_goTypes = nil
	file_pb_system_proto_depIdxs = nil
}
