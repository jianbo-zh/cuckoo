syntax = "proto3";

option go_package="/proto";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "xyz.tobin.chat.proto";
option java_outer_classname = "ChatProto";

package chat;

// 账号服务
service AccountSvc {
  // 创建账号
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountReply) {}
  // 账号信息
  rpc GetAccount(GetAccountRequest) returns (GetAccountReply) {}
  // 更新名称
  rpc SetAccountName(SetAccountNameRequest) returns (SetAccountNameReply) {}
  // 更新头像
  rpc SetAccountAvatar(SetAccountAvatarRequest) returns (SetAccountAvatarReply) {}
  // 设置加人是否审核
  rpc SetAutoAddContact(SetAutoAddContactRequest) returns (SetAutoAddContactReply) {}
  // 设置入群是否审核
  rpc SetAutoJoinGroup(SetAutoJoinGroupRequest) returns (SetAutoJoinGroupReply) {}
}

// 联系人服务
service ContactSvc {
  // 联系人信息
  rpc GetContact(GetContactRequest) returns (GetContactReply) {}
  // 获取联系人列表
  rpc GetContacts(GetContactsRequest) returns (GetContactsReply) {}
  // 获取指定联系人列表
  rpc GetSpecifiedContacts(GetSpecifiedContactsRequest) returns (GetSpecifiedContactsReply) {}
  // 获取附近的人
  rpc GetNearbyPeers(GetNearbyPeersRequest) returns (stream GetNearbyPeersStreamReply) {}
  // 获取单条消息
  rpc GetContactMessage(GetContactMessageRequest) returns (GetContactMessageReply) {}
  // 获取聊天记录
  rpc GetContactMessages(GetContactMessagesRequest) returns (GetContactMessagesReply) {}
  // 发送消息
  rpc SendContactMessage(SendContactMessageRequest) returns (SendContactMessageReply) {}
  // 清空聊天记录
  rpc ClearContactMessage(ClearContactMessageRequest) returns (ClearContactMessageReply) {}
  // 设置联系人别名
  rpc SetContactName(SetContactNameRequest) returns (SetContactNameReply) {}
  // 删除联系人
  rpc DeleteContact(DeleteContactRequest) returns (DeleteContactReply) {}
  // 申请添加联系人
  rpc ApplyAddContact(ApplyAddContactRequest) returns (ApplyAddContactReply) {}
}

// 群服务
service GroupSvc {
  // 创建群
  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupReply) {}
  // 获取群详情
  rpc GetGroup(GetGroupRequest) returns (GetGroupReply) {}
  // 获取群详情
  rpc GetGroupDetail(GetGroupDetailRequest) returns (GetGroupDetailReply) {}
  // 获取群列表
  rpc GetGroups(GetGroupsRequest) returns (GetGroupsReply) {}
  // 设置名称
  rpc SetGroupName(SetGroupNameRequest) returns (SetGroupNameReply) {}
  // 设置头像（管理员操作）
  rpc SetGroupAvatar(SetGroupAvatarRequest) returns (SetGroupAvatarReply) {}
  // 设置群公告
  rpc SetGroupNotice(SetGroupNoticeRequest) returns (SetGroupNoticeReply) {}
  // 设置入群是否审核
  rpc SetGroupAutoJoin(SetGroupAutoJoinRequest) returns (SetGroupAutoJoinReply) {}
  // 退出此群
  rpc ExitGroup(ExitGroupRequest) returns (ExitGroupReply) {}
  // 退出并删除此群
  rpc DeleteGroup(DeleteGroupRequest) returns (DeleteGroupReply) {}
  // 解散此群 
  rpc DisbandGroup(DisbandGroupRequest) returns (DisbandGroupReply) {}
  // 群成员列表
  rpc GetGroupMembers(GetGroupMembersRequest) returns (GetGroupMembersReply) {}
  // 移除群成员
  rpc RemoveGroupMember(RemoveGroupMemberRequest) returns (RemoveGroupMemberReply) {}
  // 发送消息
  rpc SendGroupMessage(SendGroupMessageRequest) returns (SendGroupMessageReply) {}
  // 获取聊天记录
  rpc GetGroupMessage(GetGroupMessageRequest) returns (GetGroupMessageReply) {}
  // 获取聊天记录
  rpc GetGroupMessages(GetGroupMessagesRequest) returns (GetGroupMessagesReply) {}
  // 清空聊天记录
  rpc ClearGroupMessage(ClearGroupMessageRequest) returns (ClearGroupMessageReply) {}

}

// 会话服务
service SessionSvc {
  rpc GetSessions(GetSessionsRequest) returns (GetSessionsReply) {}
}

// 系统服务
service SystemSvc {
  rpc GetSystemMessages(GetSystemMessagesRequest) returns (GetSystemMessagesReply) {}
  rpc AgreeAddContact(AgreeAddContactRequest) returns (AgreeAddContactReply) {}
  rpc RejectAddContact(RejectAddContactRequest) returns (RejectAddContactReply) {}


  rpc ClearSystemMessage(ClearSystemMessageRequest) returns (ClearSystemMessageReply) {}
}

// 消息订阅服务
service SubscribeSvc {
  rpc SubscribeCommonEvent(SubscribeCommonEventRequest) returns (stream SubscribeCommonEventReply) {}
}

// -------------------- 分隔符 --------------------
enum MsgType {
  Text = 0;
  Image = 1;
  Audio = 2;
  Video = 3;
  Unknown = 4;
}

message Result {
  int32 code = 1;
  string message = 2;
}

message CreateAccountRequest {
  string name = 1;
  string avatar = 2;
}
message CreateAccountReply {
  Result result = 1;
  Account account = 2;
}

message GetAccountRequest {}
message GetAccountReply {
  Result result = 1;
  Account account = 2;
}

message SetAccountAvatarRequest{
  string avatar = 1;
}
message SetAccountAvatarReply{
    Result result = 1;
    string avatar = 2;
}

message SetAccountNameRequest {
  string name = 1;
}
message SetAccountNameReply {
  Result result = 1;
  string name = 2;
}

message SetAutoAddContactRequest {
  bool isAuto = 1;
}

message SetAutoAddContactReply {
  Result result = 1;
  bool isAuto = 2;
}

message SetAutoJoinGroupRequest {
  bool isAuto = 1;
}

message SetAutoJoinGroupReply {
  Result result = 1;
  bool isAuto = 2;
}

// -------------------- 分隔符 --------------------
message GetContactRequest {
  string contactId = 1;
}
message GetContactReply {
  Result result = 1;
  Contact contact = 2;
}

message GetContactsRequest {
  string keywords = 1;
}
message GetContactsReply {
  Result result = 1;
  repeated Contact contacts = 2;
}

message GetSpecifiedContactsRequest {
  repeated string contactIds = 1;
}
message GetSpecifiedContactsReply {
  Result result = 1;
  repeated Contact contacts = 2;
}

message GetNearbyPeersRequest {}
message GetNearbyPeersStreamReply {
  Result result = 1;
  Peer peer = 2;
}

message GetContactMessageRequest {
  string contactId = 1;
  string MsgId = 2;
}
message GetContactMessageReply {
  Result result = 1;
  ContactMessage message = 2;
}

message GetContactMessagesRequest {
  string contactId = 1;
  int32 offset = 2;
  int32 limit = 3;
}

message GetContactMessagesReply {
  Result result = 1;
  repeated ContactMessage messages = 2;
}

message SendContactMessageRequest {
  string contactId = 1;
  MsgType msgType = 2;
  string mimeType = 3;
  bytes payload = 4;
}

message SendContactMessageReply {
  Result result = 1;
  ContactMessage message = 2;
}

message SetContactNameRequest {
  string contactId = 1;
  string name = 2;
}

message SetContactNameReply {
  Result result = 1;
  string name = 2;
}

message ClearContactMessageRequest {
  string contactId = 1;
}

message ClearContactMessageReply {
  Result result = 1;
}

message DeleteContactRequest {
  string contactId = 1;
}

message DeleteContactReply {
  Result result = 1;
}

// -------------------- 分隔符 --------------------

message CreateGroupRequest {
  string name = 1;
  string avatar = 2;
  repeated string memberIds = 3;
}
message CreateGroupReply {
  Result result = 1;
  Group group = 2;
}

message GetGroupRequest {
  string groupId = 1;
}
message GetGroupReply {
  Result result = 1;
  Group group = 2;
}

message GetGroupDetailRequest {
  string groupId = 1;
}
message GetGroupDetailReply {
  Result result = 1;
  GroupDetail group = 2;
}

message GetGroupsRequest {}
message GetGroupsReply {
  Result result = 1;
  repeated Group groups = 2;
}

message GetGroupMessageRequest {
  string groupId = 1;
  string msgId = 2;
}
message GetGroupMessageReply {
  Result result = 1;
  GroupMessage message = 2;
}

message GetGroupMessagesRequest {
  string groupId = 1;
  int32 offset = 2;
  int32 limit = 3;
}
message GetGroupMessagesReply {
  Result result = 1;
  repeated GroupMessage messages = 2;
}

message SendGroupMessageRequest {
  string groupId = 1;
  MsgType msgType = 2;
  string mimeType = 3;
  bytes payload = 4;
}
message SendGroupMessageReply {
  Result result = 1;
  GroupMessage message = 2;
}

message SetGroupAvatarRequest {
  string groupId = 1;
  string avatar = 2;
}
message SetGroupAvatarReply {
  Result result = 1;
  string avatar = 2;
}

message SetGroupNameRequest {
  string groupId = 1;
  string name = 2;
}
message SetGroupNameReply {
  Result result = 1;
  string name = 2;
}

message SetGroupNoticeRequest {
  string groupId = 1;
  string notice = 2;
}
message SetGroupNoticeReply {
  Result result = 1;
  string notice = 2;
}

message InviteJoinGroupRequest {
  string groupId = 1;
  string contactId = 2;
}
message InviteJoinGroupReply {
  Result result = 1;
}

message GetGroupMembersRequest {
  string groupId = 1;
  int32 offset = 2;
  int32 limit = 3;
  string keywords = 4;
}
message GetGroupMembersReply {
  Result result = 1;
  repeated GroupMember members = 2;
}

message RemoveGroupMemberRequest {
  string groupId = 1;
  string memberId = 2;
}
message RemoveGroupMemberReply {
  Result result = 1;
}

message SetGroupAutoJoinRequest {
  string groupId = 1;
  bool isAuto = 2;
}
message SetGroupAutoJoinReply {
  Result result = 1;
  bool isAuto = 2;
}

message ClearGroupMessageRequest {
  string groupId = 1;
}
message ClearGroupMessageReply {
  Result result = 1;
}

message ExitGroupRequest {
  string groupId = 1;
}
message ExitGroupReply {
  Result result = 1;
}

message DeleteGroupRequest {
  string groupId = 1;
}
message DeleteGroupReply {
  Result result = 1;
}

message DisbandGroupRequest {
  string groupId = 1;
}
message DisbandGroupReply {
  Result result = 1;
}

// -------------------- 分隔符 --------------------

message GetSessionsRequest {
  string sessionId = 1;
  int32 offset = 2;
  int32 limit = 3;
  string keywords = 4;
}

message GetSessionsReply {
  Result result = 1;
  repeated Session sessions = 2;
}

// -------------------- 分隔符 --------------------
message GetSystemMessagesRequest {
  int32 offset = 1;
  int32 limit = 2;
}
message GetSystemMessagesReply {
  Result result = 1;
  repeated SystemMessage messages = 2;
}

message ClearSystemMessageRequest {}
message ClearSystemMessageReply {
  Result result = 1;
}

message ApplyAddContactRequest {
  string peerId = 1;
  string name = 2;
  string avatar = 3;
  string content = 4;
}
message ApplyAddContactReply {
  Result result = 1;
}

message AgreeAddContactRequest {
  string ackMsgId = 1;
}
message AgreeAddContactReply {
  Result result = 1;
  string ackMsgId = 2;
}

message RejectAddContactRequest {
  string ackMsgId = 1;
}
message RejectAddContactReply {
  Result result = 1;
  string ackMsgId = 2;
}

message SubscribeCommonEventRequest {}
message SubscribeCommonEventReply {
  CommonEvent event = 1;
}

// -------------------- 分隔符 --------------------

message Account {
  // PeerId
  string peerId = 1;
  // 用户名称
  string name = 2;
  // 头像SHA1
  string avatar = 3;
  // 加人是否需要审核
  bool autoAddContact = 4;
  // 入群是否需要审核
  bool autoJoinGroup = 5;
}

// Peer（陌生人）
message Peer {
  // PeerId
  string id = 1;
  // 用户名称
  string name = 2;
  // 头像SHA1
  string avatar = 3;
}

// 联系人
message Contact {
  // PeerId
  string id = 1;
  // 用户名称
  string name = 2;
  // 头像SHA1
  string avatar = 3;
}

// 联系人消息
message ContactMessage {
  // 消息ID
  string id = 1;
  // 发送者
  Contact fromContact = 2;
  // 接收者
  string toContactId = 3;
  // 消息类型
  MsgType msgType = 4;
  // MIME-Type
  string mimeType = 5;
  // 消息内容
  bytes payload = 6;
  // 消息状态
  string state = 7;
  // 消息时间
  int64 createTime = 8;
}

// 群
message Group {
  // ID
  string id = 1;
  // 名称
  string name = 2;
  // Avatar
  string avatar = 3;
}

// 群会话
message GroupSession {
  // ID
  string groupId = 1;
  // 名称
  string name = 2;
  // Avatar
  string avatar = 3;
  // 最新消息
  string lastMessage = 4;
  // 更新时间
  int64 updateTime = 5;
}

// 群
message GroupDetail {
  // ID
  string groupId = 1;
  // 名称
  string name = 2;
  // Avatar
  string avatar = 3;
  // 通知公告
  string notice = 4;
  // 是否需要审核入群
  bool autoJoinGroup = 5;
  // 创建时间
  int64 createTime = 6;
  // 更新时间
  int64 updateTime = 7;
}

// 群消息
message  GroupMember {
  // PeerId
  string id = 1;
  // 用户名称
  string name = 3;
  // 头像SHA1
  string avatar = 4;
}

// 群消息
message  GroupMessage {
  // 消息ID
  string id = 1;
  // 群ID
  string groupId = 2;
  // 发送者
  Peer sender = 3;
  // 消息类型
  MsgType msgType = 4;
  // MIME类型
  string mimeType = 5;
  // 内容
  bytes payload = 6;
  // 消息时间
  int64 createTime = 7;
}

// 会话信息
message Session {
  // 会话类型
  enum SessionType {
    // 联系人会话
    ContactSession = 0;
    // 群会话
    GroupSession = 1;
  }

  // 会话类型
  SessionType type = 1;
  // 会话id（群组id或者PeerId）
  string sessionId = 2;
  // 名称
  string name = 3;
  // 头像 SHA1
  string avatar = 4;
  // 最新消息
  string lastMessage = 5;
  // 最新消息时间
  int64 lastMessageTime = 6;
  // 有未读消息
  bool haveUnreadMessage = 7;
}

// 系统消息
message SystemMessage {
  // 系统操作类型
  enum SystemType {
    // 申请加联系人
    ApplyAddContact = 0;
    // 邀请加群组
    InviteJoinGroup = 1;
  }

  string id = 1;
  SystemType systemType = 2;
  string groupId = 3;
  Peer fromPeer = 4;
  string toPeerId = 5;
  string content = 6;
  string systemState = 7;
  int64 createTime = 8;
  int64 updateTime = 9;
}

// 外部(前端)订阅消息
message CommonEvent {

  enum EventType {
    PeerMessage = 0;
    GroupMessage = 1;
  }

  message PayloadPeerMessage {
    string msgId = 1;
    string fromPeerId = 2;
  }

  message PayloadGroupMessage {
    string msgId = 1;
    string groupId = 2;
  }

  EventType type = 1;
  bytes Payload = 2;
}