syntax = "proto3";

option go_package="/proto";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "xyz.tobin.chat.proto";
option java_outer_classname = "ChatProto";

package chat;

// 账号服务
service AccountSvc {
  // 创建账号
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountReply) {}
  // 账号信息
  rpc GetAccount(GetAccountRequest) returns (GetAccountReply) {}
  // 更新名称
  rpc SetAccountName(SetAccountNameRequest) returns (SetAccountNameReply) {}
  // 更新头像
  rpc SetAccountAvatar(SetAccountAvatarRequest) returns (SetAccountAvatarReply) {}
  // 设置加人是否审核
  rpc SetAutoAddContact(SetAutoAddContactRequest) returns (SetAutoAddContactReply) {}
  // 设置入群是否审核
  rpc SetAutoJoinGroup(SetAutoJoinGroupRequest) returns (SetAutoJoinGroupReply) {}
  // 设置他人不在线时，能给对方发送寄存信息
  rpc SetAutoDepositMessage(SetAutoDepositMessageRequest) returns (SetAutoDepositMessageReply) {}
  // 设置我不在线时，消息寄存地址
  rpc SetAccountDepositAddress(SetAccountDepositAddressRequest) returns (SetAccountDepositAddressReply) {}
  // 获取二维码Token
  rpc GetAccountQRCodeToken(GetAccountQRCodeTokenRequest) returns (GetAccountQRCodeTokenReply) {}
}

// 联系人服务
service ContactSvc {
  // 联系人信息
  rpc GetContact(GetContactRequest) returns (GetContactReply) {}
  // 获取联系人列表
  rpc GetContacts(GetContactsRequest) returns (GetContactsReply) {}
  // 获取指定联系人列表
  rpc GetSpecifiedContacts(GetSpecifiedContactsRequest) returns (GetSpecifiedContactsReply) {}
  // 获取附近的人
  rpc GetNearbyPeers(GetNearbyPeersRequest) returns (stream GetNearbyPeersStreamReply) {}
  // 获取单条消息
  rpc GetContactMessage(GetContactMessageRequest) returns (GetContactMessageReply) {}
  // 获取聊天记录
  rpc GetContactMessages(GetContactMessagesRequest) returns (GetContactMessagesReply) {}
  // 清空聊天记录
  rpc ClearContactMessage(ClearContactMessageRequest) returns (ClearContactMessageReply) {}
  // 设置联系人别名
  rpc SetContactName(SetContactNameRequest) returns (SetContactNameReply) {}
  // 删除联系人
  rpc DeleteContact(DeleteContactRequest) returns (DeleteContactReply) {}
  // 申请添加联系人
  rpc ApplyAddContact(ApplyAddContactRequest) returns (ApplyAddContactReply) {}
  // 获取二维码Token
  rpc GetContactQRCodeToken(GetContactQRCodeTokenRequest) returns (GetContactQRCodeTokenReply) {}

  // 发送文本消息
  rpc SendContactTextMessage(SendContactTextMessageRequest) returns (stream SendContactMessageReply) {}
  // 发送图片消息
  rpc SendContactImageMessage(SendContactImageMessageRequest) returns (stream SendContactMessageReply) {}
  // 发送语音消息
  rpc SendContactVoiceMessage(SendContactVoiceMessageRequest) returns (stream SendContactMessageReply) {}
  // 发送音频消息
  rpc SendContactAudioMessage(SendContactAudioMessageRequest) returns (stream SendContactMessageReply) {}
  // 发送视频消息
  rpc SendContactVideoMessage(SendContactVideoMessageRequest) returns (stream SendContactMessageReply) {}
  // 发送文件消息
  rpc SendContactFileMessage(SendContactFileMessageRequest) returns (stream SendContactMessageReply) {}
}

// 群服务
service GroupSvc {
  // 创建群
  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupReply) {}
  // 获取群详情
  rpc GetGroup(GetGroupRequest) returns (GetGroupReply) {}
  // 获取群详情
  rpc GetGroupDetail(GetGroupDetailRequest) returns (GetGroupDetailReply) {}
  // 设置名称
  rpc SetGroupName(SetGroupNameRequest) returns (SetGroupNameReply) {}
  // 设置头像（管理员操作）
  rpc SetGroupAvatar(SetGroupAvatarRequest) returns (SetGroupAvatarReply) {}
  // 设置群公告
  rpc SetGroupNotice(SetGroupNoticeRequest) returns (SetGroupNoticeReply) {}
  // 设置入群是否审核
  rpc SetGroupAutoJoin(SetGroupAutoJoinRequest) returns (SetGroupAutoJoinReply) {}
  // 设置入群消息寄存地址
  rpc SetGroupDepositAddress(SetGroupDepositAddressRequest) returns (SetGroupDepositAddressReply) {}
  // 退出此群
  rpc ExitGroup(ExitGroupRequest) returns (ExitGroupReply) {}
  // 退出并删除此群
  rpc DeleteGroup(DeleteGroupRequest) returns (DeleteGroupReply) {}
  // 解散此群 
  rpc DisbandGroup(DisbandGroupRequest) returns (DisbandGroupReply) {}
  // 群成员列表
  rpc GetGroupMembers(GetGroupMembersRequest) returns (GetGroupMembersReply) {}
  // 邀请加入群
  rpc InviteJoinGroup(InviteJoinGroupRequest) returns (InviteJoinGroupReply) {}
  // 移除群成员
  rpc RemoveGroupMember(RemoveGroupMemberRequest) returns (RemoveGroupMemberReply) {}
  // 获取聊天记录
  rpc GetGroupMessage(GetGroupMessageRequest) returns (GetGroupMessageReply) {}
  // 获取聊天记录
  rpc GetGroupMessages(GetGroupMessagesRequest) returns (GetGroupMessagesReply) {}
  // 清空聊天记录
  rpc ClearGroupMessage(ClearGroupMessageRequest) returns (ClearGroupMessageReply) {}
  // 获取二维码Token
  rpc GetGroupQRCodeToken(GetGroupQRCodeTokenRequest) returns (GetGroupQRCodeTokenReply) {}

  // 发送消息
  rpc SendGroupTextMessage(SendGroupTextMessageRequest) returns (stream SendGroupMessageReply) {}
  // 发送图片消息
  rpc SendGroupImageMessage(SendGroupImageMessageRequest) returns (stream SendGroupMessageReply) {}
  // 发送语音消息
  rpc SendGroupVoiceMessage(SendGroupVoiceMessageRequest) returns (stream SendGroupMessageReply) {}
  // 发送音频消息
  rpc SendGroupAudioMessage(SendGroupAudioMessageRequest) returns (stream SendGroupMessageReply) {}
  // 发送视频消息
  rpc SendGroupVideoMessage(SendGroupVideoMessageRequest) returns (stream SendGroupMessageReply) {}
  // 发送文件消息
  rpc SendGroupFileMessage(SendGroupFileMessageRequest) returns (stream SendGroupMessageReply) {}
}

// 会话服务
service SessionSvc {
  rpc GetSessions(GetSessionsRequest) returns (GetSessionsReply) {}
}

// 系统服务
service SystemSvc {
  rpc GetSystemMessages(GetSystemMessagesRequest) returns (GetSystemMessagesReply) {}
  rpc AgreeAddContact(AgreeAddContactRequest) returns (AgreeAddContactReply) {}
  rpc RejectAddContact(RejectAddContactRequest) returns (RejectAddContactReply) {}
  rpc AgreeJoinGroup(AgreeJoinGroupRequest) returns (AgreeJoinGroupReply) {}
  rpc RejectJoinGroup(RejectJoinGroupRequest) returns (RejectJoinGroupReply) {}
  rpc DeleteSystemMessage(DeleteSystemMessageRequest) returns (DeleteSystemMessageReply) {}
}

service ConfigSvc {
  // 获取系统配置
  rpc GetConfig(GetConfigRequest) returns (GetConfigReply) {}
  // 设置引导节点
  rpc SetBootstraps(SetBootstrapsRequest) returns (SetBootstrapsReply) {}
  // 设置连接节点（中继服务节点）
  rpc SetPeeringPeers(SetPeeringPeersRequest) returns (SetPeeringPeersReply) {}
  // 设置是否启动 mdns 服务
  rpc SetEnableMDNS(SetEnableMDNSRequest) returns (SetEnableMDNSReply) {}
  // 设置是否启动寄存服务
  rpc SetEnableDepositService(SetEnableDepositServiceRequest) returns (SetEnableDepositServiceReply) {}
  // 设置默认下载路径
  rpc SetDownloadDir(SetDownloadDirRequest) returns (SetDownloadDirReply) {}
}

// 文件服务
service FileSvc {
  // 下载联系人文件
  rpc DownloadContactFile(DownloadContactFileRequest) returns (DownloadFileReply) {}
  // 下载群组文件
  rpc DownloadGroupFile(DownloadGroupFileRequest) returns (DownloadFileReply) {}
  // 获取联系人文件
  rpc GetContactFiles(GetContactFilesRequest) returns (GetFilesReply) {}
  // 获取群组文件
  rpc GetGroupFiles(GetGroupFilesRequest) returns (GetFilesReply) {}
  // 删除联系人文件
  rpc DeleteContactFile(DeleteContactFileRequest) returns (DeleteFileReply) {}
  // 删除群组文件
  rpc DeleteGroupFile(DeleteGroupFileRequest) returns (DeleteFileReply) {}
}

// 消息订阅服务
service SubscribeSvc {
  rpc SubscribeCommonEvent(SubscribeCommonEventRequest) returns (stream SubscribeCommonEventReply) {}
}

// 其他公共服务
service CommonSvc {
  rpc DecodeQRCodeToken(DecodeQRCodeTokenRequest) returns (DecodeQRCodeTokenReply) {}
}

// -------------------- 分隔符 --------------------
enum MsgType {
  Unknown = 0;
  Text = 1;
  Image = 2;
  Voice = 3;
  Audio = 4;
  Video = 5;
  File = 6;
}

// MsgState 消息发送状态
enum MsgState {
  Sending = 0;
  SendSucc = 1;
  SendFail = 2;
}

enum OnlineState {
  UnknownOnlineState = 0;
  IsOnlineState = 1;
  IsOfflineState = 2;
}

message Result {
  int32 code = 1;
  string message = 2;
}

message CreateAccountRequest {
  string name = 1;
  string imagePath = 2;
}
message CreateAccountReply {
  Result result = 1;
  Account account = 2;
}

message GetAccountRequest {}
message GetAccountReply {
  Result result = 1;
  Account account = 2;
}

message SetAccountAvatarRequest{
  string imagePath = 1;
}
message SetAccountAvatarReply{
    Result result = 1;
    string avatar = 2;
}

message SetAccountNameRequest {
  string name = 1;
}
message SetAccountNameReply {
  Result result = 1;
  string name = 2;
}

message SetAutoAddContactRequest {
  bool isAuto = 1;
}

message SetAutoAddContactReply {
  Result result = 1;
  bool isAuto = 2;
}

message SetAutoJoinGroupRequest {
  bool isAuto = 1;
}
message SetAutoJoinGroupReply {
  Result result = 1;
  bool isAuto = 2;
}

message SetAutoDepositMessageRequest {
  bool isAuto = 1;
}
message SetAutoDepositMessageReply {
  Result result = 1;
  bool isAuto = 2;
}

message SetAccountDepositAddressRequest {
  string depositAddress = 1;
}
message SetAccountDepositAddressReply {
  Result result = 1;
  string depositAddress = 2;
}

message GetAccountQRCodeTokenRequest {}
message GetAccountQRCodeTokenReply {
  Result result = 1;
  string token = 2;
}

// -------------------- 分隔符 --------------------
message GetContactRequest {
  string contactId = 1;
}
message GetContactReply {
  Result result = 1;
  Contact contact = 2;
}

message GetContactsRequest {
  string keywords = 1;
}
message GetContactsReply {
  Result result = 1;
  repeated Contact contacts = 2;
}

message GetSpecifiedContactsRequest {
  repeated string contactIds = 1;
}
message GetSpecifiedContactsReply {
  Result result = 1;
  repeated Contact contacts = 2;
}

message GetNearbyPeersRequest {}
message GetNearbyPeersStreamReply {
  Result result = 1;
  Peer peer = 2;
}

message GetContactMessageRequest {
  string contactId = 1;
  string MsgId = 2;
}
message GetContactMessageReply {
  Result result = 1;
  ContactMessage message = 2;
}

message GetContactMessagesRequest {
  string contactId = 1;
  int32 offset = 2;
  int32 limit = 3;
}

message GetContactMessagesReply {
  Result result = 1;
  repeated ContactMessage messages = 2;
}

message SendContactTextMessageRequest {
  string contactId = 1;
  string content = 4;
}
message SendContactImageMessageRequest {
  string  contactId = 1;
  string  mimeType = 2;
  string  filePath = 3;
  string  thumbnailPath = 4;
  string  name = 5;
  int64   size = 6;
  int32   width = 7;
  int32   height = 8;
}
message SendContactVoiceMessageRequest {
  string  contactId = 1;
  string  mimeType = 2;
  string  filePath = 3;
  int64   size = 4;
  int32   duration = 5;
}
message SendContactAudioMessageRequest {
  string  contactId = 1;
  string  mimeType = 2;
  string  filePath = 3;
  string  name = 4;
  int64   size = 5;
  int32   duration = 6;
}
message SendContactVideoMessageRequest {
  string  contactId = 1;
  string  mimeType = 2;
  string  filePath = 3;
  string  name = 4;
  int64   size = 5;
  int32   duration = 6;
}
message SendContactFileMessageRequest {
  string  contactId = 1;
  string  mimeType = 2;
  string  filePath = 3;
  string  name = 4;
  int64   size = 5;
}

message SendContactMessageReply {
  Result  result = 1;
  bool    isUpdated = 2;
  ContactMessage message = 3;
}

message SetContactNameRequest {
  string contactId = 1;
  string name = 2;
}

message SetContactNameReply {
  Result result = 1;
  string name = 2;
}

message ClearContactMessageRequest {
  string contactId = 1;
}

message ClearContactMessageReply {
  Result result = 1;
}

message DeleteContactRequest {
  string contactId = 1;
}

message DeleteContactReply {
  Result result = 1;
}

message GetContactQRCodeTokenRequest {
  string contactId = 1;
}
message GetContactQRCodeTokenReply {
  Result result = 1;
  string token = 2;
}


// -------------------- 分隔符 --------------------

message CreateGroupRequest {
  string name = 1;
  string imagePath = 2;
  string content = 3;
  repeated string memberIds = 4;
}
message CreateGroupReply {
  Result result = 1;
  Group group = 2;
}

message GetGroupRequest {
  string groupId = 1;
}
message GetGroupReply {
  Result result = 1;
  Group group = 2;
}

message GetGroupDetailRequest {
  string groupId = 1;
}
message GetGroupDetailReply {
  Result result = 1;
  GroupDetail group = 2;
}

message GetGroupMessageRequest {
  string groupId = 1;
  string msgId = 2;
}
message GetGroupMessageReply {
  Result result = 1;
  GroupMessage message = 2;
}

message GetGroupMessagesRequest {
  string groupId = 1;
  int32 offset = 2;
  int32 limit = 3;
}
message GetGroupMessagesReply {
  Result result = 1;
  repeated GroupMessage messages = 2;
}

message SendGroupTextMessageRequest {
  string groupId = 1;
  string content = 2;
}
message SendGroupImageMessageRequest {
  string  groupId = 1;
  string  mimeType = 2;
  string  filePath = 3;
  string  thumbnailPath = 4;
  string  name = 5;
  int64   size = 6;
  int32   width = 7;
  int32   height = 8;
}
message SendGroupVoiceMessageRequest {
  string  groupId = 1;
  string  mimeType = 2;
  string  filePath = 3;
  int64   size = 4;
  int32   duration = 5;
}
message SendGroupAudioMessageRequest {
  string  groupId = 1;
  string  mimeType = 2;
  string  filePath = 3;
  string  name = 4;
  int64   size = 5;
  int32   duration = 6;
}
message SendGroupVideoMessageRequest {
  string  groupId = 1;
  string  mimeType = 2;
  string  filePath = 3;
  string  name = 4;
  int64   size = 5;
  int32   duration = 6;
}
message SendGroupFileMessageRequest {
  string  groupId = 1;
  string  mimeType = 2;
  string  filePath = 3;
  string  name = 4;
  int64   size = 5;
}

message SendGroupMessageReply {
  Result result = 1;
  bool   isUpdated = 2;
  GroupMessage message = 3;
}

message SetGroupAvatarRequest {
  string groupId = 1;
  string avatar = 2;
}
message SetGroupAvatarReply {
  Result result = 1;
  string avatar = 2;
}

message SetGroupNameRequest {
  string groupId = 1;
  string name = 2;
}
message SetGroupNameReply {
  Result result = 1;
  string name = 2;
}

message SetGroupNoticeRequest {
  string groupId = 1;
  string notice = 2;
}
message SetGroupNoticeReply {
  Result result = 1;
  string notice = 2;
}

message InviteJoinGroupRequest {
  string groupId = 1;
  repeated string contactIds = 2;
  string content = 3;
}
message InviteJoinGroupReply {
  Result result = 1;
}

message GetGroupMembersRequest {
  string groupId = 1;
  int32 offset = 2;
  int32 limit = 3;
  string keywords = 4;
}
message GetGroupMembersReply {
  Result result = 1;
  repeated GroupMember members = 2;
}

message RemoveGroupMemberRequest {
  string groupId = 1;
  repeated string memberIds = 2;
}
message RemoveGroupMemberReply {
  Result result = 1;
}

message SetGroupAutoJoinRequest {
  string groupId = 1;
  bool isAuto = 2;
}
message SetGroupAutoJoinReply {
  Result result = 1;
  bool isAuto = 2;
}

message SetGroupDepositAddressRequest {
  string groupId = 1;
  string depositAddress = 2;
}
message SetGroupDepositAddressReply {
  Result result = 1;
  string depositAddress = 2;
}


message ClearGroupMessageRequest {
  string groupId = 1;
}
message ClearGroupMessageReply {
  Result result = 1;
}

message ExitGroupRequest {
  string groupId = 1;
}
message ExitGroupReply {
  Result result = 1;
}

message DeleteGroupRequest {
  string groupId = 1;
}
message DeleteGroupReply {
  Result result = 1;
}

message DisbandGroupRequest {
  string groupId = 1;
}
message DisbandGroupReply {
  Result result = 1;
}

message GetGroupQRCodeTokenRequest {
  string groupId = 1;
}
message GetGroupQRCodeTokenReply {
  Result result = 1;
  string token = 2;
}

// -------------------- 分隔符 --------------------

message GetSessionsRequest {
  string keywords = 4;
}

message GetSessionsReply {
  Result result = 1;
  repeated Session sessions = 2;
}

// -------------------- 分隔符 --------------------
message GetSystemMessagesRequest {
  int32 offset = 1;
  int32 limit = 2;
}
message GetSystemMessagesReply {
  Result result = 1;
  repeated SystemMessage messages = 2;
}

message DeleteSystemMessageRequest {
  repeated string messageIds = 1;
}
message DeleteSystemMessageReply {
  Result result = 1;
}

message ApplyAddContactRequest {
  string peerId = 1;
  string depositAddress = 2;
  string name = 3;
  string avatar = 4;
  string content = 5;
}
message ApplyAddContactReply {
  Result result = 1;
}

message AgreeAddContactRequest {
  string ackMsgId = 1;
}
message AgreeAddContactReply {
  Result result = 1;
  string ackMsgId = 2;
}

message RejectAddContactRequest {
  string ackMsgId = 1;
}
message RejectAddContactReply {
  Result result = 1;
  string ackMsgId = 2;
}


message AgreeJoinGroupRequest {
  string ackMsgId = 1;
}
message AgreeJoinGroupReply {
  Result result = 1;
  string ackMsgId = 2;
}

message RejectJoinGroupRequest {
  string ackMsgId = 1;
}
message RejectJoinGroupReply {
  Result result = 1;
  string ackMsgId = 2;
}



// -------------------- 分隔符 --------------------

message GetConfigRequest {}
message GetConfigReply {
  Result result = 1;
  Config config = 2;
}

message SetBootstrapsRequest {
  repeated string bootstraps = 1;
}
message SetBootstrapsReply {
  Result result = 1;
  repeated string bootstraps = 2;
}

message SetPeeringPeersRequest {
  repeated string peeringPeers = 1;
}
message SetPeeringPeersReply {
  Result result = 1;
  repeated string peeringPeers = 2;
}

message SetEnableMDNSRequest {
  bool enable = 1;
}
message SetEnableMDNSReply {
  Result result = 1;
  bool enable = 2;
}

message SetEnableDepositServiceRequest {
  bool enable = 1;
}
message SetEnableDepositServiceReply {
  Result result = 1;
  bool enableDepositService = 2;
  string depositServiceAddress = 3;
}

message SetDownloadDirRequest {
  string downloadDir = 1;
}
message SetDownloadDirReply {
  Result result = 1;
  string downloadDir = 2;
}

// -------------------- 分隔符 --------------------
message DownloadContactFileRequest {
  string id = 1;
  string msgId = 2;
  string fileId = 3;
}
message DownloadGroupFileRequest {
  string id = 1;
  string msgId = 2;
  string fileId = 3;
}
message DownloadFileReply {
  Result result = 1;
  string fileId = 2;
}

message GetContactFilesRequest {
  string id = 1;
  string keywords = 2;
  int32  offset = 3;
  int32  limit = 4;
}
message GetGroupFilesRequest {
  string id = 1;
  string keywords = 2;
  int32  offset = 3;
  int32  limit = 4;
}
message GetFilesReply {
  Result result = 1;
  repeated FileInfo files = 2;
}

message DeleteContactFileRequest {
  string id = 1;
  repeated string fileIds = 2;
}
message DeleteGroupFileRequest {
  string id = 1;
  repeated string fileIds = 2;
}
message DeleteFileReply {
  Result result = 1;
}

// -------------------- 分隔符 --------------------

message SubscribeCommonEventRequest {}
message SubscribeCommonEventReply {
  CommonEvent event = 1;
}

// -------------------- 分隔符 --------------------

message DecodeQRCodeTokenRequest {
  string token = 1;
}
message DecodeQRCodeTokenReply {
  Result result = 1;
  QRCodeToken token = 2;
}

// -------------------- 分隔符 --------------------

message Config {
  bool enableDepositService = 1;
  string depositServiceAddress = 2;
}

message Account {
  // PeerId
  string peerId = 1;
  // 用户名称
  string name = 2;
  // 头像SHA1
  string avatar = 3;
  // 加人是否需要审核
  bool autoAddContact = 4;
  // 入群是否需要审核
  bool autoJoinGroup = 5;
  // 发送离线消息
  bool autoDepositMessage = 6;
  // 离线消息寄存地址
  string depositAddress = 7;
}

// Peer（陌生人）
message Peer {
  // PeerId
  string id = 1;
  // 用户名称
  string name = 2;
  // 头像SHA1
  string avatar = 3;
  // 离线消息寄存地址
  string depositAddress = 4;
}

// ContactState 联系人状态
enum ContactState {
  UnknownContactState = 0;
  NormalContactState = 1;
  DeleteContactState = 2;
}

// 联系人
message Contact {
  // PeerId
  string id = 1;
  // 用户名称
  string name = 2;
  // 头像SHA1
  string avatar = 3;
  // 消息寄存地址
  string depositAddress = 4;
  // 状态
  ContactState state = 5;
  // 是否在线
  OnlineState onlineState = 6;
}

// 联系人消息
message ContactMessage {
  // 消息ID
  string id = 1;
  // 发送者
  Contact fromContact = 2;
  // 接收者
  string toContactId = 3;
  // 消息类型
  MsgType msgType = 4;
  // MIME-Type
  string mimeType = 5;
  // 消息内容
  bytes payload = 6;
  // 是否离线消息
  bool isDeposit = 7;
  // 消息状态
  MsgState state = 8;
  // 消息时间
  int64 createTime = 9;
}

message ImageMessagePayload {
  string thumbnailId = 1;
  string imageId = 2;
  string name = 3;
  int64  size = 4;
  int32  width = 5;
  int32  height = 6;
}

message VoiceMessagePayload {
  string  voiceId = 1;
  int32   duration = 2;
}

message AudioMessagePayload {
  string audioId = 1;
  string name = 2;
  int64  size = 3;
  int32  duration = 4;
}

message VideoMessagePayload {
  string videoId = 1;
  string name = 2;
  int64  size = 3;
  int32  duration = 4;
}

message FileMessagePayload {
  string fileId = 2;
  string name = 3;
  int64  size = 4;
}

enum GroupState {
  UnknownGroupState = 0;
  NormalGroupState = 1;
  ExitedGroupState = 2;
  DisbandGroupState = 3;
}

// 群
message Group {
  // ID
  string id = 1;
  // 创建者
  string creatorId = 2;
  // 名称
  string name = 3;
  // Avatar
  string avatar = 4;
  // 寄存PeerID
  string depositAddress = 5;
  // 状态
  GroupState state = 6;
  // 在线数量
  string onlineNum = 7;
}

// 群详情
message GroupDetail {
  // ID
  string id = 1;
  // 创建者
  string creatorId = 2;
  // 名称
  string name = 3;
  // Avatar
  string avatar = 4;
  // 通知公告
  string notice = 5;
  // 是否需要审核入群
  bool autoJoinGroup = 6;
  // 寄存PeerID
  string depositAddress = 7;
  // 状态
  GroupState state = 8;
  // 创建时间
  int64 createTime = 9;
  // 更新时间
  int64 updateTime = 10;
}

// 群消息
message  GroupMember {
  // PeerId
  string id = 1;
  // 用户名称
  string name = 2;
  // 头像SHA1
  string avatar = 3;
  // 是否在线
  OnlineState onlineState = 4;
}

// 群消息
message  GroupMessage {
  // 消息ID
  string id = 1;
  // 群ID
  string groupId = 2;
  // 发送者
  Peer sender = 3;
  // 消息类型
  MsgType msgType = 4;
  // MIME类型
  string mimeType = 5;
  // 内容
  bytes payload = 6;
  // 是否离线消息
  bool isDeposit = 7;
  // 消息状态
  MsgState state = 8;
  // 消息时间
  int64 createTime = 9;
}

// 会话类型
enum SessionType {
  // 联系人会话类型
  ContactSessionType = 0;
  // 群会话类型
  GroupSessionType = 1;
}

// 会话信息
message Session {
  // 会话类型
  SessionType type = 1;
  // 会话id
  string id = 2;
  // 关联ID（联系人ID或群组ID）
  string relId = 3;
  // 名称
  string name = 4;
  // 头像 SHA1
  string avatar = 5;
  // 在线状态
  OnlineState state = 6;
  // 最新消息
  string lastmsg = 7;
  // 有未读消息
  int32 unreads = 8;
}

// 系统消息
message SystemMessage {
  // 系统操作类型
  enum SystemType {
    // 申请加联系人
    ApplyAddContact = 0;
    // 邀请加群组
    InviteJoinGroup = 1;
  }

  string      id = 1;
  SystemType  systemType = 2;
  string      groupId = 3;
  Peer        fromPeer = 4;
  string      toPeerId = 5;
  string      content = 6;
  string      systemState = 7;
  int64       createTime = 8;
  int64       updateTime = 9;
}

// 外部(前端)订阅消息
message CommonEvent {

  enum EventType {
    PeerMessageReceived = 0;
    GroupMessageReceived = 1;
    PeerStateChanged = 2;
    GroupStateChanged = 3;
    SessionAdded = 4;
    SessionUpdated = 5;
  }

  message PayloadPeerMessage {
    string msgId = 1;
    string fromPeerId = 2;
  }

  message PayloadGroupMessage {
    string msgId = 1;
    string groupId = 2;
  }

  message PayloadPeerState {
    string peerId = 1;
    bool   online = 2;
  }

  message PayloadGroupState {
    string groupId = 1;
  }

  message AddSession {
    SessionType sessionType = 1;
    string id = 2;
    string name = 3;
    string avatar = 4;
    string relId = 5;
  }

  message PayloadSessionAdd {
    AddSession session = 1;
  }

  message SessionState {
    string id = 1;
    string lastMsg = 2;
    int32  unreads = 3;
  }

  message PayloadSessionUpdate {
    repeated SessionState sessionStates = 1;
  }

  EventType type = 1;
  bytes     payload = 2;
}

enum FileType {
  OtherFileType = 0;
  TextFileType = 1;
  ImageFileType = 2;
  VoiceFileType = 3;
  AudioFileType = 4;
  VideoFileType = 5;
}

message FileInfo {
  string    fileId = 1;
  FileType  fileType = 2;
  string    mimeType = 3;
  string    name = 4;
  int64     size = 5;
  string    thumbnailId = 6;
  int32     width = 7;
  int32     height = 8;
  int32     duration = 9;
}

message QRCodeToken {
  enum TokenType {
    Unknown = 0;
    Peer = 1;
    Group = 2;
  }

  TokenType tokenType = 1;
  string id = 2;
  string name = 3;
  string avatar = 4;
  string depositAddress = 5;
}