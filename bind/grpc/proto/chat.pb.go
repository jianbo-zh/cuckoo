// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: bind/grpc/proto/chat.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgType int32

const (
	MsgType_TEXT_MSG  MsgType = 0
	MsgType_IMAGE_MSG MsgType = 1
	MsgType_AUDIO_MSG MsgType = 2
	MsgType_VIDEO_MSG MsgType = 3
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0: "TEXT_MSG",
		1: "IMAGE_MSG",
		2: "AUDIO_MSG",
		3: "VIDEO_MSG",
	}
	MsgType_value = map[string]int32{
		"TEXT_MSG":  0,
		"IMAGE_MSG": 1,
		"AUDIO_MSG": 2,
		"VIDEO_MSG": 3,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[0].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[0]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{0}
}

type SessionType int32

const (
	SessionType_CONTACT_SESSION SessionType = 0
	SessionType_GROUP_SESSION   SessionType = 1
)

// Enum value maps for SessionType.
var (
	SessionType_name = map[int32]string{
		0: "CONTACT_SESSION",
		1: "GROUP_SESSION",
	}
	SessionType_value = map[string]int32{
		"CONTACT_SESSION": 0,
		"GROUP_SESSION":   1,
	}
)

func (x SessionType) Enum() *SessionType {
	p := new(SessionType)
	*p = x
	return p
}

func (x SessionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[1].Descriptor()
}

func (SessionType) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[1]
}

func (x SessionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionType.Descriptor instead.
func (SessionType) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{1}
}

// 系统操作类型
type SystemOperate int32

const (
	SystemOperate_APPLY_ADD_CONTACT   SystemOperate = 0
	SystemOperate_AGREE_ADD_CONTACT   SystemOperate = 1
	SystemOperate_REJECT_ADD_CONTACT  SystemOperate = 2
	SystemOperate_INVITE_JOIN_GROUP   SystemOperate = 3
	SystemOperate_APPLY_JOIN_GROUP    SystemOperate = 4
	SystemOperate_AGREE_JOIN_GROUP    SystemOperate = 5
	SystemOperate_REJECT_JOIN_CONTACT SystemOperate = 6
)

// Enum value maps for SystemOperate.
var (
	SystemOperate_name = map[int32]string{
		0: "APPLY_ADD_CONTACT",
		1: "AGREE_ADD_CONTACT",
		2: "REJECT_ADD_CONTACT",
		3: "INVITE_JOIN_GROUP",
		4: "APPLY_JOIN_GROUP",
		5: "AGREE_JOIN_GROUP",
		6: "REJECT_JOIN_CONTACT",
	}
	SystemOperate_value = map[string]int32{
		"APPLY_ADD_CONTACT":   0,
		"AGREE_ADD_CONTACT":   1,
		"REJECT_ADD_CONTACT":  2,
		"INVITE_JOIN_GROUP":   3,
		"APPLY_JOIN_GROUP":    4,
		"AGREE_JOIN_GROUP":    5,
		"REJECT_JOIN_CONTACT": 6,
	}
)

func (x SystemOperate) Enum() *SystemOperate {
	p := new(SystemOperate)
	*p = x
	return p
}

func (x SystemOperate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemOperate) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[2].Descriptor()
}

func (SystemOperate) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[2]
}

func (x SystemOperate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemOperate.Descriptor instead.
func (SystemOperate) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{2}
}

// -------------------- 分隔符 --------------------
type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Result) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Result) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar string `protobuf:"bytes,1,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAccountRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreateAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *CreateAccountReply) Reset() {
	*x = CreateAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountReply) ProtoMessage() {}

func (x *CreateAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountReply.ProtoReflect.Descriptor instead.
func (*CreateAccountReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAccountReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{3}
}

type GetAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Account *Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetAccountReply) Reset() {
	*x = GetAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountReply) ProtoMessage() {}

func (x *GetAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountReply.ProtoReflect.Descriptor instead.
func (*GetAccountReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{4}
}

func (x *GetAccountReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetAccountReply) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type SetAccountAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar string `protobuf:"bytes,1,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
}

func (x *SetAccountAvatarRequest) Reset() {
	*x = SetAccountAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountAvatarRequest) ProtoMessage() {}

func (x *SetAccountAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountAvatarRequest.ProtoReflect.Descriptor instead.
func (*SetAccountAvatarRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{5}
}

func (x *SetAccountAvatarRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type SetAccountAvatarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Avatar string  `protobuf:"bytes,2,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
}

func (x *SetAccountAvatarReply) Reset() {
	*x = SetAccountAvatarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountAvatarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountAvatarReply) ProtoMessage() {}

func (x *SetAccountAvatarReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountAvatarReply.ProtoReflect.Descriptor instead.
func (*SetAccountAvatarReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{6}
}

func (x *SetAccountAvatarReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetAccountAvatarReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type SetAccountNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *SetAccountNameRequest) Reset() {
	*x = SetAccountNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountNameRequest) ProtoMessage() {}

func (x *SetAccountNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountNameRequest.ProtoReflect.Descriptor instead.
func (*SetAccountNameRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{7}
}

func (x *SetAccountNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetAccountNameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *SetAccountNameReply) Reset() {
	*x = SetAccountNameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountNameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountNameReply) ProtoMessage() {}

func (x *SetAccountNameReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountNameReply.ProtoReflect.Descriptor instead.
func (*SetAccountNameReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{8}
}

func (x *SetAccountNameReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetAccountNameReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetAutoReviewAddContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReview bool `protobuf:"varint,1,opt,name=IsReview,proto3" json:"IsReview,omitempty"`
}

func (x *SetAutoReviewAddContactRequest) Reset() {
	*x = SetAutoReviewAddContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoReviewAddContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoReviewAddContactRequest) ProtoMessage() {}

func (x *SetAutoReviewAddContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoReviewAddContactRequest.ProtoReflect.Descriptor instead.
func (*SetAutoReviewAddContactRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{9}
}

func (x *SetAutoReviewAddContactRequest) GetIsReview() bool {
	if x != nil {
		return x.IsReview
	}
	return false
}

type SetAutoReviewAddContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	IsReview bool    `protobuf:"varint,2,opt,name=IsReview,proto3" json:"IsReview,omitempty"`
}

func (x *SetAutoReviewAddContactReply) Reset() {
	*x = SetAutoReviewAddContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoReviewAddContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoReviewAddContactReply) ProtoMessage() {}

func (x *SetAutoReviewAddContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoReviewAddContactReply.ProtoReflect.Descriptor instead.
func (*SetAutoReviewAddContactReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{10}
}

func (x *SetAutoReviewAddContactReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetAutoReviewAddContactReply) GetIsReview() bool {
	if x != nil {
		return x.IsReview
	}
	return false
}

type SetAutoReviewJoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReview bool `protobuf:"varint,1,opt,name=IsReview,proto3" json:"IsReview,omitempty"`
}

func (x *SetAutoReviewJoinGroupRequest) Reset() {
	*x = SetAutoReviewJoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoReviewJoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoReviewJoinGroupRequest) ProtoMessage() {}

func (x *SetAutoReviewJoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoReviewJoinGroupRequest.ProtoReflect.Descriptor instead.
func (*SetAutoReviewJoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{11}
}

func (x *SetAutoReviewJoinGroupRequest) GetIsReview() bool {
	if x != nil {
		return x.IsReview
	}
	return false
}

type SetAutoReviewJoinGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	IsReview bool    `protobuf:"varint,2,opt,name=IsReview,proto3" json:"IsReview,omitempty"`
}

func (x *SetAutoReviewJoinGroupReply) Reset() {
	*x = SetAutoReviewJoinGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoReviewJoinGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoReviewJoinGroupReply) ProtoMessage() {}

func (x *SetAutoReviewJoinGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoReviewJoinGroupReply.ProtoReflect.Descriptor instead.
func (*SetAutoReviewJoinGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{12}
}

func (x *SetAutoReviewJoinGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetAutoReviewJoinGroupReply) GetIsReview() bool {
	if x != nil {
		return x.IsReview
	}
	return false
}

// -------------------- 分隔符 --------------------
type AddContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID  string `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *AddContactRequest) Reset() {
	*x = AddContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactRequest) ProtoMessage() {}

func (x *AddContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactRequest.ProtoReflect.Descriptor instead.
func (*AddContactRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{13}
}

func (x *AddContactRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *AddContactRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	PeerID string  `protobuf:"bytes,2,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
}

func (x *AddContactReply) Reset() {
	*x = AddContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactReply) ProtoMessage() {}

func (x *AddContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactReply.ProtoReflect.Descriptor instead.
func (*AddContactReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{14}
}

func (x *AddContactReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AddContactReply) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type GetContactListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,1,opt,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *GetContactListRequest) Reset() {
	*x = GetContactListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactListRequest) ProtoMessage() {}

func (x *GetContactListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactListRequest.ProtoReflect.Descriptor instead.
func (*GetContactListRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{15}
}

func (x *GetContactListRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type GetContactListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *Result    `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	ContactList []*Contact `protobuf:"bytes,2,rep,name=contactList,proto3" json:"contactList,omitempty"`
}

func (x *GetContactListReply) Reset() {
	*x = GetContactListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactListReply) ProtoMessage() {}

func (x *GetContactListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactListReply.ProtoReflect.Descriptor instead.
func (*GetContactListReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{16}
}

func (x *GetContactListReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactListReply) GetContactList() []*Contact {
	if x != nil {
		return x.ContactList
	}
	return nil
}

type GetContactIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetContactIDsRequest) Reset() {
	*x = GetContactIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactIDsRequest) ProtoMessage() {}

func (x *GetContactIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactIDsRequest.ProtoReflect.Descriptor instead.
func (*GetContactIDsRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{17}
}

type GetContactIDsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	PeerIDs []string `protobuf:"bytes,2,rep,name=PeerIDs,proto3" json:"PeerIDs,omitempty"`
}

func (x *GetContactIDsReply) Reset() {
	*x = GetContactIDsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactIDsReply) ProtoMessage() {}

func (x *GetContactIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactIDsReply.ProtoReflect.Descriptor instead.
func (*GetContactIDsReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{18}
}

func (x *GetContactIDsReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactIDsReply) GetPeerIDs() []string {
	if x != nil {
		return x.PeerIDs
	}
	return nil
}

type GetSpecifiedContactListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerIDs []string `protobuf:"bytes,1,rep,name=PeerIDs,proto3" json:"PeerIDs,omitempty"`
}

func (x *GetSpecifiedContactListRequest) Reset() {
	*x = GetSpecifiedContactListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecifiedContactListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecifiedContactListRequest) ProtoMessage() {}

func (x *GetSpecifiedContactListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecifiedContactListRequest.ProtoReflect.Descriptor instead.
func (*GetSpecifiedContactListRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{19}
}

func (x *GetSpecifiedContactListRequest) GetPeerIDs() []string {
	if x != nil {
		return x.PeerIDs
	}
	return nil
}

type GetSpecifiedContactListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *Result    `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	ContactList []*Contact `protobuf:"bytes,2,rep,name=contactList,proto3" json:"contactList,omitempty"`
}

func (x *GetSpecifiedContactListReply) Reset() {
	*x = GetSpecifiedContactListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecifiedContactListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecifiedContactListReply) ProtoMessage() {}

func (x *GetSpecifiedContactListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecifiedContactListReply.ProtoReflect.Descriptor instead.
func (*GetSpecifiedContactListReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{20}
}

func (x *GetSpecifiedContactListReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetSpecifiedContactListReply) GetContactList() []*Contact {
	if x != nil {
		return x.ContactList
	}
	return nil
}

type GetNearbyContactListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNearbyContactListRequest) Reset() {
	*x = GetNearbyContactListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNearbyContactListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNearbyContactListRequest) ProtoMessage() {}

func (x *GetNearbyContactListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNearbyContactListRequest.ProtoReflect.Descriptor instead.
func (*GetNearbyContactListRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{21}
}

type GetNearbyContactListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *Result    `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	ContactList []*Contact `protobuf:"bytes,2,rep,name=contactList,proto3" json:"contactList,omitempty"`
}

func (x *GetNearbyContactListReply) Reset() {
	*x = GetNearbyContactListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNearbyContactListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNearbyContactListReply) ProtoMessage() {}

func (x *GetNearbyContactListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNearbyContactListReply.ProtoReflect.Descriptor instead.
func (*GetNearbyContactListReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{22}
}

func (x *GetNearbyContactListReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetNearbyContactListReply) GetContactList() []*Contact {
	if x != nil {
		return x.ContactList
	}
	return nil
}

type GetContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID string `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
}

func (x *GetContactRequest) Reset() {
	*x = GetContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactRequest) ProtoMessage() {}

func (x *GetContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactRequest.ProtoReflect.Descriptor instead.
func (*GetContactRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{23}
}

func (x *GetContactRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type GetContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Contact *Contact `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *GetContactReply) Reset() {
	*x = GetContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactReply) ProtoMessage() {}

func (x *GetContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactReply.ProtoReflect.Descriptor instead.
func (*GetContactReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{24}
}

func (x *GetContactReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactReply) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type GetContactMessageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID          string `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	OldestMessageID string `protobuf:"bytes,2,opt,name=OldestMessageID,proto3" json:"OldestMessageID,omitempty"`
	LatestMessageID string `protobuf:"bytes,3,opt,name=LatestMessageID,proto3" json:"LatestMessageID,omitempty"`
	Limit           int32  `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetContactMessageListRequest) Reset() {
	*x = GetContactMessageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactMessageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactMessageListRequest) ProtoMessage() {}

func (x *GetContactMessageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactMessageListRequest.ProtoReflect.Descriptor instead.
func (*GetContactMessageListRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{25}
}

func (x *GetContactMessageListRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *GetContactMessageListRequest) GetOldestMessageID() string {
	if x != nil {
		return x.OldestMessageID
	}
	return ""
}

func (x *GetContactMessageListRequest) GetLatestMessageID() string {
	if x != nil {
		return x.LatestMessageID
	}
	return ""
}

func (x *GetContactMessageListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetContactMessageListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *Result           `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	MessageList []*ContactMessage `protobuf:"bytes,2,rep,name=MessageList,proto3" json:"MessageList,omitempty"`
}

func (x *GetContactMessageListReply) Reset() {
	*x = GetContactMessageListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactMessageListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactMessageListReply) ProtoMessage() {}

func (x *GetContactMessageListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactMessageListReply.ProtoReflect.Descriptor instead.
func (*GetContactMessageListReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{26}
}

func (x *GetContactMessageListReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactMessageListReply) GetMessageList() []*ContactMessage {
	if x != nil {
		return x.MessageList
	}
	return nil
}

type SendContactMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID   string  `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	MsgType  MsgType `protobuf:"varint,2,opt,name=MsgType,proto3,enum=chat.MsgType" json:"MsgType,omitempty"`
	MimeType string  `protobuf:"bytes,3,opt,name=MimeType,proto3" json:"MimeType,omitempty"`
	Data     []byte  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SendContactMessageRequest) Reset() {
	*x = SendContactMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactMessageRequest) ProtoMessage() {}

func (x *SendContactMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactMessageRequest.ProtoReflect.Descriptor instead.
func (*SendContactMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{27}
}

func (x *SendContactMessageRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *SendContactMessageRequest) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_TEXT_MSG
}

func (x *SendContactMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendContactMessageRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendContactMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SendContactMessageReply) Reset() {
	*x = SendContactMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactMessageReply) ProtoMessage() {}

func (x *SendContactMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactMessageReply.ProtoReflect.Descriptor instead.
func (*SendContactMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{28}
}

func (x *SendContactMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SetContactAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID string `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	Alias  string `protobuf:"bytes,2,opt,name=Alias,proto3" json:"Alias,omitempty"`
}

func (x *SetContactAliasRequest) Reset() {
	*x = SetContactAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetContactAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetContactAliasRequest) ProtoMessage() {}

func (x *SetContactAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetContactAliasRequest.ProtoReflect.Descriptor instead.
func (*SetContactAliasRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{29}
}

func (x *SetContactAliasRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *SetContactAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type SetContactAliasReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Alias  string  `protobuf:"bytes,2,opt,name=Alias,proto3" json:"Alias,omitempty"`
}

func (x *SetContactAliasReply) Reset() {
	*x = SetContactAliasReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetContactAliasReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetContactAliasReply) ProtoMessage() {}

func (x *SetContactAliasReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetContactAliasReply.ProtoReflect.Descriptor instead.
func (*SetContactAliasReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{30}
}

func (x *SetContactAliasReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetContactAliasReply) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type ClearContactMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID string `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
}

func (x *ClearContactMessageRequest) Reset() {
	*x = ClearContactMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearContactMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearContactMessageRequest) ProtoMessage() {}

func (x *ClearContactMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearContactMessageRequest.ProtoReflect.Descriptor instead.
func (*ClearContactMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{31}
}

func (x *ClearContactMessageRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type ClearContactMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *ClearContactMessageReply) Reset() {
	*x = ClearContactMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearContactMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearContactMessageReply) ProtoMessage() {}

func (x *ClearContactMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearContactMessageReply.ProtoReflect.Descriptor instead.
func (*ClearContactMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{32}
}

func (x *ClearContactMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID string `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
}

func (x *DeleteContactRequest) Reset() {
	*x = DeleteContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContactRequest) ProtoMessage() {}

func (x *DeleteContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContactRequest.ProtoReflect.Descriptor instead.
func (*DeleteContactRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteContactRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type DeleteContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DeleteContactReply) Reset() {
	*x = DeleteContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContactReply) ProtoMessage() {}

func (x *DeleteContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContactReply.ProtoReflect.Descriptor instead.
func (*DeleteContactReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteContactReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar  string   `protobuf:"bytes,1,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	PeerIDs []string `protobuf:"bytes,3,rep,name=PeerIDs,proto3" json:"PeerIDs,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{35}
}

func (x *CreateGroupRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreateGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGroupRequest) GetPeerIDs() []string {
	if x != nil {
		return x.PeerIDs
	}
	return nil
}

type CreateGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *CreateGroupReply) Reset() {
	*x = CreateGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReply) ProtoMessage() {}

func (x *CreateGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReply.ProtoReflect.Descriptor instead.
func (*CreateGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{36}
}

func (x *CreateGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetGroupListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGroupListRequest) Reset() {
	*x = GetGroupListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupListRequest) ProtoMessage() {}

func (x *GetGroupListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupListRequest.ProtoReflect.Descriptor instead.
func (*GetGroupListRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{37}
}

type GetGroupListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *Result      `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	GroupList []*GroupBase `protobuf:"bytes,2,rep,name=groupList,proto3" json:"groupList,omitempty"`
}

func (x *GetGroupListReply) Reset() {
	*x = GetGroupListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupListReply) ProtoMessage() {}

func (x *GetGroupListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupListReply.ProtoReflect.Descriptor instead.
func (*GetGroupListReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{38}
}

func (x *GetGroupListReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupListReply) GetGroupList() []*GroupBase {
	if x != nil {
		return x.GroupList
	}
	return nil
}

type GetGroupBaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *GetGroupBaseRequest) Reset() {
	*x = GetGroupBaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupBaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupBaseRequest) ProtoMessage() {}

func (x *GetGroupBaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupBaseRequest.ProtoReflect.Descriptor instead.
func (*GetGroupBaseRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{39}
}

func (x *GetGroupBaseRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type GetGroupBaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result    `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Group  *GroupBase `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetGroupBaseReply) Reset() {
	*x = GetGroupBaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupBaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupBaseReply) ProtoMessage() {}

func (x *GetGroupBaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupBaseReply.ProtoReflect.Descriptor instead.
func (*GetGroupBaseReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{40}
}

func (x *GetGroupBaseReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupBaseReply) GetGroup() *GroupBase {
	if x != nil {
		return x.Group
	}
	return nil
}

type GetGroupFullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *GetGroupFullRequest) Reset() {
	*x = GetGroupFullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupFullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupFullRequest) ProtoMessage() {}

func (x *GetGroupFullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupFullRequest.ProtoReflect.Descriptor instead.
func (*GetGroupFullRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{41}
}

func (x *GetGroupFullRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type GetGroupFullReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result    `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Group  *GroupFull `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetGroupFullReply) Reset() {
	*x = GetGroupFullReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupFullReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupFullReply) ProtoMessage() {}

func (x *GetGroupFullReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupFullReply.ProtoReflect.Descriptor instead.
func (*GetGroupFullReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{42}
}

func (x *GetGroupFullReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupFullReply) GetGroup() *GroupFull {
	if x != nil {
		return x.Group
	}
	return nil
}

type GetGroupMessageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID         string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	OldestMessageID string `protobuf:"bytes,2,opt,name=OldestMessageID,proto3" json:"OldestMessageID,omitempty"`
	LatestMessageID string `protobuf:"bytes,3,opt,name=LatestMessageID,proto3" json:"LatestMessageID,omitempty"`
	Limit           int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetGroupMessageListRequest) Reset() {
	*x = GetGroupMessageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMessageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMessageListRequest) ProtoMessage() {}

func (x *GetGroupMessageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMessageListRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMessageListRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{43}
}

func (x *GetGroupMessageListRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetGroupMessageListRequest) GetOldestMessageID() string {
	if x != nil {
		return x.OldestMessageID
	}
	return ""
}

func (x *GetGroupMessageListRequest) GetLatestMessageID() string {
	if x != nil {
		return x.LatestMessageID
	}
	return ""
}

func (x *GetGroupMessageListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetGroupMessageListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *Result         `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	MessageList []*GroupMessage `protobuf:"bytes,2,rep,name=MessageList,proto3" json:"MessageList,omitempty"`
}

func (x *GetGroupMessageListReply) Reset() {
	*x = GetGroupMessageListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMessageListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMessageListReply) ProtoMessage() {}

func (x *GetGroupMessageListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMessageListReply.ProtoReflect.Descriptor instead.
func (*GetGroupMessageListReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{44}
}

func (x *GetGroupMessageListReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupMessageListReply) GetMessageList() []*GroupMessage {
	if x != nil {
		return x.MessageList
	}
	return nil
}

type SendGroupMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string  `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	MsgType  MsgType `protobuf:"varint,2,opt,name=MsgType,proto3,enum=chat.MsgType" json:"MsgType,omitempty"`
	MimeType string  `protobuf:"bytes,3,opt,name=MimeType,proto3" json:"MimeType,omitempty"`
	Data     []byte  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SendGroupMessageRequest) Reset() {
	*x = SendGroupMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupMessageRequest) ProtoMessage() {}

func (x *SendGroupMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupMessageRequest.ProtoReflect.Descriptor instead.
func (*SendGroupMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{45}
}

func (x *SendGroupMessageRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SendGroupMessageRequest) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_TEXT_MSG
}

func (x *SendGroupMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendGroupMessageRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendGroupMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SendGroupMessageReply) Reset() {
	*x = SendGroupMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupMessageReply) ProtoMessage() {}

func (x *SendGroupMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupMessageReply.ProtoReflect.Descriptor instead.
func (*SendGroupMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{46}
}

func (x *SendGroupMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SetGroupAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Avatar  string `protobuf:"bytes,2,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
}

func (x *SetGroupAvatarRequest) Reset() {
	*x = SetGroupAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupAvatarRequest) ProtoMessage() {}

func (x *SetGroupAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupAvatarRequest.ProtoReflect.Descriptor instead.
func (*SetGroupAvatarRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{47}
}

func (x *SetGroupAvatarRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SetGroupAvatarRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type SetGroupAvatarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SetGroupAvatarReply) Reset() {
	*x = SetGroupAvatarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupAvatarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupAvatarReply) ProtoMessage() {}

func (x *SetGroupAvatarReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupAvatarReply.ProtoReflect.Descriptor instead.
func (*SetGroupAvatarReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{48}
}

func (x *SetGroupAvatarReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SetGroupAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Alias   string `protobuf:"bytes,2,opt,name=Alias,proto3" json:"Alias,omitempty"`
}

func (x *SetGroupAliasRequest) Reset() {
	*x = SetGroupAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupAliasRequest) ProtoMessage() {}

func (x *SetGroupAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupAliasRequest.ProtoReflect.Descriptor instead.
func (*SetGroupAliasRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{49}
}

func (x *SetGroupAliasRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SetGroupAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type SetGroupAliasReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SetGroupAliasReply) Reset() {
	*x = SetGroupAliasReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupAliasReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupAliasReply) ProtoMessage() {}

func (x *SetGroupAliasReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupAliasReply.ProtoReflect.Descriptor instead.
func (*SetGroupAliasReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{50}
}

func (x *SetGroupAliasReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SetGroupNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Notice  string `protobuf:"bytes,2,opt,name=Notice,proto3" json:"Notice,omitempty"`
}

func (x *SetGroupNoticeRequest) Reset() {
	*x = SetGroupNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupNoticeRequest) ProtoMessage() {}

func (x *SetGroupNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupNoticeRequest.ProtoReflect.Descriptor instead.
func (*SetGroupNoticeRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{51}
}

func (x *SetGroupNoticeRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SetGroupNoticeRequest) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

type SetGroupNoticeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Notice string  `protobuf:"bytes,2,opt,name=Notice,proto3" json:"Notice,omitempty"`
}

func (x *SetGroupNoticeReply) Reset() {
	*x = SetGroupNoticeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupNoticeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupNoticeReply) ProtoMessage() {}

func (x *SetGroupNoticeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupNoticeReply.ProtoReflect.Descriptor instead.
func (*SetGroupNoticeReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{52}
}

func (x *SetGroupNoticeReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetGroupNoticeReply) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

type InviteJoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	PeerID  string `protobuf:"bytes,2,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
}

func (x *InviteJoinGroupRequest) Reset() {
	*x = InviteJoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteJoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteJoinGroupRequest) ProtoMessage() {}

func (x *InviteJoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteJoinGroupRequest.ProtoReflect.Descriptor instead.
func (*InviteJoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{53}
}

func (x *InviteJoinGroupRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *InviteJoinGroupRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type InviteJoinGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *InviteJoinGroupReply) Reset() {
	*x = InviteJoinGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteJoinGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteJoinGroupReply) ProtoMessage() {}

func (x *InviteJoinGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteJoinGroupReply.ProtoReflect.Descriptor instead.
func (*InviteJoinGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{54}
}

func (x *InviteJoinGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetGroupMemberListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Offset   int32  `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit    int32  `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Keywords string `protobuf:"bytes,4,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
}

func (x *GetGroupMemberListRequest) Reset() {
	*x = GetGroupMemberListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListRequest) ProtoMessage() {}

func (x *GetGroupMemberListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{55}
}

func (x *GetGroupMemberListRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetGroupMemberListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetGroupMemberListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetGroupMemberListRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type GetGroupMemberListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     *Result        `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	MemberList []*GroupMember `protobuf:"bytes,2,rep,name=memberList,proto3" json:"memberList,omitempty"`
}

func (x *GetGroupMemberListReply) Reset() {
	*x = GetGroupMemberListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListReply) ProtoMessage() {}

func (x *GetGroupMemberListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListReply.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{56}
}

func (x *GetGroupMemberListReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupMemberListReply) GetMemberList() []*GroupMember {
	if x != nil {
		return x.MemberList
	}
	return nil
}

type RemoveGroupMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	PeerID  string `protobuf:"bytes,2,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
}

func (x *RemoveGroupMemberRequest) Reset() {
	*x = RemoveGroupMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupMemberRequest) ProtoMessage() {}

func (x *RemoveGroupMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveGroupMemberRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{57}
}

func (x *RemoveGroupMemberRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *RemoveGroupMemberRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type RemoveGroupMemberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RemoveGroupMemberReply) Reset() {
	*x = RemoveGroupMemberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupMemberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupMemberReply) ProtoMessage() {}

func (x *RemoveGroupMemberReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupMemberReply.ProtoReflect.Descriptor instead.
func (*RemoveGroupMemberReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{58}
}

func (x *RemoveGroupMemberReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SetJoinGroupReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	IsReview bool   `protobuf:"varint,2,opt,name=IsReview,proto3" json:"IsReview,omitempty"`
}

func (x *SetJoinGroupReviewRequest) Reset() {
	*x = SetJoinGroupReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJoinGroupReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJoinGroupReviewRequest) ProtoMessage() {}

func (x *SetJoinGroupReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJoinGroupReviewRequest.ProtoReflect.Descriptor instead.
func (*SetJoinGroupReviewRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{59}
}

func (x *SetJoinGroupReviewRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SetJoinGroupReviewRequest) GetIsReview() bool {
	if x != nil {
		return x.IsReview
	}
	return false
}

type SetJoinGroupReviewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	IsReview bool    `protobuf:"varint,2,opt,name=IsReview,proto3" json:"IsReview,omitempty"`
}

func (x *SetJoinGroupReviewReply) Reset() {
	*x = SetJoinGroupReviewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJoinGroupReviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJoinGroupReviewReply) ProtoMessage() {}

func (x *SetJoinGroupReviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJoinGroupReviewReply.ProtoReflect.Descriptor instead.
func (*SetJoinGroupReviewReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{60}
}

func (x *SetJoinGroupReviewReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetJoinGroupReviewReply) GetIsReview() bool {
	if x != nil {
		return x.IsReview
	}
	return false
}

type ClearGroupMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *ClearGroupMessageRequest) Reset() {
	*x = ClearGroupMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearGroupMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearGroupMessageRequest) ProtoMessage() {}

func (x *ClearGroupMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearGroupMessageRequest.ProtoReflect.Descriptor instead.
func (*ClearGroupMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{61}
}

func (x *ClearGroupMessageRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type ClearGroupMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *ClearGroupMessageReply) Reset() {
	*x = ClearGroupMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearGroupMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearGroupMessageReply) ProtoMessage() {}

func (x *ClearGroupMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearGroupMessageReply.ProtoReflect.Descriptor instead.
func (*ClearGroupMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{62}
}

func (x *ClearGroupMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type ExitGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *ExitGroupRequest) Reset() {
	*x = ExitGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitGroupRequest) ProtoMessage() {}

func (x *ExitGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitGroupRequest.ProtoReflect.Descriptor instead.
func (*ExitGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{63}
}

func (x *ExitGroupRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type ExitGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *ExitGroupReply) Reset() {
	*x = ExitGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitGroupReply) ProtoMessage() {}

func (x *ExitGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitGroupReply.ProtoReflect.Descriptor instead.
func (*ExitGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{64}
}

func (x *ExitGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{65}
}

func (x *DeleteGroupRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type DeleteGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DeleteGroupReply) Reset() {
	*x = DeleteGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupReply) ProtoMessage() {}

func (x *DeleteGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupReply.ProtoReflect.Descriptor instead.
func (*DeleteGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{66}
}

func (x *DeleteGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetSessionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	Offset    int32  `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Keywords  string `protobuf:"bytes,4,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
}

func (x *GetSessionListRequest) Reset() {
	*x = GetSessionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionListRequest) ProtoMessage() {}

func (x *GetSessionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionListRequest.ProtoReflect.Descriptor instead.
func (*GetSessionListRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{67}
}

func (x *GetSessionListRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *GetSessionListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSessionListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSessionListRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type GetSessionListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *Result    `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	SessionList []*Session `protobuf:"bytes,2,rep,name=sessionList,proto3" json:"sessionList,omitempty"`
}

func (x *GetSessionListReply) Reset() {
	*x = GetSessionListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionListReply) ProtoMessage() {}

func (x *GetSessionListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionListReply.ProtoReflect.Descriptor instead.
func (*GetSessionListReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{68}
}

func (x *GetSessionListReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetSessionListReply) GetSessionList() []*Session {
	if x != nil {
		return x.SessionList
	}
	return nil
}

// -------------------- 分隔符 --------------------
type GetMessageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMessageListRequest) Reset() {
	*x = GetMessageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageListRequest) ProtoMessage() {}

func (x *GetMessageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageListRequest.ProtoReflect.Descriptor instead.
func (*GetMessageListRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{69}
}

type GetMessageListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *Result          `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	MessageList []*SystemMessage `protobuf:"bytes,2,rep,name=messageList,proto3" json:"messageList,omitempty"`
}

func (x *GetMessageListReply) Reset() {
	*x = GetMessageListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageListReply) ProtoMessage() {}

func (x *GetMessageListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageListReply.ProtoReflect.Descriptor instead.
func (*GetMessageListReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{70}
}

func (x *GetMessageListReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetMessageListReply) GetMessageList() []*SystemMessage {
	if x != nil {
		return x.MessageList
	}
	return nil
}

type ClearSystemMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearSystemMessageRequest) Reset() {
	*x = ClearSystemMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearSystemMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearSystemMessageRequest) ProtoMessage() {}

func (x *ClearSystemMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearSystemMessageRequest.ProtoReflect.Descriptor instead.
func (*ClearSystemMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{71}
}

type ClearSystemMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ClearSystemMessageReply) Reset() {
	*x = ClearSystemMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearSystemMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearSystemMessageReply) ProtoMessage() {}

func (x *ClearSystemMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearSystemMessageReply.ProtoReflect.Descriptor instead.
func (*ClearSystemMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{72}
}

func (x *ClearSystemMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerID
	PeerID string `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	// 头像SHA1
	Avatar string `protobuf:"bytes,2,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	// 用户名称
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	// 加人是否需要审核
	AddContactWithoutReview bool `protobuf:"varint,4,opt,name=AddContactWithoutReview,proto3" json:"AddContactWithoutReview,omitempty"`
	// 入群是否需要审核
	JoinGroupWithoutReview bool `protobuf:"varint,5,opt,name=JoinGroupWithoutReview,proto3" json:"JoinGroupWithoutReview,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{73}
}

func (x *Account) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *Account) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account) GetAddContactWithoutReview() bool {
	if x != nil {
		return x.AddContactWithoutReview
	}
	return false
}

func (x *Account) GetJoinGroupWithoutReview() bool {
	if x != nil {
		return x.JoinGroupWithoutReview
	}
	return false
}

// 联系人
type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerID
	PeerID string `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	// 头像SHA1
	Avatar string `protobuf:"bytes,2,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	// 用户名称
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	// 用户昵称
	Alias string `protobuf:"bytes,4,opt,name=Alias,proto3" json:"Alias,omitempty"`
	// 最新消息
	LastMessage string `protobuf:"bytes,5,opt,name=LastMessage,proto3" json:"LastMessage,omitempty"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,6,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{74}
}

func (x *Contact) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *Contact) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Contact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Contact) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

func (x *Contact) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 联系人消息
type ContactMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 消息ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// 发送者
	Sender *Contact `protobuf:"bytes,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	// 接收者
	Receiver *Contact `protobuf:"bytes,3,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	// 消息类型
	MsgType MsgType `protobuf:"varint,4,opt,name=MsgType,proto3,enum=chat.MsgType" json:"MsgType,omitempty"`
	// MIME-Type
	MimeType string `protobuf:"bytes,5,opt,name=MimeType,proto3" json:"MimeType,omitempty"`
	// 消息内容
	Data []byte `protobuf:"bytes,6,opt,name=Data,proto3" json:"Data,omitempty"`
	// 消息时间
	CreateTime int64 `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *ContactMessage) Reset() {
	*x = ContactMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactMessage) ProtoMessage() {}

func (x *ContactMessage) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactMessage.ProtoReflect.Descriptor instead.
func (*ContactMessage) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{75}
}

func (x *ContactMessage) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ContactMessage) GetSender() *Contact {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *ContactMessage) GetReceiver() *Contact {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *ContactMessage) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_TEXT_MSG
}

func (x *ContactMessage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ContactMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ContactMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 群
type GroupBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	// Avatar
	Avatar string `protobuf:"bytes,2,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	// 名称
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	// 别名
	Alias string `protobuf:"bytes,4,opt,name=Alias,proto3" json:"Alias,omitempty"`
	// 最新消息
	LastMessage string `protobuf:"bytes,5,opt,name=LastMessage,proto3" json:"LastMessage,omitempty"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,6,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
}

func (x *GroupBase) Reset() {
	*x = GroupBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBase) ProtoMessage() {}

func (x *GroupBase) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupBase.ProtoReflect.Descriptor instead.
func (*GroupBase) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{76}
}

func (x *GroupBase) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GroupBase) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupBase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupBase) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *GroupBase) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

func (x *GroupBase) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 群
type GroupFull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	// Avatar
	Avatar string `protobuf:"bytes,2,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	// 名称
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	// 别名
	Alias string `protobuf:"bytes,4,opt,name=Alias,proto3" json:"Alias,omitempty"`
	// 通知公告
	Notice string `protobuf:"bytes,5,opt,name=Notice,proto3" json:"Notice,omitempty"`
	// 管理员
	Admin *Contact `protobuf:"bytes,6,opt,name=Admin,proto3" json:"Admin,omitempty"`
	// 是否需要审核入群
	JoinGroupWithoutReview bool `protobuf:"varint,8,opt,name=JoinGroupWithoutReview,proto3" json:"JoinGroupWithoutReview,omitempty"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,9,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,10,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
}

func (x *GroupFull) Reset() {
	*x = GroupFull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupFull) ProtoMessage() {}

func (x *GroupFull) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupFull.ProtoReflect.Descriptor instead.
func (*GroupFull) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{77}
}

func (x *GroupFull) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GroupFull) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupFull) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupFull) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *GroupFull) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *GroupFull) GetAdmin() *Contact {
	if x != nil {
		return x.Admin
	}
	return nil
}

func (x *GroupFull) GetJoinGroupWithoutReview() bool {
	if x != nil {
		return x.JoinGroupWithoutReview
	}
	return false
}

func (x *GroupFull) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GroupFull) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 群消息
type GroupMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerID
	PeerID string `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	// 群ID
	GroupID string `protobuf:"bytes,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	// 头像SHA1
	Avatar string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	// 用户名称
	Name string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	// 用户昵称
	Alias string `protobuf:"bytes,5,opt,name=Alias,proto3" json:"Alias,omitempty"`
}

func (x *GroupMember) Reset() {
	*x = GroupMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMember) ProtoMessage() {}

func (x *GroupMember) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMember.ProtoReflect.Descriptor instead.
func (*GroupMember) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{78}
}

func (x *GroupMember) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *GroupMember) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GroupMember) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupMember) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupMember) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

// 群消息
type GroupMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 消息ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// 群ID
	GroupID string `protobuf:"bytes,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	// 发送者
	Sender *Contact `protobuf:"bytes,3,opt,name=Sender,proto3" json:"Sender,omitempty"`
	// 消息类型
	MsgType MsgType `protobuf:"varint,4,opt,name=MsgType,proto3,enum=chat.MsgType" json:"MsgType,omitempty"`
	// MIME-Type
	MimeType string `protobuf:"bytes,5,opt,name=MimeType,proto3" json:"MimeType,omitempty"`
	// 内容
	Data []byte `protobuf:"bytes,6,opt,name=Data,proto3" json:"Data,omitempty"`
	// 消息时间
	CreateTime int64 `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *GroupMessage) Reset() {
	*x = GroupMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessage) ProtoMessage() {}

func (x *GroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessage.ProtoReflect.Descriptor instead.
func (*GroupMessage) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{79}
}

func (x *GroupMessage) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GroupMessage) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GroupMessage) GetSender() *Contact {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *GroupMessage) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_TEXT_MSG
}

func (x *GroupMessage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *GroupMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GroupMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 会话信息
type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会话类型
	SessionType SessionType `protobuf:"varint,1,opt,name=SessionType,proto3,enum=chat.SessionType" json:"SessionType,omitempty"`
	// 会话ID（群组ID或者PeerID）
	SessionID string `protobuf:"bytes,2,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	// 头像 SHA1
	Avatar string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	// 名称
	Name string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	// 最新消息
	LastMessage string `protobuf:"bytes,5,opt,name=LastMessage,proto3" json:"LastMessage,omitempty"`
	// 最新消息时间
	LastMessageTime int64 `protobuf:"varint,6,opt,name=LastMessageTime,proto3" json:"LastMessageTime,omitempty"`
	// 有未读消息
	HaveUnreadMessage bool `protobuf:"varint,7,opt,name=HaveUnreadMessage,proto3" json:"HaveUnreadMessage,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{80}
}

func (x *Session) GetSessionType() SessionType {
	if x != nil {
		return x.SessionType
	}
	return SessionType_CONTACT_SESSION
}

func (x *Session) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *Session) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Session) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Session) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

func (x *Session) GetLastMessageTime() int64 {
	if x != nil {
		return x.LastMessageTime
	}
	return 0
}

func (x *Session) GetHaveUnreadMessage() bool {
	if x != nil {
		return x.HaveUnreadMessage
	}
	return false
}

// 系统消息
type SystemMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string        `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SystemOperate SystemOperate `protobuf:"varint,2,opt,name=SystemOperate,proto3,enum=chat.SystemOperate" json:"SystemOperate,omitempty"`
	GroupID       string        `protobuf:"bytes,3,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Sender        *Contact      `protobuf:"bytes,4,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver      *Contact      `protobuf:"bytes,5,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Content       string        `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	CreateTime    int32         `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *SystemMessage) Reset() {
	*x = SystemMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMessage) ProtoMessage() {}

func (x *SystemMessage) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMessage.ProtoReflect.Descriptor instead.
func (*SystemMessage) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{81}
}

func (x *SystemMessage) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SystemMessage) GetSystemOperate() SystemOperate {
	if x != nil {
		return x.SystemOperate
	}
	return SystemOperate_APPLY_ADD_CONTACT
}

func (x *SystemMessage) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SystemMessage) GetSender() *Contact {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *SystemMessage) GetReceiver() *Contact {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *SystemMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SystemMessage) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

var File_bind_grpc_proto_chat_proto protoreflect.FileDescriptor

var file_bind_grpc_proto_chat_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x62, 0x69, 0x6e, 0x64, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x68,
	0x61, 0x74, 0x22, 0x36, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x60, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x31, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x22, 0x55, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x2b, 0x0a, 0x15, 0x53,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x1e, 0x53, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49,
	0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x60, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x49, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x49, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3b, 0x0a, 0x1d, 0x53, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x5f, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49,
	0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x45, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4f,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x33, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x22, 0x6c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x73,
	0x22, 0x3a, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0x75, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x72, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x60, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28,
	0x0a, 0x0f, 0x4f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x0b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x07, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x4d, 0x73, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x46, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x52, 0x0a, 0x14,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x22, 0x34, 0x0a, 0x1a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x5a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x73,
	0x22, 0x38, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x68, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x60, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x2f,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22,
	0x60, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0xa0, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x6c,
	0x64, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x4f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x76, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a,
	0x17, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x12, 0x27, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a, 0x15, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x49, 0x0a, 0x15, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x3b, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x46, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x3a, 0x0a, 0x12, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x49, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x22, 0x53, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x4a, 0x0a, 0x16, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x3c, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x7f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0x72, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x51, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x5b, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x22, 0x34, 0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x16, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2c, 0x0a, 0x10, 0x45, 0x78, 0x69,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22,
	0x38, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7f, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x6c, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x72, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35,
	0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x3f, 0x0a, 0x17, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x36, 0x0a,
	0x16, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0xa5, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4c,
	0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xeb, 0x01,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x25, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x27, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9c, 0x02, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x36,
	0x0a, 0x16, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x69, 0x74, 0x68, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x07,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x82, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x4c, 0x61, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x48, 0x61, 0x76, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x48, 0x61, 0x76, 0x65, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x0d, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x39, 0x0a, 0x0d,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x12, 0x25, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0x44, 0x0a,
	0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x58, 0x54,
	0x5f, 0x4d, 0x53, 0x47, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f,
	0x4d, 0x53, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x4d,
	0x53, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x4d, 0x53,
	0x47, 0x10, 0x03, 0x2a, 0x35, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x2a, 0xb1, 0x01, 0x0a, 0x0d, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11,
	0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43,
	0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x47, 0x52, 0x45, 0x45, 0x5f, 0x41, 0x44, 0x44,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45,
	0x4a, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x4a, 0x4f, 0x49,
	0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x50, 0x50,
	0x4c, 0x59, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x04, 0x12,
	0x14, 0x0a, 0x10, 0x41, 0x47, 0x52, 0x45, 0x45, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x5f,
	0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x10, 0x06, 0x32, 0xfe,
	0x03, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x76, 0x63, 0x12, 0x47, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x16, 0x53,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32,
	0x92, 0x07, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x76, 0x63, 0x12, 0x3e,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x44, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x61,
	0x72, 0x62, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x12, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x13, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x32, 0xd6, 0x09, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x76,
	0x63, 0x12, 0x41, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x75, 0x6c, 0x6c,
	0x12, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x09, 0x45, 0x78, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x58, 0x0a,
	0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x76, 0x63, 0x12, 0x4a, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xb5, 0x01, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x76, 0x63, 0x12, 0x50, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x12, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42,
	0x2e, 0x0a, 0x14, 0x78, 0x79, 0x7a, 0x2e, 0x74, 0x6f, 0x62, 0x69, 0x6e, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bind_grpc_proto_chat_proto_rawDescOnce sync.Once
	file_bind_grpc_proto_chat_proto_rawDescData = file_bind_grpc_proto_chat_proto_rawDesc
)

func file_bind_grpc_proto_chat_proto_rawDescGZIP() []byte {
	file_bind_grpc_proto_chat_proto_rawDescOnce.Do(func() {
		file_bind_grpc_proto_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_bind_grpc_proto_chat_proto_rawDescData)
	})
	return file_bind_grpc_proto_chat_proto_rawDescData
}

var file_bind_grpc_proto_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_bind_grpc_proto_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 82)
var file_bind_grpc_proto_chat_proto_goTypes = []interface{}{
	(MsgType)(0),                           // 0: chat.MsgType
	(SessionType)(0),                       // 1: chat.SessionType
	(SystemOperate)(0),                     // 2: chat.SystemOperate
	(*Result)(nil),                         // 3: chat.Result
	(*CreateAccountRequest)(nil),           // 4: chat.CreateAccountRequest
	(*CreateAccountReply)(nil),             // 5: chat.CreateAccountReply
	(*GetAccountRequest)(nil),              // 6: chat.GetAccountRequest
	(*GetAccountReply)(nil),                // 7: chat.GetAccountReply
	(*SetAccountAvatarRequest)(nil),        // 8: chat.SetAccountAvatarRequest
	(*SetAccountAvatarReply)(nil),          // 9: chat.SetAccountAvatarReply
	(*SetAccountNameRequest)(nil),          // 10: chat.SetAccountNameRequest
	(*SetAccountNameReply)(nil),            // 11: chat.SetAccountNameReply
	(*SetAutoReviewAddContactRequest)(nil), // 12: chat.SetAutoReviewAddContactRequest
	(*SetAutoReviewAddContactReply)(nil),   // 13: chat.SetAutoReviewAddContactReply
	(*SetAutoReviewJoinGroupRequest)(nil),  // 14: chat.SetAutoReviewJoinGroupRequest
	(*SetAutoReviewJoinGroupReply)(nil),    // 15: chat.SetAutoReviewJoinGroupReply
	(*AddContactRequest)(nil),              // 16: chat.AddContactRequest
	(*AddContactReply)(nil),                // 17: chat.AddContactReply
	(*GetContactListRequest)(nil),          // 18: chat.GetContactListRequest
	(*GetContactListReply)(nil),            // 19: chat.GetContactListReply
	(*GetContactIDsRequest)(nil),           // 20: chat.GetContactIDsRequest
	(*GetContactIDsReply)(nil),             // 21: chat.GetContactIDsReply
	(*GetSpecifiedContactListRequest)(nil), // 22: chat.GetSpecifiedContactListRequest
	(*GetSpecifiedContactListReply)(nil),   // 23: chat.GetSpecifiedContactListReply
	(*GetNearbyContactListRequest)(nil),    // 24: chat.GetNearbyContactListRequest
	(*GetNearbyContactListReply)(nil),      // 25: chat.GetNearbyContactListReply
	(*GetContactRequest)(nil),              // 26: chat.GetContactRequest
	(*GetContactReply)(nil),                // 27: chat.GetContactReply
	(*GetContactMessageListRequest)(nil),   // 28: chat.GetContactMessageListRequest
	(*GetContactMessageListReply)(nil),     // 29: chat.GetContactMessageListReply
	(*SendContactMessageRequest)(nil),      // 30: chat.SendContactMessageRequest
	(*SendContactMessageReply)(nil),        // 31: chat.SendContactMessageReply
	(*SetContactAliasRequest)(nil),         // 32: chat.SetContactAliasRequest
	(*SetContactAliasReply)(nil),           // 33: chat.SetContactAliasReply
	(*ClearContactMessageRequest)(nil),     // 34: chat.ClearContactMessageRequest
	(*ClearContactMessageReply)(nil),       // 35: chat.ClearContactMessageReply
	(*DeleteContactRequest)(nil),           // 36: chat.DeleteContactRequest
	(*DeleteContactReply)(nil),             // 37: chat.DeleteContactReply
	(*CreateGroupRequest)(nil),             // 38: chat.CreateGroupRequest
	(*CreateGroupReply)(nil),               // 39: chat.CreateGroupReply
	(*GetGroupListRequest)(nil),            // 40: chat.GetGroupListRequest
	(*GetGroupListReply)(nil),              // 41: chat.GetGroupListReply
	(*GetGroupBaseRequest)(nil),            // 42: chat.GetGroupBaseRequest
	(*GetGroupBaseReply)(nil),              // 43: chat.GetGroupBaseReply
	(*GetGroupFullRequest)(nil),            // 44: chat.GetGroupFullRequest
	(*GetGroupFullReply)(nil),              // 45: chat.GetGroupFullReply
	(*GetGroupMessageListRequest)(nil),     // 46: chat.GetGroupMessageListRequest
	(*GetGroupMessageListReply)(nil),       // 47: chat.GetGroupMessageListReply
	(*SendGroupMessageRequest)(nil),        // 48: chat.SendGroupMessageRequest
	(*SendGroupMessageReply)(nil),          // 49: chat.SendGroupMessageReply
	(*SetGroupAvatarRequest)(nil),          // 50: chat.SetGroupAvatarRequest
	(*SetGroupAvatarReply)(nil),            // 51: chat.SetGroupAvatarReply
	(*SetGroupAliasRequest)(nil),           // 52: chat.SetGroupAliasRequest
	(*SetGroupAliasReply)(nil),             // 53: chat.SetGroupAliasReply
	(*SetGroupNoticeRequest)(nil),          // 54: chat.SetGroupNoticeRequest
	(*SetGroupNoticeReply)(nil),            // 55: chat.SetGroupNoticeReply
	(*InviteJoinGroupRequest)(nil),         // 56: chat.InviteJoinGroupRequest
	(*InviteJoinGroupReply)(nil),           // 57: chat.InviteJoinGroupReply
	(*GetGroupMemberListRequest)(nil),      // 58: chat.GetGroupMemberListRequest
	(*GetGroupMemberListReply)(nil),        // 59: chat.GetGroupMemberListReply
	(*RemoveGroupMemberRequest)(nil),       // 60: chat.RemoveGroupMemberRequest
	(*RemoveGroupMemberReply)(nil),         // 61: chat.RemoveGroupMemberReply
	(*SetJoinGroupReviewRequest)(nil),      // 62: chat.SetJoinGroupReviewRequest
	(*SetJoinGroupReviewReply)(nil),        // 63: chat.SetJoinGroupReviewReply
	(*ClearGroupMessageRequest)(nil),       // 64: chat.ClearGroupMessageRequest
	(*ClearGroupMessageReply)(nil),         // 65: chat.ClearGroupMessageReply
	(*ExitGroupRequest)(nil),               // 66: chat.ExitGroupRequest
	(*ExitGroupReply)(nil),                 // 67: chat.ExitGroupReply
	(*DeleteGroupRequest)(nil),             // 68: chat.DeleteGroupRequest
	(*DeleteGroupReply)(nil),               // 69: chat.DeleteGroupReply
	(*GetSessionListRequest)(nil),          // 70: chat.GetSessionListRequest
	(*GetSessionListReply)(nil),            // 71: chat.GetSessionListReply
	(*GetMessageListRequest)(nil),          // 72: chat.GetMessageListRequest
	(*GetMessageListReply)(nil),            // 73: chat.GetMessageListReply
	(*ClearSystemMessageRequest)(nil),      // 74: chat.ClearSystemMessageRequest
	(*ClearSystemMessageReply)(nil),        // 75: chat.ClearSystemMessageReply
	(*Account)(nil),                        // 76: chat.Account
	(*Contact)(nil),                        // 77: chat.Contact
	(*ContactMessage)(nil),                 // 78: chat.ContactMessage
	(*GroupBase)(nil),                      // 79: chat.GroupBase
	(*GroupFull)(nil),                      // 80: chat.GroupFull
	(*GroupMember)(nil),                    // 81: chat.GroupMember
	(*GroupMessage)(nil),                   // 82: chat.GroupMessage
	(*Session)(nil),                        // 83: chat.Session
	(*SystemMessage)(nil),                  // 84: chat.SystemMessage
}
var file_bind_grpc_proto_chat_proto_depIdxs = []int32{
	3,  // 0: chat.CreateAccountReply.Result:type_name -> chat.Result
	3,  // 1: chat.GetAccountReply.Result:type_name -> chat.Result
	76, // 2: chat.GetAccountReply.account:type_name -> chat.Account
	3,  // 3: chat.SetAccountAvatarReply.Result:type_name -> chat.Result
	3,  // 4: chat.SetAccountNameReply.Result:type_name -> chat.Result
	3,  // 5: chat.SetAutoReviewAddContactReply.Result:type_name -> chat.Result
	3,  // 6: chat.SetAutoReviewJoinGroupReply.Result:type_name -> chat.Result
	3,  // 7: chat.AddContactReply.Result:type_name -> chat.Result
	3,  // 8: chat.GetContactListReply.Result:type_name -> chat.Result
	77, // 9: chat.GetContactListReply.contactList:type_name -> chat.Contact
	3,  // 10: chat.GetContactIDsReply.Result:type_name -> chat.Result
	3,  // 11: chat.GetSpecifiedContactListReply.Result:type_name -> chat.Result
	77, // 12: chat.GetSpecifiedContactListReply.contactList:type_name -> chat.Contact
	3,  // 13: chat.GetNearbyContactListReply.Result:type_name -> chat.Result
	77, // 14: chat.GetNearbyContactListReply.contactList:type_name -> chat.Contact
	3,  // 15: chat.GetContactReply.Result:type_name -> chat.Result
	77, // 16: chat.GetContactReply.contact:type_name -> chat.Contact
	3,  // 17: chat.GetContactMessageListReply.Result:type_name -> chat.Result
	78, // 18: chat.GetContactMessageListReply.MessageList:type_name -> chat.ContactMessage
	0,  // 19: chat.SendContactMessageRequest.MsgType:type_name -> chat.MsgType
	3,  // 20: chat.SendContactMessageReply.Result:type_name -> chat.Result
	3,  // 21: chat.SetContactAliasReply.Result:type_name -> chat.Result
	3,  // 22: chat.ClearContactMessageReply.Result:type_name -> chat.Result
	3,  // 23: chat.DeleteContactReply.Result:type_name -> chat.Result
	3,  // 24: chat.CreateGroupReply.Result:type_name -> chat.Result
	3,  // 25: chat.GetGroupListReply.Result:type_name -> chat.Result
	79, // 26: chat.GetGroupListReply.groupList:type_name -> chat.GroupBase
	3,  // 27: chat.GetGroupBaseReply.Result:type_name -> chat.Result
	79, // 28: chat.GetGroupBaseReply.group:type_name -> chat.GroupBase
	3,  // 29: chat.GetGroupFullReply.Result:type_name -> chat.Result
	80, // 30: chat.GetGroupFullReply.group:type_name -> chat.GroupFull
	3,  // 31: chat.GetGroupMessageListReply.Result:type_name -> chat.Result
	82, // 32: chat.GetGroupMessageListReply.MessageList:type_name -> chat.GroupMessage
	0,  // 33: chat.SendGroupMessageRequest.MsgType:type_name -> chat.MsgType
	3,  // 34: chat.SendGroupMessageReply.Result:type_name -> chat.Result
	3,  // 35: chat.SetGroupAvatarReply.Result:type_name -> chat.Result
	3,  // 36: chat.SetGroupAliasReply.Result:type_name -> chat.Result
	3,  // 37: chat.SetGroupNoticeReply.Result:type_name -> chat.Result
	3,  // 38: chat.InviteJoinGroupReply.Result:type_name -> chat.Result
	3,  // 39: chat.GetGroupMemberListReply.Result:type_name -> chat.Result
	81, // 40: chat.GetGroupMemberListReply.memberList:type_name -> chat.GroupMember
	3,  // 41: chat.RemoveGroupMemberReply.Result:type_name -> chat.Result
	3,  // 42: chat.SetJoinGroupReviewReply.Result:type_name -> chat.Result
	3,  // 43: chat.ClearGroupMessageReply.Result:type_name -> chat.Result
	3,  // 44: chat.ExitGroupReply.Result:type_name -> chat.Result
	3,  // 45: chat.DeleteGroupReply.Result:type_name -> chat.Result
	3,  // 46: chat.GetSessionListReply.Result:type_name -> chat.Result
	83, // 47: chat.GetSessionListReply.sessionList:type_name -> chat.Session
	3,  // 48: chat.GetMessageListReply.result:type_name -> chat.Result
	84, // 49: chat.GetMessageListReply.messageList:type_name -> chat.SystemMessage
	3,  // 50: chat.ClearSystemMessageReply.result:type_name -> chat.Result
	77, // 51: chat.ContactMessage.Sender:type_name -> chat.Contact
	77, // 52: chat.ContactMessage.Receiver:type_name -> chat.Contact
	0,  // 53: chat.ContactMessage.MsgType:type_name -> chat.MsgType
	77, // 54: chat.GroupFull.Admin:type_name -> chat.Contact
	77, // 55: chat.GroupMessage.Sender:type_name -> chat.Contact
	0,  // 56: chat.GroupMessage.MsgType:type_name -> chat.MsgType
	1,  // 57: chat.Session.SessionType:type_name -> chat.SessionType
	2,  // 58: chat.SystemMessage.SystemOperate:type_name -> chat.SystemOperate
	77, // 59: chat.SystemMessage.Sender:type_name -> chat.Contact
	77, // 60: chat.SystemMessage.Receiver:type_name -> chat.Contact
	4,  // 61: chat.AccountSvc.CreateAccount:input_type -> chat.CreateAccountRequest
	6,  // 62: chat.AccountSvc.GetAccount:input_type -> chat.GetAccountRequest
	8,  // 63: chat.AccountSvc.SetAccountAvatar:input_type -> chat.SetAccountAvatarRequest
	10, // 64: chat.AccountSvc.SetAccountName:input_type -> chat.SetAccountNameRequest
	12, // 65: chat.AccountSvc.SetAutoReviewAddContact:input_type -> chat.SetAutoReviewAddContactRequest
	14, // 66: chat.AccountSvc.SetAutoReviewJoinGroup:input_type -> chat.SetAutoReviewJoinGroupRequest
	16, // 67: chat.ContactSvc.AddContact:input_type -> chat.AddContactRequest
	18, // 68: chat.ContactSvc.GetContactList:input_type -> chat.GetContactListRequest
	20, // 69: chat.ContactSvc.GetContactIDs:input_type -> chat.GetContactIDsRequest
	22, // 70: chat.ContactSvc.GetSpecifiedContactList:input_type -> chat.GetSpecifiedContactListRequest
	24, // 71: chat.ContactSvc.GetNearbyContactList:input_type -> chat.GetNearbyContactListRequest
	26, // 72: chat.ContactSvc.GetContact:input_type -> chat.GetContactRequest
	28, // 73: chat.ContactSvc.GetContactMessageList:input_type -> chat.GetContactMessageListRequest
	30, // 74: chat.ContactSvc.SendContactMessage:input_type -> chat.SendContactMessageRequest
	32, // 75: chat.ContactSvc.SetContactAlias:input_type -> chat.SetContactAliasRequest
	34, // 76: chat.ContactSvc.ClearContactMessage:input_type -> chat.ClearContactMessageRequest
	36, // 77: chat.ContactSvc.DeleteContact:input_type -> chat.DeleteContactRequest
	38, // 78: chat.GroupSvc.CreateGroup:input_type -> chat.CreateGroupRequest
	40, // 79: chat.GroupSvc.GetGroupList:input_type -> chat.GetGroupListRequest
	42, // 80: chat.GroupSvc.GetGroupBase:input_type -> chat.GetGroupBaseRequest
	44, // 81: chat.GroupSvc.GetGroupFull:input_type -> chat.GetGroupFullRequest
	46, // 82: chat.GroupSvc.GetGroupMessageList:input_type -> chat.GetGroupMessageListRequest
	48, // 83: chat.GroupSvc.SendGroupMessage:input_type -> chat.SendGroupMessageRequest
	50, // 84: chat.GroupSvc.SetGroupAvatar:input_type -> chat.SetGroupAvatarRequest
	52, // 85: chat.GroupSvc.SetGroupAlias:input_type -> chat.SetGroupAliasRequest
	54, // 86: chat.GroupSvc.SetGroupNotice:input_type -> chat.SetGroupNoticeRequest
	56, // 87: chat.GroupSvc.InviteJoinGroup:input_type -> chat.InviteJoinGroupRequest
	58, // 88: chat.GroupSvc.GetGroupMemberList:input_type -> chat.GetGroupMemberListRequest
	60, // 89: chat.GroupSvc.RemoveGroupMember:input_type -> chat.RemoveGroupMemberRequest
	62, // 90: chat.GroupSvc.SetJoinGroupReview:input_type -> chat.SetJoinGroupReviewRequest
	64, // 91: chat.GroupSvc.ClearGroupMessage:input_type -> chat.ClearGroupMessageRequest
	66, // 92: chat.GroupSvc.ExitGroup:input_type -> chat.ExitGroupRequest
	68, // 93: chat.GroupSvc.DeleteGroup:input_type -> chat.DeleteGroupRequest
	70, // 94: chat.SessionSvc.GetSessionList:input_type -> chat.GetSessionListRequest
	72, // 95: chat.SystemSvc.GetSystemMessageList:input_type -> chat.GetMessageListRequest
	74, // 96: chat.SystemSvc.ClearSystemMessage:input_type -> chat.ClearSystemMessageRequest
	5,  // 97: chat.AccountSvc.CreateAccount:output_type -> chat.CreateAccountReply
	7,  // 98: chat.AccountSvc.GetAccount:output_type -> chat.GetAccountReply
	9,  // 99: chat.AccountSvc.SetAccountAvatar:output_type -> chat.SetAccountAvatarReply
	11, // 100: chat.AccountSvc.SetAccountName:output_type -> chat.SetAccountNameReply
	13, // 101: chat.AccountSvc.SetAutoReviewAddContact:output_type -> chat.SetAutoReviewAddContactReply
	15, // 102: chat.AccountSvc.SetAutoReviewJoinGroup:output_type -> chat.SetAutoReviewJoinGroupReply
	17, // 103: chat.ContactSvc.AddContact:output_type -> chat.AddContactReply
	19, // 104: chat.ContactSvc.GetContactList:output_type -> chat.GetContactListReply
	21, // 105: chat.ContactSvc.GetContactIDs:output_type -> chat.GetContactIDsReply
	23, // 106: chat.ContactSvc.GetSpecifiedContactList:output_type -> chat.GetSpecifiedContactListReply
	25, // 107: chat.ContactSvc.GetNearbyContactList:output_type -> chat.GetNearbyContactListReply
	27, // 108: chat.ContactSvc.GetContact:output_type -> chat.GetContactReply
	29, // 109: chat.ContactSvc.GetContactMessageList:output_type -> chat.GetContactMessageListReply
	31, // 110: chat.ContactSvc.SendContactMessage:output_type -> chat.SendContactMessageReply
	33, // 111: chat.ContactSvc.SetContactAlias:output_type -> chat.SetContactAliasReply
	35, // 112: chat.ContactSvc.ClearContactMessage:output_type -> chat.ClearContactMessageReply
	37, // 113: chat.ContactSvc.DeleteContact:output_type -> chat.DeleteContactReply
	39, // 114: chat.GroupSvc.CreateGroup:output_type -> chat.CreateGroupReply
	41, // 115: chat.GroupSvc.GetGroupList:output_type -> chat.GetGroupListReply
	43, // 116: chat.GroupSvc.GetGroupBase:output_type -> chat.GetGroupBaseReply
	45, // 117: chat.GroupSvc.GetGroupFull:output_type -> chat.GetGroupFullReply
	47, // 118: chat.GroupSvc.GetGroupMessageList:output_type -> chat.GetGroupMessageListReply
	49, // 119: chat.GroupSvc.SendGroupMessage:output_type -> chat.SendGroupMessageReply
	51, // 120: chat.GroupSvc.SetGroupAvatar:output_type -> chat.SetGroupAvatarReply
	53, // 121: chat.GroupSvc.SetGroupAlias:output_type -> chat.SetGroupAliasReply
	55, // 122: chat.GroupSvc.SetGroupNotice:output_type -> chat.SetGroupNoticeReply
	57, // 123: chat.GroupSvc.InviteJoinGroup:output_type -> chat.InviteJoinGroupReply
	59, // 124: chat.GroupSvc.GetGroupMemberList:output_type -> chat.GetGroupMemberListReply
	61, // 125: chat.GroupSvc.RemoveGroupMember:output_type -> chat.RemoveGroupMemberReply
	63, // 126: chat.GroupSvc.SetJoinGroupReview:output_type -> chat.SetJoinGroupReviewReply
	65, // 127: chat.GroupSvc.ClearGroupMessage:output_type -> chat.ClearGroupMessageReply
	67, // 128: chat.GroupSvc.ExitGroup:output_type -> chat.ExitGroupReply
	69, // 129: chat.GroupSvc.DeleteGroup:output_type -> chat.DeleteGroupReply
	71, // 130: chat.SessionSvc.GetSessionList:output_type -> chat.GetSessionListReply
	73, // 131: chat.SystemSvc.GetSystemMessageList:output_type -> chat.GetMessageListReply
	75, // 132: chat.SystemSvc.ClearSystemMessage:output_type -> chat.ClearSystemMessageReply
	97, // [97:133] is the sub-list for method output_type
	61, // [61:97] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() { file_bind_grpc_proto_chat_proto_init() }
func file_bind_grpc_proto_chat_proto_init() {
	if File_bind_grpc_proto_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bind_grpc_proto_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountAvatarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountNameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoReviewAddContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoReviewAddContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoReviewJoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoReviewJoinGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactIDsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecifiedContactListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecifiedContactListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNearbyContactListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNearbyContactListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactMessageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactMessageListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetContactAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetContactAliasReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearContactMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearContactMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupBaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupBaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupFullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupFullReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMessageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMessageListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupAvatarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupAliasReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupNoticeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteJoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteJoinGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupMemberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJoinGroupReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJoinGroupReviewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearGroupMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearGroupMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearSystemMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearSystemMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupFull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bind_grpc_proto_chat_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   82,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_bind_grpc_proto_chat_proto_goTypes,
		DependencyIndexes: file_bind_grpc_proto_chat_proto_depIdxs,
		EnumInfos:         file_bind_grpc_proto_chat_proto_enumTypes,
		MessageInfos:      file_bind_grpc_proto_chat_proto_msgTypes,
	}.Build()
	File_bind_grpc_proto_chat_proto = out.File
	file_bind_grpc_proto_chat_proto_rawDesc = nil
	file_bind_grpc_proto_chat_proto_goTypes = nil
	file_bind_grpc_proto_chat_proto_depIdxs = nil
}
