// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: bind/grpc/proto/chat.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// -------------------- 分隔符 --------------------
type MsgType int32

const (
	MsgType_Unknown MsgType = 0
	MsgType_Text    MsgType = 1
	MsgType_Image   MsgType = 2
	MsgType_Voice   MsgType = 3
	MsgType_Audio   MsgType = 4
	MsgType_Video   MsgType = 5
	MsgType_File    MsgType = 6
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0: "Unknown",
		1: "Text",
		2: "Image",
		3: "Voice",
		4: "Audio",
		5: "Video",
		6: "File",
	}
	MsgType_value = map[string]int32{
		"Unknown": 0,
		"Text":    1,
		"Image":   2,
		"Voice":   3,
		"Audio":   4,
		"Video":   5,
		"File":    6,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[0].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[0]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{0}
}

// MsgState 消息发送状态
type MsgState int32

const (
	MsgState_Sending  MsgState = 0
	MsgState_SendSucc MsgState = 1
	MsgState_SendFail MsgState = 2
)

// Enum value maps for MsgState.
var (
	MsgState_name = map[int32]string{
		0: "Sending",
		1: "SendSucc",
		2: "SendFail",
	}
	MsgState_value = map[string]int32{
		"Sending":  0,
		"SendSucc": 1,
		"SendFail": 2,
	}
)

func (x MsgState) Enum() *MsgState {
	p := new(MsgState)
	*p = x
	return p
}

func (x MsgState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgState) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[1].Descriptor()
}

func (MsgState) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[1]
}

func (x MsgState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgState.Descriptor instead.
func (MsgState) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{1}
}

type ConnState int32

const (
	ConnState_OnlineState  ConnState = 0
	ConnState_OfflineState ConnState = 1
	ConnState_UnknownState ConnState = 2
)

// Enum value maps for ConnState.
var (
	ConnState_name = map[int32]string{
		0: "OnlineState",
		1: "OfflineState",
		2: "UnknownState",
	}
	ConnState_value = map[string]int32{
		"OnlineState":  0,
		"OfflineState": 1,
		"UnknownState": 2,
	}
)

func (x ConnState) Enum() *ConnState {
	p := new(ConnState)
	*p = x
	return p
}

func (x ConnState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnState) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[2].Descriptor()
}

func (ConnState) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[2]
}

func (x ConnState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnState.Descriptor instead.
func (ConnState) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{2}
}

type FileType int32

const (
	FileType_OtherFileType FileType = 0
	FileType_TextFileType  FileType = 1
	FileType_ImageFileType FileType = 2
	FileType_VoiceFileType FileType = 3
	FileType_AudioFileType FileType = 4
	FileType_VideoFileType FileType = 5
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "OtherFileType",
		1: "TextFileType",
		2: "ImageFileType",
		3: "VoiceFileType",
		4: "AudioFileType",
		5: "VideoFileType",
	}
	FileType_value = map[string]int32{
		"OtherFileType": 0,
		"TextFileType":  1,
		"ImageFileType": 2,
		"VoiceFileType": 3,
		"AudioFileType": 4,
		"VideoFileType": 5,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[3].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[3]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{3}
}

// 会话类型
type Session_SessionType int32

const (
	// 联系人会话
	Session_ContactSession Session_SessionType = 0
	// 群会话
	Session_GroupSession Session_SessionType = 1
)

// Enum value maps for Session_SessionType.
var (
	Session_SessionType_name = map[int32]string{
		0: "ContactSession",
		1: "GroupSession",
	}
	Session_SessionType_value = map[string]int32{
		"ContactSession": 0,
		"GroupSession":   1,
	}
)

func (x Session_SessionType) Enum() *Session_SessionType {
	p := new(Session_SessionType)
	*p = x
	return p
}

func (x Session_SessionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Session_SessionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[4].Descriptor()
}

func (Session_SessionType) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[4]
}

func (x Session_SessionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Session_SessionType.Descriptor instead.
func (Session_SessionType) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{144, 0}
}

// 系统操作类型
type SystemMessage_SystemType int32

const (
	// 申请加联系人
	SystemMessage_ApplyAddContact SystemMessage_SystemType = 0
	// 邀请加群组
	SystemMessage_InviteJoinGroup SystemMessage_SystemType = 1
)

// Enum value maps for SystemMessage_SystemType.
var (
	SystemMessage_SystemType_name = map[int32]string{
		0: "ApplyAddContact",
		1: "InviteJoinGroup",
	}
	SystemMessage_SystemType_value = map[string]int32{
		"ApplyAddContact": 0,
		"InviteJoinGroup": 1,
	}
)

func (x SystemMessage_SystemType) Enum() *SystemMessage_SystemType {
	p := new(SystemMessage_SystemType)
	*p = x
	return p
}

func (x SystemMessage_SystemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemMessage_SystemType) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[5].Descriptor()
}

func (SystemMessage_SystemType) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[5]
}

func (x SystemMessage_SystemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemMessage_SystemType.Descriptor instead.
func (SystemMessage_SystemType) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{145, 0}
}

type CommonEvent_EventType int32

const (
	CommonEvent_PeerMessage  CommonEvent_EventType = 0
	CommonEvent_GroupMessage CommonEvent_EventType = 1
	CommonEvent_OnlineState  CommonEvent_EventType = 2
)

// Enum value maps for CommonEvent_EventType.
var (
	CommonEvent_EventType_name = map[int32]string{
		0: "PeerMessage",
		1: "GroupMessage",
		2: "OnlineState",
	}
	CommonEvent_EventType_value = map[string]int32{
		"PeerMessage":  0,
		"GroupMessage": 1,
		"OnlineState":  2,
	}
)

func (x CommonEvent_EventType) Enum() *CommonEvent_EventType {
	p := new(CommonEvent_EventType)
	*p = x
	return p
}

func (x CommonEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[6].Descriptor()
}

func (CommonEvent_EventType) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[6]
}

func (x CommonEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonEvent_EventType.Descriptor instead.
func (CommonEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{146, 0}
}

type QRCodeToken_TokenType int32

const (
	QRCodeToken_Unknown QRCodeToken_TokenType = 0
	QRCodeToken_Peer    QRCodeToken_TokenType = 1
	QRCodeToken_Group   QRCodeToken_TokenType = 2
)

// Enum value maps for QRCodeToken_TokenType.
var (
	QRCodeToken_TokenType_name = map[int32]string{
		0: "Unknown",
		1: "Peer",
		2: "Group",
	}
	QRCodeToken_TokenType_value = map[string]int32{
		"Unknown": 0,
		"Peer":    1,
		"Group":   2,
	}
)

func (x QRCodeToken_TokenType) Enum() *QRCodeToken_TokenType {
	p := new(QRCodeToken_TokenType)
	*p = x
	return p
}

func (x QRCodeToken_TokenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QRCodeToken_TokenType) Descriptor() protoreflect.EnumDescriptor {
	return file_bind_grpc_proto_chat_proto_enumTypes[7].Descriptor()
}

func (QRCodeToken_TokenType) Type() protoreflect.EnumType {
	return &file_bind_grpc_proto_chat_proto_enumTypes[7]
}

func (x QRCodeToken_TokenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QRCodeToken_TokenType.Descriptor instead.
func (QRCodeToken_TokenType) EnumDescriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{148, 0}
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Result) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Result) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImagePath string `protobuf:"bytes,2,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAccountRequest) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

type CreateAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Account *Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *CreateAccountReply) Reset() {
	*x = CreateAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountReply) ProtoMessage() {}

func (x *CreateAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountReply.ProtoReflect.Descriptor instead.
func (*CreateAccountReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAccountReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateAccountReply) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type GetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{3}
}

type GetAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Account *Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetAccountReply) Reset() {
	*x = GetAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountReply) ProtoMessage() {}

func (x *GetAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountReply.ProtoReflect.Descriptor instead.
func (*GetAccountReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{4}
}

func (x *GetAccountReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetAccountReply) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type SetAccountAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImagePath string `protobuf:"bytes,1,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
}

func (x *SetAccountAvatarRequest) Reset() {
	*x = SetAccountAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountAvatarRequest) ProtoMessage() {}

func (x *SetAccountAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountAvatarRequest.ProtoReflect.Descriptor instead.
func (*SetAccountAvatarRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{5}
}

func (x *SetAccountAvatarRequest) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

type SetAccountAvatarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Avatar string  `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *SetAccountAvatarReply) Reset() {
	*x = SetAccountAvatarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountAvatarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountAvatarReply) ProtoMessage() {}

func (x *SetAccountAvatarReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountAvatarReply.ProtoReflect.Descriptor instead.
func (*SetAccountAvatarReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{6}
}

func (x *SetAccountAvatarReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetAccountAvatarReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type SetAccountNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SetAccountNameRequest) Reset() {
	*x = SetAccountNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountNameRequest) ProtoMessage() {}

func (x *SetAccountNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountNameRequest.ProtoReflect.Descriptor instead.
func (*SetAccountNameRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{7}
}

func (x *SetAccountNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetAccountNameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SetAccountNameReply) Reset() {
	*x = SetAccountNameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountNameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountNameReply) ProtoMessage() {}

func (x *SetAccountNameReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountNameReply.ProtoReflect.Descriptor instead.
func (*SetAccountNameReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{8}
}

func (x *SetAccountNameReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetAccountNameReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetAutoAddContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAuto bool `protobuf:"varint,1,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
}

func (x *SetAutoAddContactRequest) Reset() {
	*x = SetAutoAddContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoAddContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoAddContactRequest) ProtoMessage() {}

func (x *SetAutoAddContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoAddContactRequest.ProtoReflect.Descriptor instead.
func (*SetAutoAddContactRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{9}
}

func (x *SetAutoAddContactRequest) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

type SetAutoAddContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	IsAuto bool    `protobuf:"varint,2,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
}

func (x *SetAutoAddContactReply) Reset() {
	*x = SetAutoAddContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoAddContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoAddContactReply) ProtoMessage() {}

func (x *SetAutoAddContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoAddContactReply.ProtoReflect.Descriptor instead.
func (*SetAutoAddContactReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{10}
}

func (x *SetAutoAddContactReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetAutoAddContactReply) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

type SetAutoJoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAuto bool `protobuf:"varint,1,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
}

func (x *SetAutoJoinGroupRequest) Reset() {
	*x = SetAutoJoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoJoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoJoinGroupRequest) ProtoMessage() {}

func (x *SetAutoJoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoJoinGroupRequest.ProtoReflect.Descriptor instead.
func (*SetAutoJoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{11}
}

func (x *SetAutoJoinGroupRequest) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

type SetAutoJoinGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	IsAuto bool    `protobuf:"varint,2,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
}

func (x *SetAutoJoinGroupReply) Reset() {
	*x = SetAutoJoinGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoJoinGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoJoinGroupReply) ProtoMessage() {}

func (x *SetAutoJoinGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoJoinGroupReply.ProtoReflect.Descriptor instead.
func (*SetAutoJoinGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{12}
}

func (x *SetAutoJoinGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetAutoJoinGroupReply) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

type SetAutoDepositMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAuto bool `protobuf:"varint,1,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
}

func (x *SetAutoDepositMessageRequest) Reset() {
	*x = SetAutoDepositMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoDepositMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoDepositMessageRequest) ProtoMessage() {}

func (x *SetAutoDepositMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoDepositMessageRequest.ProtoReflect.Descriptor instead.
func (*SetAutoDepositMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{13}
}

func (x *SetAutoDepositMessageRequest) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

type SetAutoDepositMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	IsAuto bool    `protobuf:"varint,2,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
}

func (x *SetAutoDepositMessageReply) Reset() {
	*x = SetAutoDepositMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoDepositMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoDepositMessageReply) ProtoMessage() {}

func (x *SetAutoDepositMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoDepositMessageReply.ProtoReflect.Descriptor instead.
func (*SetAutoDepositMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{14}
}

func (x *SetAutoDepositMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetAutoDepositMessageReply) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

type SetAccountDepositAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositAddress string `protobuf:"bytes,1,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
}

func (x *SetAccountDepositAddressRequest) Reset() {
	*x = SetAccountDepositAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountDepositAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountDepositAddressRequest) ProtoMessage() {}

func (x *SetAccountDepositAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountDepositAddressRequest.ProtoReflect.Descriptor instead.
func (*SetAccountDepositAddressRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{15}
}

func (x *SetAccountDepositAddressRequest) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

type SetAccountDepositAddressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	DepositAddress string  `protobuf:"bytes,2,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
}

func (x *SetAccountDepositAddressReply) Reset() {
	*x = SetAccountDepositAddressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountDepositAddressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountDepositAddressReply) ProtoMessage() {}

func (x *SetAccountDepositAddressReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountDepositAddressReply.ProtoReflect.Descriptor instead.
func (*SetAccountDepositAddressReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{16}
}

func (x *SetAccountDepositAddressReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetAccountDepositAddressReply) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

type GetAccountQRCodeTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAccountQRCodeTokenRequest) Reset() {
	*x = GetAccountQRCodeTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountQRCodeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountQRCodeTokenRequest) ProtoMessage() {}

func (x *GetAccountQRCodeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountQRCodeTokenRequest.ProtoReflect.Descriptor instead.
func (*GetAccountQRCodeTokenRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{17}
}

type GetAccountQRCodeTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Token  string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetAccountQRCodeTokenReply) Reset() {
	*x = GetAccountQRCodeTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountQRCodeTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountQRCodeTokenReply) ProtoMessage() {}

func (x *GetAccountQRCodeTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountQRCodeTokenReply.ProtoReflect.Descriptor instead.
func (*GetAccountQRCodeTokenReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{18}
}

func (x *GetAccountQRCodeTokenReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetAccountQRCodeTokenReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// -------------------- 分隔符 --------------------
type GetContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
}

func (x *GetContactRequest) Reset() {
	*x = GetContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactRequest) ProtoMessage() {}

func (x *GetContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactRequest.ProtoReflect.Descriptor instead.
func (*GetContactRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{19}
}

func (x *GetContactRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

type GetContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Contact *Contact `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *GetContactReply) Reset() {
	*x = GetContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactReply) ProtoMessage() {}

func (x *GetContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactReply.ProtoReflect.Descriptor instead.
func (*GetContactReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{20}
}

func (x *GetContactReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactReply) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type GetContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,1,opt,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *GetContactsRequest) Reset() {
	*x = GetContactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsRequest) ProtoMessage() {}

func (x *GetContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsRequest.ProtoReflect.Descriptor instead.
func (*GetContactsRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{21}
}

func (x *GetContactsRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type GetContactsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result    `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Contacts []*Contact `protobuf:"bytes,2,rep,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *GetContactsReply) Reset() {
	*x = GetContactsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsReply) ProtoMessage() {}

func (x *GetContactsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsReply.ProtoReflect.Descriptor instead.
func (*GetContactsReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{22}
}

func (x *GetContactsReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactsReply) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type GetSpecifiedContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactIds []string `protobuf:"bytes,1,rep,name=contactIds,proto3" json:"contactIds,omitempty"`
}

func (x *GetSpecifiedContactsRequest) Reset() {
	*x = GetSpecifiedContactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecifiedContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecifiedContactsRequest) ProtoMessage() {}

func (x *GetSpecifiedContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecifiedContactsRequest.ProtoReflect.Descriptor instead.
func (*GetSpecifiedContactsRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{23}
}

func (x *GetSpecifiedContactsRequest) GetContactIds() []string {
	if x != nil {
		return x.ContactIds
	}
	return nil
}

type GetSpecifiedContactsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result    `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Contacts []*Contact `protobuf:"bytes,2,rep,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *GetSpecifiedContactsReply) Reset() {
	*x = GetSpecifiedContactsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecifiedContactsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecifiedContactsReply) ProtoMessage() {}

func (x *GetSpecifiedContactsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecifiedContactsReply.ProtoReflect.Descriptor instead.
func (*GetSpecifiedContactsReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{24}
}

func (x *GetSpecifiedContactsReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetSpecifiedContactsReply) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type GetNearbyPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNearbyPeersRequest) Reset() {
	*x = GetNearbyPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNearbyPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNearbyPeersRequest) ProtoMessage() {}

func (x *GetNearbyPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNearbyPeersRequest.ProtoReflect.Descriptor instead.
func (*GetNearbyPeersRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{25}
}

type GetNearbyPeersStreamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Peer   *Peer   `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *GetNearbyPeersStreamReply) Reset() {
	*x = GetNearbyPeersStreamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNearbyPeersStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNearbyPeersStreamReply) ProtoMessage() {}

func (x *GetNearbyPeersStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNearbyPeersStreamReply.ProtoReflect.Descriptor instead.
func (*GetNearbyPeersStreamReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{26}
}

func (x *GetNearbyPeersStreamReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetNearbyPeersStreamReply) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type GetContactMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
	MsgId     string `protobuf:"bytes,2,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
}

func (x *GetContactMessageRequest) Reset() {
	*x = GetContactMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactMessageRequest) ProtoMessage() {}

func (x *GetContactMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactMessageRequest.ProtoReflect.Descriptor instead.
func (*GetContactMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{27}
}

func (x *GetContactMessageRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *GetContactMessageRequest) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

type GetContactMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *Result         `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Message *ContactMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetContactMessageReply) Reset() {
	*x = GetContactMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactMessageReply) ProtoMessage() {}

func (x *GetContactMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactMessageReply.ProtoReflect.Descriptor instead.
func (*GetContactMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{28}
}

func (x *GetContactMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactMessageReply) GetMessage() *ContactMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type GetContactMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
	Offset    int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetContactMessagesRequest) Reset() {
	*x = GetContactMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactMessagesRequest) ProtoMessage() {}

func (x *GetContactMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetContactMessagesRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{29}
}

func (x *GetContactMessagesRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *GetContactMessagesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetContactMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetContactMessagesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Messages []*ContactMessage `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetContactMessagesReply) Reset() {
	*x = GetContactMessagesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactMessagesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactMessagesReply) ProtoMessage() {}

func (x *GetContactMessagesReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactMessagesReply.ProtoReflect.Descriptor instead.
func (*GetContactMessagesReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{30}
}

func (x *GetContactMessagesReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactMessagesReply) GetMessages() []*ContactMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SendContactTextMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
	Content   string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SendContactTextMessageRequest) Reset() {
	*x = SendContactTextMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactTextMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactTextMessageRequest) ProtoMessage() {}

func (x *SendContactTextMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactTextMessageRequest.ProtoReflect.Descriptor instead.
func (*SendContactTextMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{31}
}

func (x *SendContactTextMessageRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *SendContactTextMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SendContactImageMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId     string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
	MimeType      string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	FilePath      string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	ThumbnailPath string `protobuf:"bytes,4,opt,name=thumbnailPath,proto3" json:"thumbnailPath,omitempty"`
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Width         int32  `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32  `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *SendContactImageMessageRequest) Reset() {
	*x = SendContactImageMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactImageMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactImageMessageRequest) ProtoMessage() {}

func (x *SendContactImageMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactImageMessageRequest.ProtoReflect.Descriptor instead.
func (*SendContactImageMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{32}
}

func (x *SendContactImageMessageRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *SendContactImageMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendContactImageMessageRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SendContactImageMessageRequest) GetThumbnailPath() string {
	if x != nil {
		return x.ThumbnailPath
	}
	return ""
}

func (x *SendContactImageMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendContactImageMessageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SendContactImageMessageRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *SendContactImageMessageRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type SendContactVoiceMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
	MimeType  string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	FilePath  string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Size      int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Duration  int32  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SendContactVoiceMessageRequest) Reset() {
	*x = SendContactVoiceMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactVoiceMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactVoiceMessageRequest) ProtoMessage() {}

func (x *SendContactVoiceMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactVoiceMessageRequest.ProtoReflect.Descriptor instead.
func (*SendContactVoiceMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{33}
}

func (x *SendContactVoiceMessageRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *SendContactVoiceMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendContactVoiceMessageRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SendContactVoiceMessageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SendContactVoiceMessageRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type SendContactAudioMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
	MimeType  string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	FilePath  string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Size      int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Duration  int32  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SendContactAudioMessageRequest) Reset() {
	*x = SendContactAudioMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactAudioMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactAudioMessageRequest) ProtoMessage() {}

func (x *SendContactAudioMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactAudioMessageRequest.ProtoReflect.Descriptor instead.
func (*SendContactAudioMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{34}
}

func (x *SendContactAudioMessageRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *SendContactAudioMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendContactAudioMessageRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SendContactAudioMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendContactAudioMessageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SendContactAudioMessageRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type SendContactVideoMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
	MimeType  string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	FilePath  string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Size      int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Duration  int32  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SendContactVideoMessageRequest) Reset() {
	*x = SendContactVideoMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactVideoMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactVideoMessageRequest) ProtoMessage() {}

func (x *SendContactVideoMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactVideoMessageRequest.ProtoReflect.Descriptor instead.
func (*SendContactVideoMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{35}
}

func (x *SendContactVideoMessageRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *SendContactVideoMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendContactVideoMessageRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SendContactVideoMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendContactVideoMessageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SendContactVideoMessageRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type SendContactFileMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
	MimeType  string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	FilePath  string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Size      int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SendContactFileMessageRequest) Reset() {
	*x = SendContactFileMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactFileMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactFileMessageRequest) ProtoMessage() {}

func (x *SendContactFileMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactFileMessageRequest.ProtoReflect.Descriptor instead.
func (*SendContactFileMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{36}
}

func (x *SendContactFileMessageRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *SendContactFileMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendContactFileMessageRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SendContactFileMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendContactFileMessageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SendContactMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *Result         `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	IsUpdated bool            `protobuf:"varint,2,opt,name=isUpdated,proto3" json:"isUpdated,omitempty"`
	Message   *ContactMessage `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendContactMessageReply) Reset() {
	*x = SendContactMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactMessageReply) ProtoMessage() {}

func (x *SendContactMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactMessageReply.ProtoReflect.Descriptor instead.
func (*SendContactMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{37}
}

func (x *SendContactMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SendContactMessageReply) GetIsUpdated() bool {
	if x != nil {
		return x.IsUpdated
	}
	return false
}

func (x *SendContactMessageReply) GetMessage() *ContactMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type SetContactNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SetContactNameRequest) Reset() {
	*x = SetContactNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetContactNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetContactNameRequest) ProtoMessage() {}

func (x *SetContactNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetContactNameRequest.ProtoReflect.Descriptor instead.
func (*SetContactNameRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{38}
}

func (x *SetContactNameRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *SetContactNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetContactNameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SetContactNameReply) Reset() {
	*x = SetContactNameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetContactNameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetContactNameReply) ProtoMessage() {}

func (x *SetContactNameReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetContactNameReply.ProtoReflect.Descriptor instead.
func (*SetContactNameReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{39}
}

func (x *SetContactNameReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetContactNameReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ClearContactMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
}

func (x *ClearContactMessageRequest) Reset() {
	*x = ClearContactMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearContactMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearContactMessageRequest) ProtoMessage() {}

func (x *ClearContactMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearContactMessageRequest.ProtoReflect.Descriptor instead.
func (*ClearContactMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{40}
}

func (x *ClearContactMessageRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

type ClearContactMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ClearContactMessageReply) Reset() {
	*x = ClearContactMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearContactMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearContactMessageReply) ProtoMessage() {}

func (x *ClearContactMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearContactMessageReply.ProtoReflect.Descriptor instead.
func (*ClearContactMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{41}
}

func (x *ClearContactMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
}

func (x *DeleteContactRequest) Reset() {
	*x = DeleteContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContactRequest) ProtoMessage() {}

func (x *DeleteContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContactRequest.ProtoReflect.Descriptor instead.
func (*DeleteContactRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteContactRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

type DeleteContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteContactReply) Reset() {
	*x = DeleteContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContactReply) ProtoMessage() {}

func (x *DeleteContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContactReply.ProtoReflect.Descriptor instead.
func (*DeleteContactReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{43}
}

func (x *DeleteContactReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetContactQRCodeTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contactId,proto3" json:"contactId,omitempty"`
}

func (x *GetContactQRCodeTokenRequest) Reset() {
	*x = GetContactQRCodeTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactQRCodeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactQRCodeTokenRequest) ProtoMessage() {}

func (x *GetContactQRCodeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactQRCodeTokenRequest.ProtoReflect.Descriptor instead.
func (*GetContactQRCodeTokenRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{44}
}

func (x *GetContactQRCodeTokenRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

type GetContactQRCodeTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Token  string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetContactQRCodeTokenReply) Reset() {
	*x = GetContactQRCodeTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactQRCodeTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactQRCodeTokenReply) ProtoMessage() {}

func (x *GetContactQRCodeTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactQRCodeTokenReply.ProtoReflect.Descriptor instead.
func (*GetContactQRCodeTokenReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{45}
}

func (x *GetContactQRCodeTokenReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactQRCodeTokenReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImagePath string   `protobuf:"bytes,2,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	Content   string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MemberIds []string `protobuf:"bytes,4,rep,name=memberIds,proto3" json:"memberIds,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{46}
}

func (x *CreateGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGroupRequest) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *CreateGroupRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateGroupRequest) GetMemberIds() []string {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

type CreateGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Group  *Group  `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *CreateGroupReply) Reset() {
	*x = CreateGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReply) ProtoMessage() {}

func (x *CreateGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReply.ProtoReflect.Descriptor instead.
func (*CreateGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{47}
}

func (x *CreateGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateGroupReply) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *GetGroupRequest) Reset() {
	*x = GetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequest) ProtoMessage() {}

func (x *GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{48}
}

func (x *GetGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Group  *Group  `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetGroupReply) Reset() {
	*x = GetGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupReply) ProtoMessage() {}

func (x *GetGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupReply.ProtoReflect.Descriptor instead.
func (*GetGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{49}
}

func (x *GetGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupReply) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GetGroupDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *GetGroupDetailRequest) Reset() {
	*x = GetGroupDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupDetailRequest) ProtoMessage() {}

func (x *GetGroupDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupDetailRequest.ProtoReflect.Descriptor instead.
func (*GetGroupDetailRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{50}
}

func (x *GetGroupDetailRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupDetailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result      `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Group  *GroupDetail `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetGroupDetailReply) Reset() {
	*x = GetGroupDetailReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupDetailReply) ProtoMessage() {}

func (x *GetGroupDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupDetailReply.ProtoReflect.Descriptor instead.
func (*GetGroupDetailReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{51}
}

func (x *GetGroupDetailReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupDetailReply) GetGroup() *GroupDetail {
	if x != nil {
		return x.Group
	}
	return nil
}

type GetGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGroupsRequest) Reset() {
	*x = GetGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsRequest) ProtoMessage() {}

func (x *GetGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetGroupsRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{52}
}

type GetGroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Groups []*Group `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetGroupsReply) Reset() {
	*x = GetGroupsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsReply) ProtoMessage() {}

func (x *GetGroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsReply.ProtoReflect.Descriptor instead.
func (*GetGroupsReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{53}
}

func (x *GetGroupsReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupsReply) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetGroupMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	MsgId   string `protobuf:"bytes,2,opt,name=msgId,proto3" json:"msgId,omitempty"`
}

func (x *GetGroupMessageRequest) Reset() {
	*x = GetGroupMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMessageRequest) ProtoMessage() {}

func (x *GetGroupMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMessageRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{54}
}

func (x *GetGroupMessageRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMessageRequest) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

type GetGroupMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *Result       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Message *GroupMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetGroupMessageReply) Reset() {
	*x = GetGroupMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMessageReply) ProtoMessage() {}

func (x *GetGroupMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMessageReply.ProtoReflect.Descriptor instead.
func (*GetGroupMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{55}
}

func (x *GetGroupMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupMessageReply) GetMessage() *GroupMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type GetGroupMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Offset  int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit   int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetGroupMessagesRequest) Reset() {
	*x = GetGroupMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMessagesRequest) ProtoMessage() {}

func (x *GetGroupMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMessagesRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{56}
}

func (x *GetGroupMessagesRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMessagesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetGroupMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetGroupMessagesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result         `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Messages []*GroupMessage `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetGroupMessagesReply) Reset() {
	*x = GetGroupMessagesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMessagesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMessagesReply) ProtoMessage() {}

func (x *GetGroupMessagesReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMessagesReply.ProtoReflect.Descriptor instead.
func (*GetGroupMessagesReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{57}
}

func (x *GetGroupMessagesReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupMessagesReply) GetMessages() []*GroupMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SendGroupTextMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SendGroupTextMessageRequest) Reset() {
	*x = SendGroupTextMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupTextMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupTextMessageRequest) ProtoMessage() {}

func (x *SendGroupTextMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupTextMessageRequest.ProtoReflect.Descriptor instead.
func (*SendGroupTextMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{58}
}

func (x *SendGroupTextMessageRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SendGroupTextMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SendGroupImageMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId       string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	MimeType      string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	FilePath      string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	ThumbnailPath string `protobuf:"bytes,4,opt,name=thumbnailPath,proto3" json:"thumbnailPath,omitempty"`
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Width         int32  `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32  `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *SendGroupImageMessageRequest) Reset() {
	*x = SendGroupImageMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupImageMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupImageMessageRequest) ProtoMessage() {}

func (x *SendGroupImageMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupImageMessageRequest.ProtoReflect.Descriptor instead.
func (*SendGroupImageMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{59}
}

func (x *SendGroupImageMessageRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SendGroupImageMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendGroupImageMessageRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SendGroupImageMessageRequest) GetThumbnailPath() string {
	if x != nil {
		return x.ThumbnailPath
	}
	return ""
}

func (x *SendGroupImageMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendGroupImageMessageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SendGroupImageMessageRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *SendGroupImageMessageRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type SendGroupVoiceMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	MimeType string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	FilePath string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Size     int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Duration int32  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SendGroupVoiceMessageRequest) Reset() {
	*x = SendGroupVoiceMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupVoiceMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupVoiceMessageRequest) ProtoMessage() {}

func (x *SendGroupVoiceMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupVoiceMessageRequest.ProtoReflect.Descriptor instead.
func (*SendGroupVoiceMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{60}
}

func (x *SendGroupVoiceMessageRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SendGroupVoiceMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendGroupVoiceMessageRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SendGroupVoiceMessageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SendGroupVoiceMessageRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type SendGroupAudioMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	MimeType string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	FilePath string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Size     int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Duration int32  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SendGroupAudioMessageRequest) Reset() {
	*x = SendGroupAudioMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupAudioMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupAudioMessageRequest) ProtoMessage() {}

func (x *SendGroupAudioMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupAudioMessageRequest.ProtoReflect.Descriptor instead.
func (*SendGroupAudioMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{61}
}

func (x *SendGroupAudioMessageRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SendGroupAudioMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendGroupAudioMessageRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SendGroupAudioMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendGroupAudioMessageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SendGroupAudioMessageRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type SendGroupVideoMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	MimeType string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	FilePath string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Size     int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Duration int32  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SendGroupVideoMessageRequest) Reset() {
	*x = SendGroupVideoMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupVideoMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupVideoMessageRequest) ProtoMessage() {}

func (x *SendGroupVideoMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupVideoMessageRequest.ProtoReflect.Descriptor instead.
func (*SendGroupVideoMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{62}
}

func (x *SendGroupVideoMessageRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SendGroupVideoMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendGroupVideoMessageRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SendGroupVideoMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendGroupVideoMessageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SendGroupVideoMessageRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type SendGroupFileMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	MimeType string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	FilePath string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Size     int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SendGroupFileMessageRequest) Reset() {
	*x = SendGroupFileMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupFileMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupFileMessageRequest) ProtoMessage() {}

func (x *SendGroupFileMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupFileMessageRequest.ProtoReflect.Descriptor instead.
func (*SendGroupFileMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{63}
}

func (x *SendGroupFileMessageRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SendGroupFileMessageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SendGroupFileMessageRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SendGroupFileMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendGroupFileMessageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SendGroupMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *Result       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	IsUpdated bool          `protobuf:"varint,2,opt,name=isUpdated,proto3" json:"isUpdated,omitempty"`
	Message   *GroupMessage `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendGroupMessageReply) Reset() {
	*x = SendGroupMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupMessageReply) ProtoMessage() {}

func (x *SendGroupMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupMessageReply.ProtoReflect.Descriptor instead.
func (*SendGroupMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{64}
}

func (x *SendGroupMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SendGroupMessageReply) GetIsUpdated() bool {
	if x != nil {
		return x.IsUpdated
	}
	return false
}

func (x *SendGroupMessageReply) GetMessage() *GroupMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type SetGroupAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Avatar  string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *SetGroupAvatarRequest) Reset() {
	*x = SetGroupAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupAvatarRequest) ProtoMessage() {}

func (x *SetGroupAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupAvatarRequest.ProtoReflect.Descriptor instead.
func (*SetGroupAvatarRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{65}
}

func (x *SetGroupAvatarRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupAvatarRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type SetGroupAvatarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Avatar string  `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *SetGroupAvatarReply) Reset() {
	*x = SetGroupAvatarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupAvatarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupAvatarReply) ProtoMessage() {}

func (x *SetGroupAvatarReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupAvatarReply.ProtoReflect.Descriptor instead.
func (*SetGroupAvatarReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{66}
}

func (x *SetGroupAvatarReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetGroupAvatarReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type SetGroupNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SetGroupNameRequest) Reset() {
	*x = SetGroupNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupNameRequest) ProtoMessage() {}

func (x *SetGroupNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupNameRequest.ProtoReflect.Descriptor instead.
func (*SetGroupNameRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{67}
}

func (x *SetGroupNameRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetGroupNameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SetGroupNameReply) Reset() {
	*x = SetGroupNameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupNameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupNameReply) ProtoMessage() {}

func (x *SetGroupNameReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupNameReply.ProtoReflect.Descriptor instead.
func (*SetGroupNameReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{68}
}

func (x *SetGroupNameReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetGroupNameReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetGroupNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Notice  string `protobuf:"bytes,2,opt,name=notice,proto3" json:"notice,omitempty"`
}

func (x *SetGroupNoticeRequest) Reset() {
	*x = SetGroupNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupNoticeRequest) ProtoMessage() {}

func (x *SetGroupNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupNoticeRequest.ProtoReflect.Descriptor instead.
func (*SetGroupNoticeRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{69}
}

func (x *SetGroupNoticeRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupNoticeRequest) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

type SetGroupNoticeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Notice string  `protobuf:"bytes,2,opt,name=notice,proto3" json:"notice,omitempty"`
}

func (x *SetGroupNoticeReply) Reset() {
	*x = SetGroupNoticeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupNoticeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupNoticeReply) ProtoMessage() {}

func (x *SetGroupNoticeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupNoticeReply.ProtoReflect.Descriptor instead.
func (*SetGroupNoticeReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{70}
}

func (x *SetGroupNoticeReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetGroupNoticeReply) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

type InviteJoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	ContactId string `protobuf:"bytes,2,opt,name=contactId,proto3" json:"contactId,omitempty"`
}

func (x *InviteJoinGroupRequest) Reset() {
	*x = InviteJoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteJoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteJoinGroupRequest) ProtoMessage() {}

func (x *InviteJoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteJoinGroupRequest.ProtoReflect.Descriptor instead.
func (*InviteJoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{71}
}

func (x *InviteJoinGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *InviteJoinGroupRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

type InviteJoinGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *InviteJoinGroupReply) Reset() {
	*x = InviteJoinGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteJoinGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteJoinGroupReply) ProtoMessage() {}

func (x *InviteJoinGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteJoinGroupReply.ProtoReflect.Descriptor instead.
func (*InviteJoinGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{72}
}

func (x *InviteJoinGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetGroupMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Offset   int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit    int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Keywords string `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *GetGroupMembersRequest) Reset() {
	*x = GetGroupMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMembersRequest) ProtoMessage() {}

func (x *GetGroupMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMembersRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMembersRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{73}
}

func (x *GetGroupMembersRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMembersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetGroupMembersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetGroupMembersRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type GetGroupMembersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *Result        `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Members []*GroupMember `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *GetGroupMembersReply) Reset() {
	*x = GetGroupMembersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMembersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMembersReply) ProtoMessage() {}

func (x *GetGroupMembersReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMembersReply.ProtoReflect.Descriptor instead.
func (*GetGroupMembersReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{74}
}

func (x *GetGroupMembersReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupMembersReply) GetMembers() []*GroupMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type RemoveGroupMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	MemberId string `protobuf:"bytes,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
}

func (x *RemoveGroupMemberRequest) Reset() {
	*x = RemoveGroupMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupMemberRequest) ProtoMessage() {}

func (x *RemoveGroupMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveGroupMemberRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{75}
}

func (x *RemoveGroupMemberRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *RemoveGroupMemberRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type RemoveGroupMemberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RemoveGroupMemberReply) Reset() {
	*x = RemoveGroupMemberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupMemberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupMemberReply) ProtoMessage() {}

func (x *RemoveGroupMemberReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupMemberReply.ProtoReflect.Descriptor instead.
func (*RemoveGroupMemberReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{76}
}

func (x *RemoveGroupMemberReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SetGroupAutoJoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	IsAuto  bool   `protobuf:"varint,2,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
}

func (x *SetGroupAutoJoinRequest) Reset() {
	*x = SetGroupAutoJoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupAutoJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupAutoJoinRequest) ProtoMessage() {}

func (x *SetGroupAutoJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupAutoJoinRequest.ProtoReflect.Descriptor instead.
func (*SetGroupAutoJoinRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{77}
}

func (x *SetGroupAutoJoinRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupAutoJoinRequest) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

type SetGroupAutoJoinReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	IsAuto bool    `protobuf:"varint,2,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
}

func (x *SetGroupAutoJoinReply) Reset() {
	*x = SetGroupAutoJoinReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupAutoJoinReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupAutoJoinReply) ProtoMessage() {}

func (x *SetGroupAutoJoinReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupAutoJoinReply.ProtoReflect.Descriptor instead.
func (*SetGroupAutoJoinReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{78}
}

func (x *SetGroupAutoJoinReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetGroupAutoJoinReply) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

type SetGroupDepositAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId        string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	DepositAddress string `protobuf:"bytes,2,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
}

func (x *SetGroupDepositAddressRequest) Reset() {
	*x = SetGroupDepositAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupDepositAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupDepositAddressRequest) ProtoMessage() {}

func (x *SetGroupDepositAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupDepositAddressRequest.ProtoReflect.Descriptor instead.
func (*SetGroupDepositAddressRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{79}
}

func (x *SetGroupDepositAddressRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupDepositAddressRequest) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

type SetGroupDepositAddressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	DepositAddress string  `protobuf:"bytes,2,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
}

func (x *SetGroupDepositAddressReply) Reset() {
	*x = SetGroupDepositAddressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupDepositAddressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupDepositAddressReply) ProtoMessage() {}

func (x *SetGroupDepositAddressReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupDepositAddressReply.ProtoReflect.Descriptor instead.
func (*SetGroupDepositAddressReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{80}
}

func (x *SetGroupDepositAddressReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetGroupDepositAddressReply) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

type ClearGroupMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *ClearGroupMessageRequest) Reset() {
	*x = ClearGroupMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearGroupMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearGroupMessageRequest) ProtoMessage() {}

func (x *ClearGroupMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearGroupMessageRequest.ProtoReflect.Descriptor instead.
func (*ClearGroupMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{81}
}

func (x *ClearGroupMessageRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type ClearGroupMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ClearGroupMessageReply) Reset() {
	*x = ClearGroupMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearGroupMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearGroupMessageReply) ProtoMessage() {}

func (x *ClearGroupMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearGroupMessageReply.ProtoReflect.Descriptor instead.
func (*ClearGroupMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{82}
}

func (x *ClearGroupMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type ExitGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *ExitGroupRequest) Reset() {
	*x = ExitGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitGroupRequest) ProtoMessage() {}

func (x *ExitGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitGroupRequest.ProtoReflect.Descriptor instead.
func (*ExitGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{83}
}

func (x *ExitGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type ExitGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExitGroupReply) Reset() {
	*x = ExitGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitGroupReply) ProtoMessage() {}

func (x *ExitGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitGroupReply.ProtoReflect.Descriptor instead.
func (*ExitGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{84}
}

func (x *ExitGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{85}
}

func (x *DeleteGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type DeleteGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteGroupReply) Reset() {
	*x = DeleteGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupReply) ProtoMessage() {}

func (x *DeleteGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupReply.ProtoReflect.Descriptor instead.
func (*DeleteGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{86}
}

func (x *DeleteGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type DisbandGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *DisbandGroupRequest) Reset() {
	*x = DisbandGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisbandGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandGroupRequest) ProtoMessage() {}

func (x *DisbandGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandGroupRequest.ProtoReflect.Descriptor instead.
func (*DisbandGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{87}
}

func (x *DisbandGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type DisbandGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DisbandGroupReply) Reset() {
	*x = DisbandGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisbandGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandGroupReply) ProtoMessage() {}

func (x *DisbandGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandGroupReply.ProtoReflect.Descriptor instead.
func (*DisbandGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{88}
}

func (x *DisbandGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetGroupQRCodeTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *GetGroupQRCodeTokenRequest) Reset() {
	*x = GetGroupQRCodeTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupQRCodeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupQRCodeTokenRequest) ProtoMessage() {}

func (x *GetGroupQRCodeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupQRCodeTokenRequest.ProtoReflect.Descriptor instead.
func (*GetGroupQRCodeTokenRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{89}
}

func (x *GetGroupQRCodeTokenRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupQRCodeTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Token  string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetGroupQRCodeTokenReply) Reset() {
	*x = GetGroupQRCodeTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupQRCodeTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupQRCodeTokenReply) ProtoMessage() {}

func (x *GetGroupQRCodeTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupQRCodeTokenReply.ProtoReflect.Descriptor instead.
func (*GetGroupQRCodeTokenReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{90}
}

func (x *GetGroupQRCodeTokenReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupQRCodeTokenReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *GetSessionsRequest) Reset() {
	*x = GetSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionsRequest) ProtoMessage() {}

func (x *GetSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionsRequest.ProtoReflect.Descriptor instead.
func (*GetSessionsRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{91}
}

func (x *GetSessionsRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type GetSessionsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result    `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Sessions []*Session `protobuf:"bytes,2,rep,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *GetSessionsReply) Reset() {
	*x = GetSessionsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionsReply) ProtoMessage() {}

func (x *GetSessionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionsReply.ProtoReflect.Descriptor instead.
func (*GetSessionsReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{92}
}

func (x *GetSessionsReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetSessionsReply) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

// -------------------- 分隔符 --------------------
type GetSystemMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetSystemMessagesRequest) Reset() {
	*x = GetSystemMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemMessagesRequest) ProtoMessage() {}

func (x *GetSystemMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetSystemMessagesRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{93}
}

func (x *GetSystemMessagesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSystemMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSystemMessagesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result          `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Messages []*SystemMessage `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetSystemMessagesReply) Reset() {
	*x = GetSystemMessagesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemMessagesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemMessagesReply) ProtoMessage() {}

func (x *GetSystemMessagesReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemMessagesReply.ProtoReflect.Descriptor instead.
func (*GetSystemMessagesReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{94}
}

func (x *GetSystemMessagesReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetSystemMessagesReply) GetMessages() []*SystemMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type DeleteSystemMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageIds []string `protobuf:"bytes,1,rep,name=messageIds,proto3" json:"messageIds,omitempty"`
}

func (x *DeleteSystemMessageRequest) Reset() {
	*x = DeleteSystemMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSystemMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSystemMessageRequest) ProtoMessage() {}

func (x *DeleteSystemMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSystemMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteSystemMessageRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{95}
}

func (x *DeleteSystemMessageRequest) GetMessageIds() []string {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

type DeleteSystemMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteSystemMessageReply) Reset() {
	*x = DeleteSystemMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSystemMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSystemMessageReply) ProtoMessage() {}

func (x *DeleteSystemMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSystemMessageReply.ProtoReflect.Descriptor instead.
func (*DeleteSystemMessageReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{96}
}

func (x *DeleteSystemMessageReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type ApplyAddContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId         string `protobuf:"bytes,1,opt,name=peerId,proto3" json:"peerId,omitempty"`
	DepositAddress string `protobuf:"bytes,2,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Avatar         string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Content        string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ApplyAddContactRequest) Reset() {
	*x = ApplyAddContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyAddContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyAddContactRequest) ProtoMessage() {}

func (x *ApplyAddContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyAddContactRequest.ProtoReflect.Descriptor instead.
func (*ApplyAddContactRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{97}
}

func (x *ApplyAddContactRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *ApplyAddContactRequest) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

func (x *ApplyAddContactRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplyAddContactRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ApplyAddContactRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ApplyAddContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ApplyAddContactReply) Reset() {
	*x = ApplyAddContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyAddContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyAddContactReply) ProtoMessage() {}

func (x *ApplyAddContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyAddContactReply.ProtoReflect.Descriptor instead.
func (*ApplyAddContactReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{98}
}

func (x *ApplyAddContactReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type AgreeAddContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AckMsgId string `protobuf:"bytes,1,opt,name=ackMsgId,proto3" json:"ackMsgId,omitempty"`
}

func (x *AgreeAddContactRequest) Reset() {
	*x = AgreeAddContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreeAddContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreeAddContactRequest) ProtoMessage() {}

func (x *AgreeAddContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreeAddContactRequest.ProtoReflect.Descriptor instead.
func (*AgreeAddContactRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{99}
}

func (x *AgreeAddContactRequest) GetAckMsgId() string {
	if x != nil {
		return x.AckMsgId
	}
	return ""
}

type AgreeAddContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	AckMsgId string  `protobuf:"bytes,2,opt,name=ackMsgId,proto3" json:"ackMsgId,omitempty"`
}

func (x *AgreeAddContactReply) Reset() {
	*x = AgreeAddContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreeAddContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreeAddContactReply) ProtoMessage() {}

func (x *AgreeAddContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreeAddContactReply.ProtoReflect.Descriptor instead.
func (*AgreeAddContactReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{100}
}

func (x *AgreeAddContactReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AgreeAddContactReply) GetAckMsgId() string {
	if x != nil {
		return x.AckMsgId
	}
	return ""
}

type RejectAddContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AckMsgId string `protobuf:"bytes,1,opt,name=ackMsgId,proto3" json:"ackMsgId,omitempty"`
}

func (x *RejectAddContactRequest) Reset() {
	*x = RejectAddContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectAddContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectAddContactRequest) ProtoMessage() {}

func (x *RejectAddContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectAddContactRequest.ProtoReflect.Descriptor instead.
func (*RejectAddContactRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{101}
}

func (x *RejectAddContactRequest) GetAckMsgId() string {
	if x != nil {
		return x.AckMsgId
	}
	return ""
}

type RejectAddContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	AckMsgId string  `protobuf:"bytes,2,opt,name=ackMsgId,proto3" json:"ackMsgId,omitempty"`
}

func (x *RejectAddContactReply) Reset() {
	*x = RejectAddContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectAddContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectAddContactReply) ProtoMessage() {}

func (x *RejectAddContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectAddContactReply.ProtoReflect.Descriptor instead.
func (*RejectAddContactReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{102}
}

func (x *RejectAddContactReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RejectAddContactReply) GetAckMsgId() string {
	if x != nil {
		return x.AckMsgId
	}
	return ""
}

type AgreeJoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AckMsgId string `protobuf:"bytes,1,opt,name=ackMsgId,proto3" json:"ackMsgId,omitempty"`
}

func (x *AgreeJoinGroupRequest) Reset() {
	*x = AgreeJoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreeJoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreeJoinGroupRequest) ProtoMessage() {}

func (x *AgreeJoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreeJoinGroupRequest.ProtoReflect.Descriptor instead.
func (*AgreeJoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{103}
}

func (x *AgreeJoinGroupRequest) GetAckMsgId() string {
	if x != nil {
		return x.AckMsgId
	}
	return ""
}

type AgreeJoinGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	AckMsgId string  `protobuf:"bytes,2,opt,name=ackMsgId,proto3" json:"ackMsgId,omitempty"`
}

func (x *AgreeJoinGroupReply) Reset() {
	*x = AgreeJoinGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreeJoinGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreeJoinGroupReply) ProtoMessage() {}

func (x *AgreeJoinGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreeJoinGroupReply.ProtoReflect.Descriptor instead.
func (*AgreeJoinGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{104}
}

func (x *AgreeJoinGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AgreeJoinGroupReply) GetAckMsgId() string {
	if x != nil {
		return x.AckMsgId
	}
	return ""
}

type RejectJoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AckMsgId string `protobuf:"bytes,1,opt,name=ackMsgId,proto3" json:"ackMsgId,omitempty"`
}

func (x *RejectJoinGroupRequest) Reset() {
	*x = RejectJoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectJoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectJoinGroupRequest) ProtoMessage() {}

func (x *RejectJoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectJoinGroupRequest.ProtoReflect.Descriptor instead.
func (*RejectJoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{105}
}

func (x *RejectJoinGroupRequest) GetAckMsgId() string {
	if x != nil {
		return x.AckMsgId
	}
	return ""
}

type RejectJoinGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	AckMsgId string  `protobuf:"bytes,2,opt,name=ackMsgId,proto3" json:"ackMsgId,omitempty"`
}

func (x *RejectJoinGroupReply) Reset() {
	*x = RejectJoinGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectJoinGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectJoinGroupReply) ProtoMessage() {}

func (x *RejectJoinGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectJoinGroupReply.ProtoReflect.Descriptor instead.
func (*RejectJoinGroupReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{106}
}

func (x *RejectJoinGroupReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RejectJoinGroupReply) GetAckMsgId() string {
	if x != nil {
		return x.AckMsgId
	}
	return ""
}

type GetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{107}
}

type GetConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Config *Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetConfigReply) Reset() {
	*x = GetConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigReply) ProtoMessage() {}

func (x *GetConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigReply.ProtoReflect.Descriptor instead.
func (*GetConfigReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{108}
}

func (x *GetConfigReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetConfigReply) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetBootstrapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bootstraps []string `protobuf:"bytes,1,rep,name=bootstraps,proto3" json:"bootstraps,omitempty"`
}

func (x *SetBootstrapsRequest) Reset() {
	*x = SetBootstrapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBootstrapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBootstrapsRequest) ProtoMessage() {}

func (x *SetBootstrapsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBootstrapsRequest.ProtoReflect.Descriptor instead.
func (*SetBootstrapsRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{109}
}

func (x *SetBootstrapsRequest) GetBootstraps() []string {
	if x != nil {
		return x.Bootstraps
	}
	return nil
}

type SetBootstrapsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Bootstraps []string `protobuf:"bytes,2,rep,name=bootstraps,proto3" json:"bootstraps,omitempty"`
}

func (x *SetBootstrapsReply) Reset() {
	*x = SetBootstrapsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBootstrapsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBootstrapsReply) ProtoMessage() {}

func (x *SetBootstrapsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBootstrapsReply.ProtoReflect.Descriptor instead.
func (*SetBootstrapsReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{110}
}

func (x *SetBootstrapsReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetBootstrapsReply) GetBootstraps() []string {
	if x != nil {
		return x.Bootstraps
	}
	return nil
}

type SetPeeringPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeeringPeers []string `protobuf:"bytes,1,rep,name=peeringPeers,proto3" json:"peeringPeers,omitempty"`
}

func (x *SetPeeringPeersRequest) Reset() {
	*x = SetPeeringPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPeeringPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPeeringPeersRequest) ProtoMessage() {}

func (x *SetPeeringPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPeeringPeersRequest.ProtoReflect.Descriptor instead.
func (*SetPeeringPeersRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{111}
}

func (x *SetPeeringPeersRequest) GetPeeringPeers() []string {
	if x != nil {
		return x.PeeringPeers
	}
	return nil
}

type SetPeeringPeersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	PeeringPeers []string `protobuf:"bytes,2,rep,name=peeringPeers,proto3" json:"peeringPeers,omitempty"`
}

func (x *SetPeeringPeersReply) Reset() {
	*x = SetPeeringPeersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPeeringPeersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPeeringPeersReply) ProtoMessage() {}

func (x *SetPeeringPeersReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPeeringPeersReply.ProtoReflect.Descriptor instead.
func (*SetPeeringPeersReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{112}
}

func (x *SetPeeringPeersReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetPeeringPeersReply) GetPeeringPeers() []string {
	if x != nil {
		return x.PeeringPeers
	}
	return nil
}

type SetEnableMDNSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *SetEnableMDNSRequest) Reset() {
	*x = SetEnableMDNSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEnableMDNSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEnableMDNSRequest) ProtoMessage() {}

func (x *SetEnableMDNSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEnableMDNSRequest.ProtoReflect.Descriptor instead.
func (*SetEnableMDNSRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{113}
}

func (x *SetEnableMDNSRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type SetEnableMDNSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Enable bool    `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *SetEnableMDNSReply) Reset() {
	*x = SetEnableMDNSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEnableMDNSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEnableMDNSReply) ProtoMessage() {}

func (x *SetEnableMDNSReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEnableMDNSReply.ProtoReflect.Descriptor instead.
func (*SetEnableMDNSReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{114}
}

func (x *SetEnableMDNSReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetEnableMDNSReply) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type SetEnableDepositServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *SetEnableDepositServiceRequest) Reset() {
	*x = SetEnableDepositServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEnableDepositServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEnableDepositServiceRequest) ProtoMessage() {}

func (x *SetEnableDepositServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEnableDepositServiceRequest.ProtoReflect.Descriptor instead.
func (*SetEnableDepositServiceRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{115}
}

func (x *SetEnableDepositServiceRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type SetEnableDepositServiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result                *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	EnableDepositService  bool    `protobuf:"varint,2,opt,name=enableDepositService,proto3" json:"enableDepositService,omitempty"`
	DepositServiceAddress string  `protobuf:"bytes,3,opt,name=depositServiceAddress,proto3" json:"depositServiceAddress,omitempty"`
}

func (x *SetEnableDepositServiceReply) Reset() {
	*x = SetEnableDepositServiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEnableDepositServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEnableDepositServiceReply) ProtoMessage() {}

func (x *SetEnableDepositServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEnableDepositServiceReply.ProtoReflect.Descriptor instead.
func (*SetEnableDepositServiceReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{116}
}

func (x *SetEnableDepositServiceReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetEnableDepositServiceReply) GetEnableDepositService() bool {
	if x != nil {
		return x.EnableDepositService
	}
	return false
}

func (x *SetEnableDepositServiceReply) GetDepositServiceAddress() string {
	if x != nil {
		return x.DepositServiceAddress
	}
	return ""
}

type SetDownloadDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadDir string `protobuf:"bytes,1,opt,name=downloadDir,proto3" json:"downloadDir,omitempty"`
}

func (x *SetDownloadDirRequest) Reset() {
	*x = SetDownloadDirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDownloadDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDownloadDirRequest) ProtoMessage() {}

func (x *SetDownloadDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDownloadDirRequest.ProtoReflect.Descriptor instead.
func (*SetDownloadDirRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{117}
}

func (x *SetDownloadDirRequest) GetDownloadDir() string {
	if x != nil {
		return x.DownloadDir
	}
	return ""
}

type SetDownloadDirReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	DownloadDir string  `protobuf:"bytes,2,opt,name=downloadDir,proto3" json:"downloadDir,omitempty"`
}

func (x *SetDownloadDirReply) Reset() {
	*x = SetDownloadDirReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDownloadDirReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDownloadDirReply) ProtoMessage() {}

func (x *SetDownloadDirReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDownloadDirReply.ProtoReflect.Descriptor instead.
func (*SetDownloadDirReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{118}
}

func (x *SetDownloadDirReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetDownloadDirReply) GetDownloadDir() string {
	if x != nil {
		return x.DownloadDir
	}
	return ""
}

// -------------------- 分隔符 --------------------
type DownloadSessionFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	MsgId     string `protobuf:"bytes,2,opt,name=msgId,proto3" json:"msgId,omitempty"`
	FileId    string `protobuf:"bytes,3,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *DownloadSessionFileRequest) Reset() {
	*x = DownloadSessionFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadSessionFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadSessionFileRequest) ProtoMessage() {}

func (x *DownloadSessionFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadSessionFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadSessionFileRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{119}
}

func (x *DownloadSessionFileRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *DownloadSessionFileRequest) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *DownloadSessionFileRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type DownloadSessionFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	FileId string  `protobuf:"bytes,2,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *DownloadSessionFileReply) Reset() {
	*x = DownloadSessionFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadSessionFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadSessionFileReply) ProtoMessage() {}

func (x *DownloadSessionFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadSessionFileReply.ProtoReflect.Descriptor instead.
func (*DownloadSessionFileReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{120}
}

func (x *DownloadSessionFileReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DownloadSessionFileReply) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type GetSessionFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Keywords  string `protobuf:"bytes,2,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Offset    int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetSessionFilesRequest) Reset() {
	*x = GetSessionFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionFilesRequest) ProtoMessage() {}

func (x *GetSessionFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionFilesRequest.ProtoReflect.Descriptor instead.
func (*GetSessionFilesRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{121}
}

func (x *GetSessionFilesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetSessionFilesRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *GetSessionFilesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSessionFilesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSessionFilesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result     `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Files  []*FileInfo `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *GetSessionFilesReply) Reset() {
	*x = GetSessionFilesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionFilesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionFilesReply) ProtoMessage() {}

func (x *GetSessionFilesReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionFilesReply.ProtoReflect.Descriptor instead.
func (*GetSessionFilesReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{122}
}

func (x *GetSessionFilesReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetSessionFilesReply) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

type DeleteSessionFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string   `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	FileIds   []string `protobuf:"bytes,2,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
}

func (x *DeleteSessionFileRequest) Reset() {
	*x = DeleteSessionFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSessionFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionFileRequest) ProtoMessage() {}

func (x *DeleteSessionFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteSessionFileRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{123}
}

func (x *DeleteSessionFileRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *DeleteSessionFileRequest) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

type DeleteSessionFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteSessionFileReply) Reset() {
	*x = DeleteSessionFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSessionFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionFileReply) ProtoMessage() {}

func (x *DeleteSessionFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionFileReply.ProtoReflect.Descriptor instead.
func (*DeleteSessionFileReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{124}
}

func (x *DeleteSessionFileReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SubscribeCommonEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeCommonEventRequest) Reset() {
	*x = SubscribeCommonEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeCommonEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCommonEventRequest) ProtoMessage() {}

func (x *SubscribeCommonEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCommonEventRequest.ProtoReflect.Descriptor instead.
func (*SubscribeCommonEventRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{125}
}

type SubscribeCommonEventReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *CommonEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *SubscribeCommonEventReply) Reset() {
	*x = SubscribeCommonEventReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeCommonEventReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCommonEventReply) ProtoMessage() {}

func (x *SubscribeCommonEventReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCommonEventReply.ProtoReflect.Descriptor instead.
func (*SubscribeCommonEventReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{126}
}

func (x *SubscribeCommonEventReply) GetEvent() *CommonEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type DecodeQRCodeTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *DecodeQRCodeTokenRequest) Reset() {
	*x = DecodeQRCodeTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeQRCodeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeQRCodeTokenRequest) ProtoMessage() {}

func (x *DecodeQRCodeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeQRCodeTokenRequest.ProtoReflect.Descriptor instead.
func (*DecodeQRCodeTokenRequest) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{127}
}

func (x *DecodeQRCodeTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type DecodeQRCodeTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result      `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Token  *QRCodeToken `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *DecodeQRCodeTokenReply) Reset() {
	*x = DecodeQRCodeTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeQRCodeTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeQRCodeTokenReply) ProtoMessage() {}

func (x *DecodeQRCodeTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeQRCodeTokenReply.ProtoReflect.Descriptor instead.
func (*DecodeQRCodeTokenReply) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{128}
}

func (x *DecodeQRCodeTokenReply) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DecodeQRCodeTokenReply) GetToken() *QRCodeToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableDepositService  bool   `protobuf:"varint,1,opt,name=enableDepositService,proto3" json:"enableDepositService,omitempty"`
	DepositServiceAddress string `protobuf:"bytes,2,opt,name=depositServiceAddress,proto3" json:"depositServiceAddress,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{129}
}

func (x *Config) GetEnableDepositService() bool {
	if x != nil {
		return x.EnableDepositService
	}
	return false
}

func (x *Config) GetDepositServiceAddress() string {
	if x != nil {
		return x.DepositServiceAddress
	}
	return ""
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerId
	PeerId string `protobuf:"bytes,1,opt,name=peerId,proto3" json:"peerId,omitempty"`
	// 用户名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 头像SHA1
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 加人是否需要审核
	AutoAddContact bool `protobuf:"varint,4,opt,name=autoAddContact,proto3" json:"autoAddContact,omitempty"`
	// 入群是否需要审核
	AutoJoinGroup bool `protobuf:"varint,5,opt,name=autoJoinGroup,proto3" json:"autoJoinGroup,omitempty"`
	// 发送离线消息
	AutoDepositMessage bool `protobuf:"varint,6,opt,name=autoDepositMessage,proto3" json:"autoDepositMessage,omitempty"`
	// 离线消息寄存地址
	DepositAddress string `protobuf:"bytes,7,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{130}
}

func (x *Account) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Account) GetAutoAddContact() bool {
	if x != nil {
		return x.AutoAddContact
	}
	return false
}

func (x *Account) GetAutoJoinGroup() bool {
	if x != nil {
		return x.AutoJoinGroup
	}
	return false
}

func (x *Account) GetAutoDepositMessage() bool {
	if x != nil {
		return x.AutoDepositMessage
	}
	return false
}

func (x *Account) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

// Peer（陌生人）
type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerId
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 用户名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 头像SHA1
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 离线消息寄存地址
	DepositAddress string `protobuf:"bytes,4,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{131}
}

func (x *Peer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Peer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Peer) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Peer) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

// 联系人
type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerId
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 用户名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 头像SHA1
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 消息寄存地址
	DepositAddress string `protobuf:"bytes,4,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
	// 是否在线
	OnlineState ConnState `protobuf:"varint,5,opt,name=onlineState,proto3,enum=chat.ConnState" json:"onlineState,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{132}
}

func (x *Contact) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Contact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Contact) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

func (x *Contact) GetOnlineState() ConnState {
	if x != nil {
		return x.OnlineState
	}
	return ConnState_OnlineState
}

// 联系人消息
type ContactMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 消息ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 发送者
	FromContact *Contact `protobuf:"bytes,2,opt,name=fromContact,proto3" json:"fromContact,omitempty"`
	// 接收者
	ToContactId string `protobuf:"bytes,3,opt,name=toContactId,proto3" json:"toContactId,omitempty"`
	// 消息类型
	MsgType MsgType `protobuf:"varint,4,opt,name=msgType,proto3,enum=chat.MsgType" json:"msgType,omitempty"`
	// MIME-Type
	MimeType string `protobuf:"bytes,5,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	// 消息内容
	Payload []byte `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
	// 是否离线消息
	IsDeposit bool `protobuf:"varint,7,opt,name=isDeposit,proto3" json:"isDeposit,omitempty"`
	// 消息状态
	State MsgState `protobuf:"varint,8,opt,name=state,proto3,enum=chat.MsgState" json:"state,omitempty"`
	// 消息时间
	CreateTime int64 `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *ContactMessage) Reset() {
	*x = ContactMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactMessage) ProtoMessage() {}

func (x *ContactMessage) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactMessage.ProtoReflect.Descriptor instead.
func (*ContactMessage) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{133}
}

func (x *ContactMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContactMessage) GetFromContact() *Contact {
	if x != nil {
		return x.FromContact
	}
	return nil
}

func (x *ContactMessage) GetToContactId() string {
	if x != nil {
		return x.ToContactId
	}
	return ""
}

func (x *ContactMessage) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_Unknown
}

func (x *ContactMessage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ContactMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ContactMessage) GetIsDeposit() bool {
	if x != nil {
		return x.IsDeposit
	}
	return false
}

func (x *ContactMessage) GetState() MsgState {
	if x != nil {
		return x.State
	}
	return MsgState_Sending
}

func (x *ContactMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ImageMessagePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThumbnailId string `protobuf:"bytes,1,opt,name=thumbnailId,proto3" json:"thumbnailId,omitempty"`
	ImageId     string `protobuf:"bytes,2,opt,name=imageId,proto3" json:"imageId,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Size        int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Width       int32  `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height      int32  `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ImageMessagePayload) Reset() {
	*x = ImageMessagePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageMessagePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMessagePayload) ProtoMessage() {}

func (x *ImageMessagePayload) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMessagePayload.ProtoReflect.Descriptor instead.
func (*ImageMessagePayload) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{134}
}

func (x *ImageMessagePayload) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

func (x *ImageMessagePayload) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *ImageMessagePayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageMessagePayload) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ImageMessagePayload) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageMessagePayload) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type VoiceMessagePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoiceId  string `protobuf:"bytes,1,opt,name=voiceId,proto3" json:"voiceId,omitempty"`
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *VoiceMessagePayload) Reset() {
	*x = VoiceMessagePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceMessagePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceMessagePayload) ProtoMessage() {}

func (x *VoiceMessagePayload) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceMessagePayload.ProtoReflect.Descriptor instead.
func (*VoiceMessagePayload) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{135}
}

func (x *VoiceMessagePayload) GetVoiceId() string {
	if x != nil {
		return x.VoiceId
	}
	return ""
}

func (x *VoiceMessagePayload) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type AudioMessagePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioId  string `protobuf:"bytes,1,opt,name=audioId,proto3" json:"audioId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Duration int32  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *AudioMessagePayload) Reset() {
	*x = AudioMessagePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioMessagePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioMessagePayload) ProtoMessage() {}

func (x *AudioMessagePayload) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioMessagePayload.ProtoReflect.Descriptor instead.
func (*AudioMessagePayload) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{136}
}

func (x *AudioMessagePayload) GetAudioId() string {
	if x != nil {
		return x.AudioId
	}
	return ""
}

func (x *AudioMessagePayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AudioMessagePayload) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AudioMessagePayload) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type VideoMessagePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId  string `protobuf:"bytes,1,opt,name=videoId,proto3" json:"videoId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Duration int32  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *VideoMessagePayload) Reset() {
	*x = VideoMessagePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMessagePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMessagePayload) ProtoMessage() {}

func (x *VideoMessagePayload) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMessagePayload.ProtoReflect.Descriptor instead.
func (*VideoMessagePayload) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{137}
}

func (x *VideoMessagePayload) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *VideoMessagePayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VideoMessagePayload) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *VideoMessagePayload) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type FileMessagePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,2,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Size   int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FileMessagePayload) Reset() {
	*x = FileMessagePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMessagePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMessagePayload) ProtoMessage() {}

func (x *FileMessagePayload) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMessagePayload.ProtoReflect.Descriptor instead.
func (*FileMessagePayload) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{138}
}

func (x *FileMessagePayload) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileMessagePayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileMessagePayload) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 群
type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Avatar
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 寄存PeerID
	DepositAddress string `protobuf:"bytes,4,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{139}
}

func (x *Group) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Group) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

// 群会话
type GroupSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Avatar
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 最新消息
	LastMessage string `protobuf:"bytes,4,opt,name=lastMessage,proto3" json:"lastMessage,omitempty"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *GroupSession) Reset() {
	*x = GroupSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSession) ProtoMessage() {}

func (x *GroupSession) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSession.ProtoReflect.Descriptor instead.
func (*GroupSession) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{140}
}

func (x *GroupSession) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupSession) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupSession) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupSession) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

func (x *GroupSession) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 群
type GroupDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Avatar
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 通知公告
	Notice string `protobuf:"bytes,4,opt,name=notice,proto3" json:"notice,omitempty"`
	// 是否需要审核入群
	AutoJoinGroup bool `protobuf:"varint,5,opt,name=autoJoinGroup,proto3" json:"autoJoinGroup,omitempty"`
	// 寄存PeerID
	DepositAddress string `protobuf:"bytes,6,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *GroupDetail) Reset() {
	*x = GroupDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDetail) ProtoMessage() {}

func (x *GroupDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDetail.ProtoReflect.Descriptor instead.
func (*GroupDetail) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{141}
}

func (x *GroupDetail) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupDetail) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupDetail) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *GroupDetail) GetAutoJoinGroup() bool {
	if x != nil {
		return x.AutoJoinGroup
	}
	return false
}

func (x *GroupDetail) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

func (x *GroupDetail) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GroupDetail) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 群消息
type GroupMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerId
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 用户名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 头像SHA1
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 是否在线
	OnlineState ConnState `protobuf:"varint,4,opt,name=onlineState,proto3,enum=chat.ConnState" json:"onlineState,omitempty"`
}

func (x *GroupMember) Reset() {
	*x = GroupMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMember) ProtoMessage() {}

func (x *GroupMember) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMember.ProtoReflect.Descriptor instead.
func (*GroupMember) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{142}
}

func (x *GroupMember) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupMember) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupMember) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupMember) GetOnlineState() ConnState {
	if x != nil {
		return x.OnlineState
	}
	return ConnState_OnlineState
}

// 群消息
type GroupMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 消息ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// 发送者
	Sender *Peer `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	// 消息类型
	MsgType MsgType `protobuf:"varint,4,opt,name=msgType,proto3,enum=chat.MsgType" json:"msgType,omitempty"`
	// MIME类型
	MimeType string `protobuf:"bytes,5,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	// 内容
	Payload []byte `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
	// 是否离线消息
	IsDeposit bool `protobuf:"varint,7,opt,name=isDeposit,proto3" json:"isDeposit,omitempty"`
	// 消息状态
	State MsgState `protobuf:"varint,8,opt,name=state,proto3,enum=chat.MsgState" json:"state,omitempty"`
	// 消息时间
	CreateTime int64 `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *GroupMessage) Reset() {
	*x = GroupMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessage) ProtoMessage() {}

func (x *GroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessage.ProtoReflect.Descriptor instead.
func (*GroupMessage) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{143}
}

func (x *GroupMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupMessage) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupMessage) GetSender() *Peer {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *GroupMessage) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_Unknown
}

func (x *GroupMessage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *GroupMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GroupMessage) GetIsDeposit() bool {
	if x != nil {
		return x.IsDeposit
	}
	return false
}

func (x *GroupMessage) GetState() MsgState {
	if x != nil {
		return x.State
	}
	return MsgState_Sending
}

func (x *GroupMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 会话信息
type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会话类型
	Type Session_SessionType `protobuf:"varint,1,opt,name=type,proto3,enum=chat.Session_SessionType" json:"type,omitempty"`
	// 会话id
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// 关联ID（联系人ID或群组ID）
	RelId string `protobuf:"bytes,3,opt,name=relId,proto3" json:"relId,omitempty"`
	// 名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// 头像 SHA1
	Avatar string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 在线状态
	State ConnState `protobuf:"varint,6,opt,name=state,proto3,enum=chat.ConnState" json:"state,omitempty"`
	// 最新消息
	Lastmsg string `protobuf:"bytes,7,opt,name=lastmsg,proto3" json:"lastmsg,omitempty"`
	// 有未读消息
	Unreads int64 `protobuf:"varint,8,opt,name=unreads,proto3" json:"unreads,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{144}
}

func (x *Session) GetType() Session_SessionType {
	if x != nil {
		return x.Type
	}
	return Session_ContactSession
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetRelId() string {
	if x != nil {
		return x.RelId
	}
	return ""
}

func (x *Session) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Session) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Session) GetState() ConnState {
	if x != nil {
		return x.State
	}
	return ConnState_OnlineState
}

func (x *Session) GetLastmsg() string {
	if x != nil {
		return x.Lastmsg
	}
	return ""
}

func (x *Session) GetUnreads() int64 {
	if x != nil {
		return x.Unreads
	}
	return 0
}

// 系统消息
type SystemMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SystemType  SystemMessage_SystemType `protobuf:"varint,2,opt,name=systemType,proto3,enum=chat.SystemMessage_SystemType" json:"systemType,omitempty"`
	GroupId     string                   `protobuf:"bytes,3,opt,name=groupId,proto3" json:"groupId,omitempty"`
	FromPeer    *Peer                    `protobuf:"bytes,4,opt,name=fromPeer,proto3" json:"fromPeer,omitempty"`
	ToPeerId    string                   `protobuf:"bytes,5,opt,name=toPeerId,proto3" json:"toPeerId,omitempty"`
	Content     string                   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	SystemState string                   `protobuf:"bytes,7,opt,name=systemState,proto3" json:"systemState,omitempty"`
	CreateTime  int64                    `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  int64                    `protobuf:"varint,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *SystemMessage) Reset() {
	*x = SystemMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMessage) ProtoMessage() {}

func (x *SystemMessage) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMessage.ProtoReflect.Descriptor instead.
func (*SystemMessage) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{145}
}

func (x *SystemMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SystemMessage) GetSystemType() SystemMessage_SystemType {
	if x != nil {
		return x.SystemType
	}
	return SystemMessage_ApplyAddContact
}

func (x *SystemMessage) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SystemMessage) GetFromPeer() *Peer {
	if x != nil {
		return x.FromPeer
	}
	return nil
}

func (x *SystemMessage) GetToPeerId() string {
	if x != nil {
		return x.ToPeerId
	}
	return ""
}

func (x *SystemMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SystemMessage) GetSystemState() string {
	if x != nil {
		return x.SystemState
	}
	return ""
}

func (x *SystemMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SystemMessage) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 外部(前端)订阅消息
type CommonEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    CommonEvent_EventType `protobuf:"varint,1,opt,name=type,proto3,enum=chat.CommonEvent_EventType" json:"type,omitempty"`
	Payload []byte                `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CommonEvent) Reset() {
	*x = CommonEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonEvent) ProtoMessage() {}

func (x *CommonEvent) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonEvent.ProtoReflect.Descriptor instead.
func (*CommonEvent) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{146}
}

func (x *CommonEvent) GetType() CommonEvent_EventType {
	if x != nil {
		return x.Type
	}
	return CommonEvent_PeerMessage
}

func (x *CommonEvent) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId      string   `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	FileType    FileType `protobuf:"varint,2,opt,name=fileType,proto3,enum=chat.FileType" json:"fileType,omitempty"`
	MimeType    string   `protobuf:"bytes,3,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	Name        string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Size        int64    `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	ThumbnailId string   `protobuf:"bytes,6,opt,name=thumbnailId,proto3" json:"thumbnailId,omitempty"`
	Width       int32    `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	Height      int32    `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
	Duration    int32    `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{147}
}

func (x *FileInfo) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileInfo) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_OtherFileType
}

func (x *FileInfo) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

func (x *FileInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *FileInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *FileInfo) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type QRCodeToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenType      QRCodeToken_TokenType `protobuf:"varint,1,opt,name=tokenType,proto3,enum=chat.QRCodeToken_TokenType" json:"tokenType,omitempty"`
	Id             string                `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Avatar         string                `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	DepositAddress string                `protobuf:"bytes,5,opt,name=depositAddress,proto3" json:"depositAddress,omitempty"`
}

func (x *QRCodeToken) Reset() {
	*x = QRCodeToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRCodeToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRCodeToken) ProtoMessage() {}

func (x *QRCodeToken) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRCodeToken.ProtoReflect.Descriptor instead.
func (*QRCodeToken) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{148}
}

func (x *QRCodeToken) GetTokenType() QRCodeToken_TokenType {
	if x != nil {
		return x.TokenType
	}
	return QRCodeToken_Unknown
}

func (x *QRCodeToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QRCodeToken) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QRCodeToken) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QRCodeToken) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

type CommonEvent_PayloadPeerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId      string `protobuf:"bytes,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	FromPeerId string `protobuf:"bytes,2,opt,name=fromPeerId,proto3" json:"fromPeerId,omitempty"`
}

func (x *CommonEvent_PayloadPeerMessage) Reset() {
	*x = CommonEvent_PayloadPeerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonEvent_PayloadPeerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonEvent_PayloadPeerMessage) ProtoMessage() {}

func (x *CommonEvent_PayloadPeerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonEvent_PayloadPeerMessage.ProtoReflect.Descriptor instead.
func (*CommonEvent_PayloadPeerMessage) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{146, 0}
}

func (x *CommonEvent_PayloadPeerMessage) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *CommonEvent_PayloadPeerMessage) GetFromPeerId() string {
	if x != nil {
		return x.FromPeerId
	}
	return ""
}

type CommonEvent_PayloadGroupMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId   string `protobuf:"bytes,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *CommonEvent_PayloadGroupMessage) Reset() {
	*x = CommonEvent_PayloadGroupMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonEvent_PayloadGroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonEvent_PayloadGroupMessage) ProtoMessage() {}

func (x *CommonEvent_PayloadGroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonEvent_PayloadGroupMessage.ProtoReflect.Descriptor instead.
func (*CommonEvent_PayloadGroupMessage) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{146, 1}
}

func (x *CommonEvent_PayloadGroupMessage) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *CommonEvent_PayloadGroupMessage) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type CommonEvent_PayloadOnlineState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlinePeerIds  []string `protobuf:"bytes,1,rep,name=onlinePeerIds,proto3" json:"onlinePeerIds,omitempty"`
	OfflinePeerIds []string `protobuf:"bytes,2,rep,name=offlinePeerIds,proto3" json:"offlinePeerIds,omitempty"`
}

func (x *CommonEvent_PayloadOnlineState) Reset() {
	*x = CommonEvent_PayloadOnlineState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_grpc_proto_chat_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonEvent_PayloadOnlineState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonEvent_PayloadOnlineState) ProtoMessage() {}

func (x *CommonEvent_PayloadOnlineState) ProtoReflect() protoreflect.Message {
	mi := &file_bind_grpc_proto_chat_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonEvent_PayloadOnlineState.ProtoReflect.Descriptor instead.
func (*CommonEvent_PayloadOnlineState) Descriptor() ([]byte, []int) {
	return file_bind_grpc_proto_chat_proto_rawDescGZIP(), []int{146, 2}
}

func (x *CommonEvent_PayloadOnlineState) GetOnlinePeerIds() []string {
	if x != nil {
		return x.OnlinePeerIds
	}
	return nil
}

func (x *CommonEvent_PayloadOnlineState) GetOfflinePeerIds() []string {
	if x != nil {
		return x.OfflinePeerIds
	}
	return nil
}

var File_bind_grpc_proto_chat_proto protoreflect.FileDescriptor

var file_bind_grpc_proto_chat_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x62, 0x69, 0x6e, 0x64, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x68,
	0x61, 0x74, 0x22, 0x36, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x63, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x27, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x37, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x55, 0x0a, 0x15, 0x53, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x22, 0x2b, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a,
	0x13, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x32,
	0x0a, 0x18, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x41, 0x75, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x22, 0x56, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x17, 0x53, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x22, 0x55, 0x0a,
	0x15, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x41, 0x75, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x1a,
	0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x6d, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x31, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x60, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x22, 0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x22, 0x63, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x3d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x6c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x61, 0x72,
	0x62, 0x79, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x61,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65,
	0x72, 0x22, 0x4e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x22, 0x6e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x67, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x71, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x57, 0x0a,
	0x1d, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x1e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xba, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9d,
	0x01, 0x0a, 0x1d, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x8d,
	0x01, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x49,
	0x0a, 0x15, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x13, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x1a, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3a,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3c, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x7e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x22, 0x5b, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x31, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x22, 0x48, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x61, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6d, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x1c,
	0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x1c, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb4, 0x01,
	0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb4, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x1b,
	0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x49, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x53, 0x0a, 0x13,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x22, 0x43, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x22, 0x53, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x50, 0x0a, 0x16, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x22, 0x69, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x50,
	0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x3e, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x4b, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x75, 0x74, 0x6f,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x22, 0x55, 0x0a,
	0x15, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x41, 0x75, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x6b, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x16, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2c, 0x0a, 0x10, 0x45, 0x78,
	0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x22, 0x38, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2f, 0x0a, 0x13, 0x44, 0x69,
	0x73, 0x62, 0x61, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x44,
	0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x36, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x56,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x63, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x48, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x22, 0x40, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x14, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x16, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x58, 0x0a,
	0x14, 0x41, 0x67, 0x72, 0x65, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x17, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x59,
	0x0a, 0x15, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x15, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x57,
	0x0a, 0x13, 0x41, 0x67, 0x72, 0x65, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x16, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x58, 0x0a,
	0x14, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x63, 0x6b, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x36, 0x0a, 0x14, 0x53, 0x65, 0x74,
	0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x73, 0x22, 0x5a, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x73, 0x22, 0x3c, 0x0a,
	0x16, 0x53, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x22, 0x60, 0x0a, 0x14, 0x53,
	0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x22, 0x2e, 0x0a,
	0x14, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x44, 0x4e, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x52, 0x0a,
	0x12, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x44, 0x4e, 0x53, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x38, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x1c,
	0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x39, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x72, 0x22, 0x5d, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x69, 0x72, 0x22, 0x68, 0x0a, 0x1a, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x58, 0x0a, 0x18, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x62, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x22, 0x52, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x18, 0x44, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x67, 0x0a, 0x16,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x72, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x32, 0x0a, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75, 0x74,
	0x6f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x4a, 0x6f,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x6a, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb6,
	0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x13, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x4b, 0x0a, 0x13, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73,
	0x0a, 0x13, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x13, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x6b,
	0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x0c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x7c, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x31, 0x0a, 0x0b, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x9f,
	0x02, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a,
	0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x9a, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x25, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x6d, 0x73, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x6d, 0x73, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x22, 0xf1, 0x02,
	0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3e, 0x0a, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x66, 0x72, 0x6f,
	0x6d, 0x50, 0x65, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0a, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10,
	0x01, 0x22, 0x90, 0x03, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x4a, 0x0a, 0x12,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x65, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d,
	0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72,
	0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x45, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a,
	0x62, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x65, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x22, 0x3f, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x65, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x10, 0x02, 0x22, 0xfe, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdb, 0x01, 0x0a, 0x0b, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x2d, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x10, 0x02, 0x2a, 0x56, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10,
	0x05, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x06, 0x2a, 0x33, 0x0a, 0x08, 0x4d,
	0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x10, 0x02,
	0x2a, 0x40, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x10, 0x02, 0x2a, 0x7b, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0x05, 0x32,
	0x86, 0x06, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x76, 0x63, 0x12, 0x47,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a,
	0x18, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xe2, 0x0b, 0x0a, 0x0a, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x53, 0x76, 0x63, 0x12, 0x3e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x12, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x61, 0x72, 0x62, 0x79, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x50, 0x65, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x13, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x16, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x62, 0x0a, 0x17, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x62, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x62, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x62, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x60, 0x0a, 0x16, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x32, 0x8f, 0x0f,
	0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x76, 0x63, 0x12, 0x41, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x4a, 0x6f,
	0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x62, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x09, 0x45, 0x78, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x45, 0x78, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x41, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x62,
	0x61, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x11, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x52, 0x43, 0x6f, 0x64,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x52, 0x43,
	0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x5a, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x78, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x15, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x15, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x32,
	0x4f, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x76, 0x63, 0x12, 0x41, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x32, 0xf7, 0x03, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x76, 0x63, 0x12, 0x53,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x41, 0x67, 0x72, 0x65, 0x65, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x41, 0x67,
	0x72, 0x65, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x41, 0x67,
	0x72, 0x65, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x0f, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xdc, 0x03, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x76, 0x63, 0x12, 0x3b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x44, 0x4e, 0x53, 0x12, 0x1a,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x44, 0x4e, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x44, 0x4e, 0x53, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x0e, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x72, 0x12,
	0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44,
	0x69, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x88, 0x02, 0x0a, 0x07, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x76, 0x63, 0x12, 0x59, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x32, 0x6e, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x53, 0x76, 0x63, 0x12, 0x5e, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x30, 0x01, 0x32, 0x60, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x76,
	0x63, 0x12, 0x53, 0x0a, 0x11, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x51, 0x52, 0x43, 0x6f, 0x64,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x2e, 0x0a, 0x14, 0x78, 0x79, 0x7a, 0x2e, 0x74, 0x6f,
	0x62, 0x69, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x06, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bind_grpc_proto_chat_proto_rawDescOnce sync.Once
	file_bind_grpc_proto_chat_proto_rawDescData = file_bind_grpc_proto_chat_proto_rawDesc
)

func file_bind_grpc_proto_chat_proto_rawDescGZIP() []byte {
	file_bind_grpc_proto_chat_proto_rawDescOnce.Do(func() {
		file_bind_grpc_proto_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_bind_grpc_proto_chat_proto_rawDescData)
	})
	return file_bind_grpc_proto_chat_proto_rawDescData
}

var file_bind_grpc_proto_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_bind_grpc_proto_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 152)
var file_bind_grpc_proto_chat_proto_goTypes = []interface{}{
	(MsgType)(0),                            // 0: chat.MsgType
	(MsgState)(0),                           // 1: chat.MsgState
	(ConnState)(0),                          // 2: chat.ConnState
	(FileType)(0),                           // 3: chat.FileType
	(Session_SessionType)(0),                // 4: chat.Session.SessionType
	(SystemMessage_SystemType)(0),           // 5: chat.SystemMessage.SystemType
	(CommonEvent_EventType)(0),              // 6: chat.CommonEvent.EventType
	(QRCodeToken_TokenType)(0),              // 7: chat.QRCodeToken.TokenType
	(*Result)(nil),                          // 8: chat.Result
	(*CreateAccountRequest)(nil),            // 9: chat.CreateAccountRequest
	(*CreateAccountReply)(nil),              // 10: chat.CreateAccountReply
	(*GetAccountRequest)(nil),               // 11: chat.GetAccountRequest
	(*GetAccountReply)(nil),                 // 12: chat.GetAccountReply
	(*SetAccountAvatarRequest)(nil),         // 13: chat.SetAccountAvatarRequest
	(*SetAccountAvatarReply)(nil),           // 14: chat.SetAccountAvatarReply
	(*SetAccountNameRequest)(nil),           // 15: chat.SetAccountNameRequest
	(*SetAccountNameReply)(nil),             // 16: chat.SetAccountNameReply
	(*SetAutoAddContactRequest)(nil),        // 17: chat.SetAutoAddContactRequest
	(*SetAutoAddContactReply)(nil),          // 18: chat.SetAutoAddContactReply
	(*SetAutoJoinGroupRequest)(nil),         // 19: chat.SetAutoJoinGroupRequest
	(*SetAutoJoinGroupReply)(nil),           // 20: chat.SetAutoJoinGroupReply
	(*SetAutoDepositMessageRequest)(nil),    // 21: chat.SetAutoDepositMessageRequest
	(*SetAutoDepositMessageReply)(nil),      // 22: chat.SetAutoDepositMessageReply
	(*SetAccountDepositAddressRequest)(nil), // 23: chat.SetAccountDepositAddressRequest
	(*SetAccountDepositAddressReply)(nil),   // 24: chat.SetAccountDepositAddressReply
	(*GetAccountQRCodeTokenRequest)(nil),    // 25: chat.GetAccountQRCodeTokenRequest
	(*GetAccountQRCodeTokenReply)(nil),      // 26: chat.GetAccountQRCodeTokenReply
	(*GetContactRequest)(nil),               // 27: chat.GetContactRequest
	(*GetContactReply)(nil),                 // 28: chat.GetContactReply
	(*GetContactsRequest)(nil),              // 29: chat.GetContactsRequest
	(*GetContactsReply)(nil),                // 30: chat.GetContactsReply
	(*GetSpecifiedContactsRequest)(nil),     // 31: chat.GetSpecifiedContactsRequest
	(*GetSpecifiedContactsReply)(nil),       // 32: chat.GetSpecifiedContactsReply
	(*GetNearbyPeersRequest)(nil),           // 33: chat.GetNearbyPeersRequest
	(*GetNearbyPeersStreamReply)(nil),       // 34: chat.GetNearbyPeersStreamReply
	(*GetContactMessageRequest)(nil),        // 35: chat.GetContactMessageRequest
	(*GetContactMessageReply)(nil),          // 36: chat.GetContactMessageReply
	(*GetContactMessagesRequest)(nil),       // 37: chat.GetContactMessagesRequest
	(*GetContactMessagesReply)(nil),         // 38: chat.GetContactMessagesReply
	(*SendContactTextMessageRequest)(nil),   // 39: chat.SendContactTextMessageRequest
	(*SendContactImageMessageRequest)(nil),  // 40: chat.SendContactImageMessageRequest
	(*SendContactVoiceMessageRequest)(nil),  // 41: chat.SendContactVoiceMessageRequest
	(*SendContactAudioMessageRequest)(nil),  // 42: chat.SendContactAudioMessageRequest
	(*SendContactVideoMessageRequest)(nil),  // 43: chat.SendContactVideoMessageRequest
	(*SendContactFileMessageRequest)(nil),   // 44: chat.SendContactFileMessageRequest
	(*SendContactMessageReply)(nil),         // 45: chat.SendContactMessageReply
	(*SetContactNameRequest)(nil),           // 46: chat.SetContactNameRequest
	(*SetContactNameReply)(nil),             // 47: chat.SetContactNameReply
	(*ClearContactMessageRequest)(nil),      // 48: chat.ClearContactMessageRequest
	(*ClearContactMessageReply)(nil),        // 49: chat.ClearContactMessageReply
	(*DeleteContactRequest)(nil),            // 50: chat.DeleteContactRequest
	(*DeleteContactReply)(nil),              // 51: chat.DeleteContactReply
	(*GetContactQRCodeTokenRequest)(nil),    // 52: chat.GetContactQRCodeTokenRequest
	(*GetContactQRCodeTokenReply)(nil),      // 53: chat.GetContactQRCodeTokenReply
	(*CreateGroupRequest)(nil),              // 54: chat.CreateGroupRequest
	(*CreateGroupReply)(nil),                // 55: chat.CreateGroupReply
	(*GetGroupRequest)(nil),                 // 56: chat.GetGroupRequest
	(*GetGroupReply)(nil),                   // 57: chat.GetGroupReply
	(*GetGroupDetailRequest)(nil),           // 58: chat.GetGroupDetailRequest
	(*GetGroupDetailReply)(nil),             // 59: chat.GetGroupDetailReply
	(*GetGroupsRequest)(nil),                // 60: chat.GetGroupsRequest
	(*GetGroupsReply)(nil),                  // 61: chat.GetGroupsReply
	(*GetGroupMessageRequest)(nil),          // 62: chat.GetGroupMessageRequest
	(*GetGroupMessageReply)(nil),            // 63: chat.GetGroupMessageReply
	(*GetGroupMessagesRequest)(nil),         // 64: chat.GetGroupMessagesRequest
	(*GetGroupMessagesReply)(nil),           // 65: chat.GetGroupMessagesReply
	(*SendGroupTextMessageRequest)(nil),     // 66: chat.SendGroupTextMessageRequest
	(*SendGroupImageMessageRequest)(nil),    // 67: chat.SendGroupImageMessageRequest
	(*SendGroupVoiceMessageRequest)(nil),    // 68: chat.SendGroupVoiceMessageRequest
	(*SendGroupAudioMessageRequest)(nil),    // 69: chat.SendGroupAudioMessageRequest
	(*SendGroupVideoMessageRequest)(nil),    // 70: chat.SendGroupVideoMessageRequest
	(*SendGroupFileMessageRequest)(nil),     // 71: chat.SendGroupFileMessageRequest
	(*SendGroupMessageReply)(nil),           // 72: chat.SendGroupMessageReply
	(*SetGroupAvatarRequest)(nil),           // 73: chat.SetGroupAvatarRequest
	(*SetGroupAvatarReply)(nil),             // 74: chat.SetGroupAvatarReply
	(*SetGroupNameRequest)(nil),             // 75: chat.SetGroupNameRequest
	(*SetGroupNameReply)(nil),               // 76: chat.SetGroupNameReply
	(*SetGroupNoticeRequest)(nil),           // 77: chat.SetGroupNoticeRequest
	(*SetGroupNoticeReply)(nil),             // 78: chat.SetGroupNoticeReply
	(*InviteJoinGroupRequest)(nil),          // 79: chat.InviteJoinGroupRequest
	(*InviteJoinGroupReply)(nil),            // 80: chat.InviteJoinGroupReply
	(*GetGroupMembersRequest)(nil),          // 81: chat.GetGroupMembersRequest
	(*GetGroupMembersReply)(nil),            // 82: chat.GetGroupMembersReply
	(*RemoveGroupMemberRequest)(nil),        // 83: chat.RemoveGroupMemberRequest
	(*RemoveGroupMemberReply)(nil),          // 84: chat.RemoveGroupMemberReply
	(*SetGroupAutoJoinRequest)(nil),         // 85: chat.SetGroupAutoJoinRequest
	(*SetGroupAutoJoinReply)(nil),           // 86: chat.SetGroupAutoJoinReply
	(*SetGroupDepositAddressRequest)(nil),   // 87: chat.SetGroupDepositAddressRequest
	(*SetGroupDepositAddressReply)(nil),     // 88: chat.SetGroupDepositAddressReply
	(*ClearGroupMessageRequest)(nil),        // 89: chat.ClearGroupMessageRequest
	(*ClearGroupMessageReply)(nil),          // 90: chat.ClearGroupMessageReply
	(*ExitGroupRequest)(nil),                // 91: chat.ExitGroupRequest
	(*ExitGroupReply)(nil),                  // 92: chat.ExitGroupReply
	(*DeleteGroupRequest)(nil),              // 93: chat.DeleteGroupRequest
	(*DeleteGroupReply)(nil),                // 94: chat.DeleteGroupReply
	(*DisbandGroupRequest)(nil),             // 95: chat.DisbandGroupRequest
	(*DisbandGroupReply)(nil),               // 96: chat.DisbandGroupReply
	(*GetGroupQRCodeTokenRequest)(nil),      // 97: chat.GetGroupQRCodeTokenRequest
	(*GetGroupQRCodeTokenReply)(nil),        // 98: chat.GetGroupQRCodeTokenReply
	(*GetSessionsRequest)(nil),              // 99: chat.GetSessionsRequest
	(*GetSessionsReply)(nil),                // 100: chat.GetSessionsReply
	(*GetSystemMessagesRequest)(nil),        // 101: chat.GetSystemMessagesRequest
	(*GetSystemMessagesReply)(nil),          // 102: chat.GetSystemMessagesReply
	(*DeleteSystemMessageRequest)(nil),      // 103: chat.DeleteSystemMessageRequest
	(*DeleteSystemMessageReply)(nil),        // 104: chat.DeleteSystemMessageReply
	(*ApplyAddContactRequest)(nil),          // 105: chat.ApplyAddContactRequest
	(*ApplyAddContactReply)(nil),            // 106: chat.ApplyAddContactReply
	(*AgreeAddContactRequest)(nil),          // 107: chat.AgreeAddContactRequest
	(*AgreeAddContactReply)(nil),            // 108: chat.AgreeAddContactReply
	(*RejectAddContactRequest)(nil),         // 109: chat.RejectAddContactRequest
	(*RejectAddContactReply)(nil),           // 110: chat.RejectAddContactReply
	(*AgreeJoinGroupRequest)(nil),           // 111: chat.AgreeJoinGroupRequest
	(*AgreeJoinGroupReply)(nil),             // 112: chat.AgreeJoinGroupReply
	(*RejectJoinGroupRequest)(nil),          // 113: chat.RejectJoinGroupRequest
	(*RejectJoinGroupReply)(nil),            // 114: chat.RejectJoinGroupReply
	(*GetConfigRequest)(nil),                // 115: chat.GetConfigRequest
	(*GetConfigReply)(nil),                  // 116: chat.GetConfigReply
	(*SetBootstrapsRequest)(nil),            // 117: chat.SetBootstrapsRequest
	(*SetBootstrapsReply)(nil),              // 118: chat.SetBootstrapsReply
	(*SetPeeringPeersRequest)(nil),          // 119: chat.SetPeeringPeersRequest
	(*SetPeeringPeersReply)(nil),            // 120: chat.SetPeeringPeersReply
	(*SetEnableMDNSRequest)(nil),            // 121: chat.SetEnableMDNSRequest
	(*SetEnableMDNSReply)(nil),              // 122: chat.SetEnableMDNSReply
	(*SetEnableDepositServiceRequest)(nil),  // 123: chat.SetEnableDepositServiceRequest
	(*SetEnableDepositServiceReply)(nil),    // 124: chat.SetEnableDepositServiceReply
	(*SetDownloadDirRequest)(nil),           // 125: chat.SetDownloadDirRequest
	(*SetDownloadDirReply)(nil),             // 126: chat.SetDownloadDirReply
	(*DownloadSessionFileRequest)(nil),      // 127: chat.DownloadSessionFileRequest
	(*DownloadSessionFileReply)(nil),        // 128: chat.DownloadSessionFileReply
	(*GetSessionFilesRequest)(nil),          // 129: chat.GetSessionFilesRequest
	(*GetSessionFilesReply)(nil),            // 130: chat.GetSessionFilesReply
	(*DeleteSessionFileRequest)(nil),        // 131: chat.DeleteSessionFileRequest
	(*DeleteSessionFileReply)(nil),          // 132: chat.DeleteSessionFileReply
	(*SubscribeCommonEventRequest)(nil),     // 133: chat.SubscribeCommonEventRequest
	(*SubscribeCommonEventReply)(nil),       // 134: chat.SubscribeCommonEventReply
	(*DecodeQRCodeTokenRequest)(nil),        // 135: chat.DecodeQRCodeTokenRequest
	(*DecodeQRCodeTokenReply)(nil),          // 136: chat.DecodeQRCodeTokenReply
	(*Config)(nil),                          // 137: chat.Config
	(*Account)(nil),                         // 138: chat.Account
	(*Peer)(nil),                            // 139: chat.Peer
	(*Contact)(nil),                         // 140: chat.Contact
	(*ContactMessage)(nil),                  // 141: chat.ContactMessage
	(*ImageMessagePayload)(nil),             // 142: chat.ImageMessagePayload
	(*VoiceMessagePayload)(nil),             // 143: chat.VoiceMessagePayload
	(*AudioMessagePayload)(nil),             // 144: chat.AudioMessagePayload
	(*VideoMessagePayload)(nil),             // 145: chat.VideoMessagePayload
	(*FileMessagePayload)(nil),              // 146: chat.FileMessagePayload
	(*Group)(nil),                           // 147: chat.Group
	(*GroupSession)(nil),                    // 148: chat.GroupSession
	(*GroupDetail)(nil),                     // 149: chat.GroupDetail
	(*GroupMember)(nil),                     // 150: chat.GroupMember
	(*GroupMessage)(nil),                    // 151: chat.GroupMessage
	(*Session)(nil),                         // 152: chat.Session
	(*SystemMessage)(nil),                   // 153: chat.SystemMessage
	(*CommonEvent)(nil),                     // 154: chat.CommonEvent
	(*FileInfo)(nil),                        // 155: chat.FileInfo
	(*QRCodeToken)(nil),                     // 156: chat.QRCodeToken
	(*CommonEvent_PayloadPeerMessage)(nil),  // 157: chat.CommonEvent.PayloadPeerMessage
	(*CommonEvent_PayloadGroupMessage)(nil), // 158: chat.CommonEvent.PayloadGroupMessage
	(*CommonEvent_PayloadOnlineState)(nil),  // 159: chat.CommonEvent.PayloadOnlineState
}
var file_bind_grpc_proto_chat_proto_depIdxs = []int32{
	8,   // 0: chat.CreateAccountReply.result:type_name -> chat.Result
	138, // 1: chat.CreateAccountReply.account:type_name -> chat.Account
	8,   // 2: chat.GetAccountReply.result:type_name -> chat.Result
	138, // 3: chat.GetAccountReply.account:type_name -> chat.Account
	8,   // 4: chat.SetAccountAvatarReply.result:type_name -> chat.Result
	8,   // 5: chat.SetAccountNameReply.result:type_name -> chat.Result
	8,   // 6: chat.SetAutoAddContactReply.result:type_name -> chat.Result
	8,   // 7: chat.SetAutoJoinGroupReply.result:type_name -> chat.Result
	8,   // 8: chat.SetAutoDepositMessageReply.result:type_name -> chat.Result
	8,   // 9: chat.SetAccountDepositAddressReply.result:type_name -> chat.Result
	8,   // 10: chat.GetAccountQRCodeTokenReply.result:type_name -> chat.Result
	8,   // 11: chat.GetContactReply.result:type_name -> chat.Result
	140, // 12: chat.GetContactReply.contact:type_name -> chat.Contact
	8,   // 13: chat.GetContactsReply.result:type_name -> chat.Result
	140, // 14: chat.GetContactsReply.contacts:type_name -> chat.Contact
	8,   // 15: chat.GetSpecifiedContactsReply.result:type_name -> chat.Result
	140, // 16: chat.GetSpecifiedContactsReply.contacts:type_name -> chat.Contact
	8,   // 17: chat.GetNearbyPeersStreamReply.result:type_name -> chat.Result
	139, // 18: chat.GetNearbyPeersStreamReply.peer:type_name -> chat.Peer
	8,   // 19: chat.GetContactMessageReply.result:type_name -> chat.Result
	141, // 20: chat.GetContactMessageReply.message:type_name -> chat.ContactMessage
	8,   // 21: chat.GetContactMessagesReply.result:type_name -> chat.Result
	141, // 22: chat.GetContactMessagesReply.messages:type_name -> chat.ContactMessage
	8,   // 23: chat.SendContactMessageReply.result:type_name -> chat.Result
	141, // 24: chat.SendContactMessageReply.message:type_name -> chat.ContactMessage
	8,   // 25: chat.SetContactNameReply.result:type_name -> chat.Result
	8,   // 26: chat.ClearContactMessageReply.result:type_name -> chat.Result
	8,   // 27: chat.DeleteContactReply.result:type_name -> chat.Result
	8,   // 28: chat.GetContactQRCodeTokenReply.result:type_name -> chat.Result
	8,   // 29: chat.CreateGroupReply.result:type_name -> chat.Result
	147, // 30: chat.CreateGroupReply.group:type_name -> chat.Group
	8,   // 31: chat.GetGroupReply.result:type_name -> chat.Result
	147, // 32: chat.GetGroupReply.group:type_name -> chat.Group
	8,   // 33: chat.GetGroupDetailReply.result:type_name -> chat.Result
	149, // 34: chat.GetGroupDetailReply.group:type_name -> chat.GroupDetail
	8,   // 35: chat.GetGroupsReply.result:type_name -> chat.Result
	147, // 36: chat.GetGroupsReply.groups:type_name -> chat.Group
	8,   // 37: chat.GetGroupMessageReply.result:type_name -> chat.Result
	151, // 38: chat.GetGroupMessageReply.message:type_name -> chat.GroupMessage
	8,   // 39: chat.GetGroupMessagesReply.result:type_name -> chat.Result
	151, // 40: chat.GetGroupMessagesReply.messages:type_name -> chat.GroupMessage
	8,   // 41: chat.SendGroupMessageReply.result:type_name -> chat.Result
	151, // 42: chat.SendGroupMessageReply.message:type_name -> chat.GroupMessage
	8,   // 43: chat.SetGroupAvatarReply.result:type_name -> chat.Result
	8,   // 44: chat.SetGroupNameReply.result:type_name -> chat.Result
	8,   // 45: chat.SetGroupNoticeReply.result:type_name -> chat.Result
	8,   // 46: chat.InviteJoinGroupReply.result:type_name -> chat.Result
	8,   // 47: chat.GetGroupMembersReply.result:type_name -> chat.Result
	150, // 48: chat.GetGroupMembersReply.members:type_name -> chat.GroupMember
	8,   // 49: chat.RemoveGroupMemberReply.result:type_name -> chat.Result
	8,   // 50: chat.SetGroupAutoJoinReply.result:type_name -> chat.Result
	8,   // 51: chat.SetGroupDepositAddressReply.result:type_name -> chat.Result
	8,   // 52: chat.ClearGroupMessageReply.result:type_name -> chat.Result
	8,   // 53: chat.ExitGroupReply.result:type_name -> chat.Result
	8,   // 54: chat.DeleteGroupReply.result:type_name -> chat.Result
	8,   // 55: chat.DisbandGroupReply.result:type_name -> chat.Result
	8,   // 56: chat.GetGroupQRCodeTokenReply.result:type_name -> chat.Result
	8,   // 57: chat.GetSessionsReply.result:type_name -> chat.Result
	152, // 58: chat.GetSessionsReply.sessions:type_name -> chat.Session
	8,   // 59: chat.GetSystemMessagesReply.result:type_name -> chat.Result
	153, // 60: chat.GetSystemMessagesReply.messages:type_name -> chat.SystemMessage
	8,   // 61: chat.DeleteSystemMessageReply.result:type_name -> chat.Result
	8,   // 62: chat.ApplyAddContactReply.result:type_name -> chat.Result
	8,   // 63: chat.AgreeAddContactReply.result:type_name -> chat.Result
	8,   // 64: chat.RejectAddContactReply.result:type_name -> chat.Result
	8,   // 65: chat.AgreeJoinGroupReply.result:type_name -> chat.Result
	8,   // 66: chat.RejectJoinGroupReply.result:type_name -> chat.Result
	8,   // 67: chat.GetConfigReply.result:type_name -> chat.Result
	137, // 68: chat.GetConfigReply.config:type_name -> chat.Config
	8,   // 69: chat.SetBootstrapsReply.result:type_name -> chat.Result
	8,   // 70: chat.SetPeeringPeersReply.result:type_name -> chat.Result
	8,   // 71: chat.SetEnableMDNSReply.result:type_name -> chat.Result
	8,   // 72: chat.SetEnableDepositServiceReply.result:type_name -> chat.Result
	8,   // 73: chat.SetDownloadDirReply.result:type_name -> chat.Result
	8,   // 74: chat.DownloadSessionFileReply.result:type_name -> chat.Result
	8,   // 75: chat.GetSessionFilesReply.result:type_name -> chat.Result
	155, // 76: chat.GetSessionFilesReply.files:type_name -> chat.FileInfo
	8,   // 77: chat.DeleteSessionFileReply.result:type_name -> chat.Result
	154, // 78: chat.SubscribeCommonEventReply.event:type_name -> chat.CommonEvent
	8,   // 79: chat.DecodeQRCodeTokenReply.result:type_name -> chat.Result
	156, // 80: chat.DecodeQRCodeTokenReply.token:type_name -> chat.QRCodeToken
	2,   // 81: chat.Contact.onlineState:type_name -> chat.ConnState
	140, // 82: chat.ContactMessage.fromContact:type_name -> chat.Contact
	0,   // 83: chat.ContactMessage.msgType:type_name -> chat.MsgType
	1,   // 84: chat.ContactMessage.state:type_name -> chat.MsgState
	2,   // 85: chat.GroupMember.onlineState:type_name -> chat.ConnState
	139, // 86: chat.GroupMessage.sender:type_name -> chat.Peer
	0,   // 87: chat.GroupMessage.msgType:type_name -> chat.MsgType
	1,   // 88: chat.GroupMessage.state:type_name -> chat.MsgState
	4,   // 89: chat.Session.type:type_name -> chat.Session.SessionType
	2,   // 90: chat.Session.state:type_name -> chat.ConnState
	5,   // 91: chat.SystemMessage.systemType:type_name -> chat.SystemMessage.SystemType
	139, // 92: chat.SystemMessage.fromPeer:type_name -> chat.Peer
	6,   // 93: chat.CommonEvent.type:type_name -> chat.CommonEvent.EventType
	3,   // 94: chat.FileInfo.fileType:type_name -> chat.FileType
	7,   // 95: chat.QRCodeToken.tokenType:type_name -> chat.QRCodeToken.TokenType
	9,   // 96: chat.AccountSvc.CreateAccount:input_type -> chat.CreateAccountRequest
	11,  // 97: chat.AccountSvc.GetAccount:input_type -> chat.GetAccountRequest
	15,  // 98: chat.AccountSvc.SetAccountName:input_type -> chat.SetAccountNameRequest
	13,  // 99: chat.AccountSvc.SetAccountAvatar:input_type -> chat.SetAccountAvatarRequest
	17,  // 100: chat.AccountSvc.SetAutoAddContact:input_type -> chat.SetAutoAddContactRequest
	19,  // 101: chat.AccountSvc.SetAutoJoinGroup:input_type -> chat.SetAutoJoinGroupRequest
	21,  // 102: chat.AccountSvc.SetAutoDepositMessage:input_type -> chat.SetAutoDepositMessageRequest
	23,  // 103: chat.AccountSvc.SetAccountDepositAddress:input_type -> chat.SetAccountDepositAddressRequest
	25,  // 104: chat.AccountSvc.GetAccountQRCodeToken:input_type -> chat.GetAccountQRCodeTokenRequest
	27,  // 105: chat.ContactSvc.GetContact:input_type -> chat.GetContactRequest
	29,  // 106: chat.ContactSvc.GetContacts:input_type -> chat.GetContactsRequest
	31,  // 107: chat.ContactSvc.GetSpecifiedContacts:input_type -> chat.GetSpecifiedContactsRequest
	33,  // 108: chat.ContactSvc.GetNearbyPeers:input_type -> chat.GetNearbyPeersRequest
	35,  // 109: chat.ContactSvc.GetContactMessage:input_type -> chat.GetContactMessageRequest
	37,  // 110: chat.ContactSvc.GetContactMessages:input_type -> chat.GetContactMessagesRequest
	48,  // 111: chat.ContactSvc.ClearContactMessage:input_type -> chat.ClearContactMessageRequest
	46,  // 112: chat.ContactSvc.SetContactName:input_type -> chat.SetContactNameRequest
	50,  // 113: chat.ContactSvc.DeleteContact:input_type -> chat.DeleteContactRequest
	105, // 114: chat.ContactSvc.ApplyAddContact:input_type -> chat.ApplyAddContactRequest
	52,  // 115: chat.ContactSvc.GetContactQRCodeToken:input_type -> chat.GetContactQRCodeTokenRequest
	39,  // 116: chat.ContactSvc.SendContactTextMessage:input_type -> chat.SendContactTextMessageRequest
	40,  // 117: chat.ContactSvc.SendContactImageMessage:input_type -> chat.SendContactImageMessageRequest
	41,  // 118: chat.ContactSvc.SendContactVoiceMessage:input_type -> chat.SendContactVoiceMessageRequest
	42,  // 119: chat.ContactSvc.SendContactAudioMessage:input_type -> chat.SendContactAudioMessageRequest
	43,  // 120: chat.ContactSvc.SendContactVideoMessage:input_type -> chat.SendContactVideoMessageRequest
	44,  // 121: chat.ContactSvc.SendContactFileMessage:input_type -> chat.SendContactFileMessageRequest
	54,  // 122: chat.GroupSvc.CreateGroup:input_type -> chat.CreateGroupRequest
	56,  // 123: chat.GroupSvc.GetGroup:input_type -> chat.GetGroupRequest
	58,  // 124: chat.GroupSvc.GetGroupDetail:input_type -> chat.GetGroupDetailRequest
	60,  // 125: chat.GroupSvc.GetGroups:input_type -> chat.GetGroupsRequest
	75,  // 126: chat.GroupSvc.SetGroupName:input_type -> chat.SetGroupNameRequest
	73,  // 127: chat.GroupSvc.SetGroupAvatar:input_type -> chat.SetGroupAvatarRequest
	77,  // 128: chat.GroupSvc.SetGroupNotice:input_type -> chat.SetGroupNoticeRequest
	85,  // 129: chat.GroupSvc.SetGroupAutoJoin:input_type -> chat.SetGroupAutoJoinRequest
	87,  // 130: chat.GroupSvc.SetGroupDepositAddress:input_type -> chat.SetGroupDepositAddressRequest
	91,  // 131: chat.GroupSvc.ExitGroup:input_type -> chat.ExitGroupRequest
	93,  // 132: chat.GroupSvc.DeleteGroup:input_type -> chat.DeleteGroupRequest
	95,  // 133: chat.GroupSvc.DisbandGroup:input_type -> chat.DisbandGroupRequest
	81,  // 134: chat.GroupSvc.GetGroupMembers:input_type -> chat.GetGroupMembersRequest
	83,  // 135: chat.GroupSvc.RemoveGroupMember:input_type -> chat.RemoveGroupMemberRequest
	62,  // 136: chat.GroupSvc.GetGroupMessage:input_type -> chat.GetGroupMessageRequest
	64,  // 137: chat.GroupSvc.GetGroupMessages:input_type -> chat.GetGroupMessagesRequest
	89,  // 138: chat.GroupSvc.ClearGroupMessage:input_type -> chat.ClearGroupMessageRequest
	97,  // 139: chat.GroupSvc.GetGroupQRCodeToken:input_type -> chat.GetGroupQRCodeTokenRequest
	66,  // 140: chat.GroupSvc.SendGroupTextMessage:input_type -> chat.SendGroupTextMessageRequest
	67,  // 141: chat.GroupSvc.SendGroupImageMessage:input_type -> chat.SendGroupImageMessageRequest
	68,  // 142: chat.GroupSvc.SendGroupVoiceMessage:input_type -> chat.SendGroupVoiceMessageRequest
	69,  // 143: chat.GroupSvc.SendGroupAudioMessage:input_type -> chat.SendGroupAudioMessageRequest
	70,  // 144: chat.GroupSvc.SendGroupVideoMessage:input_type -> chat.SendGroupVideoMessageRequest
	71,  // 145: chat.GroupSvc.SendGroupFileMessage:input_type -> chat.SendGroupFileMessageRequest
	99,  // 146: chat.SessionSvc.GetSessions:input_type -> chat.GetSessionsRequest
	101, // 147: chat.SystemSvc.GetSystemMessages:input_type -> chat.GetSystemMessagesRequest
	107, // 148: chat.SystemSvc.AgreeAddContact:input_type -> chat.AgreeAddContactRequest
	109, // 149: chat.SystemSvc.RejectAddContact:input_type -> chat.RejectAddContactRequest
	111, // 150: chat.SystemSvc.AgreeJoinGroup:input_type -> chat.AgreeJoinGroupRequest
	113, // 151: chat.SystemSvc.RejectJoinGroup:input_type -> chat.RejectJoinGroupRequest
	103, // 152: chat.SystemSvc.DeleteSystemMessage:input_type -> chat.DeleteSystemMessageRequest
	115, // 153: chat.ConfigSvc.GetConfig:input_type -> chat.GetConfigRequest
	117, // 154: chat.ConfigSvc.SetBootstraps:input_type -> chat.SetBootstrapsRequest
	119, // 155: chat.ConfigSvc.SetPeeringPeers:input_type -> chat.SetPeeringPeersRequest
	121, // 156: chat.ConfigSvc.SetEnableMDNS:input_type -> chat.SetEnableMDNSRequest
	123, // 157: chat.ConfigSvc.SetEnableDepositService:input_type -> chat.SetEnableDepositServiceRequest
	125, // 158: chat.ConfigSvc.SetDownloadDir:input_type -> chat.SetDownloadDirRequest
	127, // 159: chat.FileSvc.DownloadSessionFile:input_type -> chat.DownloadSessionFileRequest
	129, // 160: chat.FileSvc.GetSessionFiles:input_type -> chat.GetSessionFilesRequest
	131, // 161: chat.FileSvc.DeleteSessionFile:input_type -> chat.DeleteSessionFileRequest
	133, // 162: chat.SubscribeSvc.SubscribeCommonEvent:input_type -> chat.SubscribeCommonEventRequest
	135, // 163: chat.CommonSvc.DecodeQRCodeToken:input_type -> chat.DecodeQRCodeTokenRequest
	10,  // 164: chat.AccountSvc.CreateAccount:output_type -> chat.CreateAccountReply
	12,  // 165: chat.AccountSvc.GetAccount:output_type -> chat.GetAccountReply
	16,  // 166: chat.AccountSvc.SetAccountName:output_type -> chat.SetAccountNameReply
	14,  // 167: chat.AccountSvc.SetAccountAvatar:output_type -> chat.SetAccountAvatarReply
	18,  // 168: chat.AccountSvc.SetAutoAddContact:output_type -> chat.SetAutoAddContactReply
	20,  // 169: chat.AccountSvc.SetAutoJoinGroup:output_type -> chat.SetAutoJoinGroupReply
	22,  // 170: chat.AccountSvc.SetAutoDepositMessage:output_type -> chat.SetAutoDepositMessageReply
	24,  // 171: chat.AccountSvc.SetAccountDepositAddress:output_type -> chat.SetAccountDepositAddressReply
	26,  // 172: chat.AccountSvc.GetAccountQRCodeToken:output_type -> chat.GetAccountQRCodeTokenReply
	28,  // 173: chat.ContactSvc.GetContact:output_type -> chat.GetContactReply
	30,  // 174: chat.ContactSvc.GetContacts:output_type -> chat.GetContactsReply
	32,  // 175: chat.ContactSvc.GetSpecifiedContacts:output_type -> chat.GetSpecifiedContactsReply
	34,  // 176: chat.ContactSvc.GetNearbyPeers:output_type -> chat.GetNearbyPeersStreamReply
	36,  // 177: chat.ContactSvc.GetContactMessage:output_type -> chat.GetContactMessageReply
	38,  // 178: chat.ContactSvc.GetContactMessages:output_type -> chat.GetContactMessagesReply
	49,  // 179: chat.ContactSvc.ClearContactMessage:output_type -> chat.ClearContactMessageReply
	47,  // 180: chat.ContactSvc.SetContactName:output_type -> chat.SetContactNameReply
	51,  // 181: chat.ContactSvc.DeleteContact:output_type -> chat.DeleteContactReply
	106, // 182: chat.ContactSvc.ApplyAddContact:output_type -> chat.ApplyAddContactReply
	53,  // 183: chat.ContactSvc.GetContactQRCodeToken:output_type -> chat.GetContactQRCodeTokenReply
	45,  // 184: chat.ContactSvc.SendContactTextMessage:output_type -> chat.SendContactMessageReply
	45,  // 185: chat.ContactSvc.SendContactImageMessage:output_type -> chat.SendContactMessageReply
	45,  // 186: chat.ContactSvc.SendContactVoiceMessage:output_type -> chat.SendContactMessageReply
	45,  // 187: chat.ContactSvc.SendContactAudioMessage:output_type -> chat.SendContactMessageReply
	45,  // 188: chat.ContactSvc.SendContactVideoMessage:output_type -> chat.SendContactMessageReply
	45,  // 189: chat.ContactSvc.SendContactFileMessage:output_type -> chat.SendContactMessageReply
	55,  // 190: chat.GroupSvc.CreateGroup:output_type -> chat.CreateGroupReply
	57,  // 191: chat.GroupSvc.GetGroup:output_type -> chat.GetGroupReply
	59,  // 192: chat.GroupSvc.GetGroupDetail:output_type -> chat.GetGroupDetailReply
	61,  // 193: chat.GroupSvc.GetGroups:output_type -> chat.GetGroupsReply
	76,  // 194: chat.GroupSvc.SetGroupName:output_type -> chat.SetGroupNameReply
	74,  // 195: chat.GroupSvc.SetGroupAvatar:output_type -> chat.SetGroupAvatarReply
	78,  // 196: chat.GroupSvc.SetGroupNotice:output_type -> chat.SetGroupNoticeReply
	86,  // 197: chat.GroupSvc.SetGroupAutoJoin:output_type -> chat.SetGroupAutoJoinReply
	88,  // 198: chat.GroupSvc.SetGroupDepositAddress:output_type -> chat.SetGroupDepositAddressReply
	92,  // 199: chat.GroupSvc.ExitGroup:output_type -> chat.ExitGroupReply
	94,  // 200: chat.GroupSvc.DeleteGroup:output_type -> chat.DeleteGroupReply
	96,  // 201: chat.GroupSvc.DisbandGroup:output_type -> chat.DisbandGroupReply
	82,  // 202: chat.GroupSvc.GetGroupMembers:output_type -> chat.GetGroupMembersReply
	84,  // 203: chat.GroupSvc.RemoveGroupMember:output_type -> chat.RemoveGroupMemberReply
	63,  // 204: chat.GroupSvc.GetGroupMessage:output_type -> chat.GetGroupMessageReply
	65,  // 205: chat.GroupSvc.GetGroupMessages:output_type -> chat.GetGroupMessagesReply
	90,  // 206: chat.GroupSvc.ClearGroupMessage:output_type -> chat.ClearGroupMessageReply
	98,  // 207: chat.GroupSvc.GetGroupQRCodeToken:output_type -> chat.GetGroupQRCodeTokenReply
	72,  // 208: chat.GroupSvc.SendGroupTextMessage:output_type -> chat.SendGroupMessageReply
	72,  // 209: chat.GroupSvc.SendGroupImageMessage:output_type -> chat.SendGroupMessageReply
	72,  // 210: chat.GroupSvc.SendGroupVoiceMessage:output_type -> chat.SendGroupMessageReply
	72,  // 211: chat.GroupSvc.SendGroupAudioMessage:output_type -> chat.SendGroupMessageReply
	72,  // 212: chat.GroupSvc.SendGroupVideoMessage:output_type -> chat.SendGroupMessageReply
	72,  // 213: chat.GroupSvc.SendGroupFileMessage:output_type -> chat.SendGroupMessageReply
	100, // 214: chat.SessionSvc.GetSessions:output_type -> chat.GetSessionsReply
	102, // 215: chat.SystemSvc.GetSystemMessages:output_type -> chat.GetSystemMessagesReply
	108, // 216: chat.SystemSvc.AgreeAddContact:output_type -> chat.AgreeAddContactReply
	110, // 217: chat.SystemSvc.RejectAddContact:output_type -> chat.RejectAddContactReply
	112, // 218: chat.SystemSvc.AgreeJoinGroup:output_type -> chat.AgreeJoinGroupReply
	114, // 219: chat.SystemSvc.RejectJoinGroup:output_type -> chat.RejectJoinGroupReply
	104, // 220: chat.SystemSvc.DeleteSystemMessage:output_type -> chat.DeleteSystemMessageReply
	116, // 221: chat.ConfigSvc.GetConfig:output_type -> chat.GetConfigReply
	118, // 222: chat.ConfigSvc.SetBootstraps:output_type -> chat.SetBootstrapsReply
	120, // 223: chat.ConfigSvc.SetPeeringPeers:output_type -> chat.SetPeeringPeersReply
	122, // 224: chat.ConfigSvc.SetEnableMDNS:output_type -> chat.SetEnableMDNSReply
	124, // 225: chat.ConfigSvc.SetEnableDepositService:output_type -> chat.SetEnableDepositServiceReply
	126, // 226: chat.ConfigSvc.SetDownloadDir:output_type -> chat.SetDownloadDirReply
	128, // 227: chat.FileSvc.DownloadSessionFile:output_type -> chat.DownloadSessionFileReply
	130, // 228: chat.FileSvc.GetSessionFiles:output_type -> chat.GetSessionFilesReply
	132, // 229: chat.FileSvc.DeleteSessionFile:output_type -> chat.DeleteSessionFileReply
	134, // 230: chat.SubscribeSvc.SubscribeCommonEvent:output_type -> chat.SubscribeCommonEventReply
	136, // 231: chat.CommonSvc.DecodeQRCodeToken:output_type -> chat.DecodeQRCodeTokenReply
	164, // [164:232] is the sub-list for method output_type
	96,  // [96:164] is the sub-list for method input_type
	96,  // [96:96] is the sub-list for extension type_name
	96,  // [96:96] is the sub-list for extension extendee
	0,   // [0:96] is the sub-list for field type_name
}

func init() { file_bind_grpc_proto_chat_proto_init() }
func file_bind_grpc_proto_chat_proto_init() {
	if File_bind_grpc_proto_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bind_grpc_proto_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountAvatarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountNameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoAddContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoAddContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoJoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoJoinGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoDepositMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoDepositMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountDepositAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountDepositAddressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountQRCodeTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountQRCodeTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecifiedContactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecifiedContactsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNearbyPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNearbyPeersStreamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactMessagesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactTextMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactImageMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactVoiceMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactAudioMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactVideoMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactFileMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetContactNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetContactNameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearContactMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearContactMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactQRCodeTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactQRCodeTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupDetailReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMessagesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupTextMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupImageMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupVoiceMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupAudioMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupVideoMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupFileMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupAvatarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupNameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupNoticeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteJoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteJoinGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMembersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupMemberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupAutoJoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupAutoJoinReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupDepositAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupDepositAddressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearGroupMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearGroupMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisbandGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisbandGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupQRCodeTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupQRCodeTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemMessagesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSystemMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSystemMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyAddContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyAddContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreeAddContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreeAddContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectAddContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectAddContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreeJoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreeJoinGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectJoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectJoinGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBootstrapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBootstrapsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPeeringPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPeeringPeersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEnableMDNSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEnableMDNSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEnableDepositServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEnableDepositServiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDownloadDirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDownloadDirReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadSessionFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadSessionFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionFilesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSessionFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSessionFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeCommonEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeCommonEventReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeQRCodeTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeQRCodeTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageMessagePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceMessagePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioMessagePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoMessagePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMessagePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRCodeToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonEvent_PayloadPeerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonEvent_PayloadGroupMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_grpc_proto_chat_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonEvent_PayloadOnlineState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bind_grpc_proto_chat_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   152,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_bind_grpc_proto_chat_proto_goTypes,
		DependencyIndexes: file_bind_grpc_proto_chat_proto_depIdxs,
		EnumInfos:         file_bind_grpc_proto_chat_proto_enumTypes,
		MessageInfos:      file_bind_grpc_proto_chat_proto_msgTypes,
	}.Build()
	File_bind_grpc_proto_chat_proto = out.File
	file_bind_grpc_proto_chat_proto_rawDesc = nil
	file_bind_grpc_proto_chat_proto_goTypes = nil
	file_bind_grpc_proto_chat_proto_depIdxs = nil
}
